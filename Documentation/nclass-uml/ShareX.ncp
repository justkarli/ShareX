<Project>
  <Name>ShareX</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>ShareX.exe</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>BeforeUploadControl</Name>
        <Access>Public</Access>
        <Location left="1863" top="5136" />
        <Size width="162" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private FlowLayoutPanel flp</Member>
        <Member type="Event">public event EventHandler InitCompleted</Member>
        <Member type="Constructor">public BeforeUploadControl()</Member>
        <Member type="Method">public Void Init(TaskInfo info)</Member>
        <Member type="Method">public Void InitCapture(TaskSettings taskSettings)</Member>
        <Member type="Method">private Void OnInitCompleted()</Member>
        <Member type="Method">private Void AddDestination(Int32 index, EDataType dataType, TaskSettings taskSettings)</Member>
        <Member type="Method">private Void SetDestinations(Boolean isActive, EDataType dataType, Object destination, TaskSettings taskSettings)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BeforeUploadForm</Name>
        <Access>Public</Access>
        <Location left="2101" top="5136" />
        <Size width="162" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private BeforeUploadControl ucBeforeUpload</Member>
        <Member type="Field">private Button btnOK</Member>
        <Member type="Field">private Button btnCancel</Member>
        <Member type="Field">private Label lblTitle</Member>
        <Member type="Field">private MyPictureBox pbPreview</Member>
        <Member type="Constructor">public BeforeUploadForm(TaskInfo info)</Member>
        <Member type="Method">private Void btnOK_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCancel_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ClipboardFormatForm</Name>
        <Access>Public</Access>
        <Location left="2307" top="5136" />
        <Size width="162" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private TextBox txtFormat</Member>
        <Member type="Field">private TextBox txtDescription</Member>
        <Member type="Field">private Label lblFilter</Member>
        <Member type="Field">private Label lblFolderPath</Member>
        <Member type="Field">private Label lblExample</Member>
        <Member type="Field">private Button btnCancel</Member>
        <Member type="Field">private Button btnOK</Member>
        <Member type="Property">public ClipboardFormat ClipboardFormat { get; private set; }</Member>
        <Member type="Constructor">public ClipboardFormatForm()</Member>
        <Member type="Constructor">public ClipboardFormatForm(ClipboardFormat cbf)</Member>
        <Member type="Method">private Void btnOK_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCancel_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EncoderProgramForm</Name>
        <Access>Public</Access>
        <Location left="2513" top="5136" />
        <Size width="162" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private TextBox txtExtension</Member>
        <Member type="Field">private Label lblExt</Member>
        <Member type="Field">private TextBox txtArguments</Member>
        <Member type="Field">private TextBox txtPath</Member>
        <Member type="Field">private TextBox txtName</Member>
        <Member type="Field">protected Label lblArgs</Member>
        <Member type="Field">protected Label lblPath</Member>
        <Member type="Field">protected Label lblName</Member>
        <Member type="Field">private Button btnPathBrowse</Member>
        <Member type="Field">private Button btnCancel</Member>
        <Member type="Field">private Button btnOK</Member>
        <Member type="Property">public VideoEncoder encoder { get; private set; }</Member>
        <Member type="Constructor">public EncoderProgramForm()</Member>
        <Member type="Constructor">public EncoderProgramForm(VideoEncoder encoder)</Member>
        <Member type="Method">private Void btnPathBrowse_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnOK_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCancel_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AfterCaptureForm</Name>
        <Access>Public</Access>
        <Location left="1641" top="5118" />
        <Size width="162" height="519" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private MyPictureBox pbImage</Member>
        <Member type="Field">private ListView lvAfterCaptureTasks</Member>
        <Member type="Field">private ColumnHeader chAfterCapture</Member>
        <Member type="Field">private Button btnContinue</Member>
        <Member type="Field">private Button btnCancel</Member>
        <Member type="Field">private Button btnCopy</Member>
        <Member type="Field">private TabControl tcTasks</Member>
        <Member type="Field">private TabPage tpAfterCapture</Member>
        <Member type="Field">private TabPage tpBeforeUpload</Member>
        <Member type="Field">private BeforeUploadControl ucBeforeUpload</Member>
        <Member type="Property">public AfterCaptureTasks AfterCaptureTasks { get; private set; }</Member>
        <Member type="Property">public AfterCaptureFormResult Result { get; private set; }</Member>
        <Member type="Constructor">public AfterCaptureForm(Image img, TaskSettings taskSettings)</Member>
        <Member type="Method">private Void AddAfterCaptureItems(AfterCaptureTasks afterCaptureTasks)</Member>
        <Member type="Method">private Void CheckItem(ListViewItem lvi, Boolean check)</Member>
        <Member type="Method">private Boolean IsChecked(ListViewItem lvi)</Member>
        <Member type="Method">private AfterCaptureTasks GetAfterCaptureTasks()</Member>
        <Member type="Method">private Void Close(AfterCaptureFormResult result)</Member>
        <Member type="Method">private Void lvAfterCaptureTasks_ItemSelectionChanged(Object sender, ListViewItemSelectionChangedEventArgs e)</Member>
        <Member type="Method">private Void lvAfterCaptureTasks_MouseDown(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void btnContinue_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCancel_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCopy_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AutoCaptureForm</Name>
        <Access>Public</Access>
        <Location left="1429" top="5118" />
        <Size width="162" height="893" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Boolean isLoaded</Member>
        <Member type="Field">private Timer statusTimer</Member>
        <Member type="Field">private Timer screenshotTimer</Member>
        <Member type="Field">private Int32 delay</Member>
        <Member type="Field">private Int32 count</Member>
        <Member type="Field">private Int32 timeleft</Member>
        <Member type="Field">private Int32 percentage</Member>
        <Member type="Field">private Boolean waitUploads</Member>
        <Member type="Field">private Stopwatch stopwatch</Member>
        <Member type="Field">private Rectangle customRegion</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private StatusStrip ssBar</Member>
        <Member type="Field">private ToolStripProgressBar tspbBar</Member>
        <Member type="Field">private Button btnExecute</Member>
        <Member type="Field">private CheckBox cbWaitUploads</Member>
        <Member type="Field">private ToolStripStatusLabel tsslStatus</Member>
        <Member type="Field">private CheckBox cbAutoMinimize</Member>
        <Member type="Field">private Label lblRegion</Member>
        <Member type="Field">private Button btnRegion</Member>
        <Member type="Field">private NumericUpDown nudRepeatTime</Member>
        <Member type="Field">private Label lblDuration</Member>
        <Member type="Field">private NotifyIcon niTray</Member>
        <Member type="Field">private Label lblDurationSeconds</Member>
        <Member type="Field">private GroupBox gbRegion</Member>
        <Member type="Field">private RadioButton rbFullscreen</Member>
        <Member type="Field">private RadioButton rbCustomRegion</Member>
        <Member type="Field">private static AutoCaptureForm instance</Member>
        <Member type="Property">public static AutoCaptureForm Instance { get; }</Member>
        <Member type="Property">public static Boolean IsRunning { get; private set; }</Member>
        <Member type="Constructor">private AutoCaptureForm()</Member>
        <Member type="Method">private Void screenshotTimer_Elapsed(Object sender, ElapsedEventArgs e)</Member>
        <Member type="Method">private Void TakeScreenshot()</Member>
        <Member type="Method">private Void SelectRegion(TaskSettings taskSettings)</Member>
        <Member type="Method">private Void UpdateRegion()</Member>
        <Member type="Method">private Void UpdateStatus()</Member>
        <Member type="Method">public Void Execute()</Member>
        <Member type="Method">private Void rbFullscreen_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void rbCustomRegion_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnRegion_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudDuration_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbAutoMinimize_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbWaitUploads_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnExecute_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void AutoCapture_FormClosing(Object sender, FormClosingEventArgs e)</Member>
        <Member type="Method">private Void AutoCapture_Resize(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void niTray_MouseClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DropForm</Name>
        <Access>Public</Access>
        <Location left="1217" top="5118" />
        <Size width="162" height="400" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Bitmap backgroundImage</Member>
        <Member type="Field">private Boolean isHovered</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private static DropForm instance</Member>
        <Member type="Property">public Int32 DropSize { get; set; }</Member>
        <Member type="Property">public Int32 DropOffset { get; set; }</Member>
        <Member type="Property">public ContentAlignment DropAlignment { get; set; }</Member>
        <Member type="Property">public Int32 DropOpacity { get; set; }</Member>
        <Member type="Property">public Int32 DropHoverOpacity { get; set; }</Member>
        <Member type="Constructor">private DropForm(Int32 size, Int32 offset, ContentAlignment alignment, Int32 opacity, Int32 hoverOpacity)</Member>
        <Member type="Method">public static DropForm GetInstance(Int32 size, Int32 offset, ContentAlignment alignment, Int32 opacity, Int32 hoverOpacity)</Member>
        <Member type="Method">private Bitmap DrawDropImage(Int32 size)</Member>
        <Member type="Method">private Void DropForm_MouseDown(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void DropForm_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void DropForm_DragEnter(Object sender, DragEventArgs e)</Member>
        <Member type="Method">private Void DropForm_DragDrop(Object sender, DragEventArgs e)</Member>
        <Member type="Method">private Void DropForm_DragLeave(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ActionsForm</Name>
        <Access>Public</Access>
        <Location left="1005" top="5118" />
        <Size width="162" height="451" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label lblName</Member>
        <Member type="Field">private Label lblPath</Member>
        <Member type="Field">private Label lblArgs</Member>
        <Member type="Field">private TextBox txtName</Member>
        <Member type="Field">private TextBox txtPath</Member>
        <Member type="Field">private TextBox txtArguments</Member>
        <Member type="Field">private Button btnPathBrowse</Member>
        <Member type="Field">private Button btnOK</Member>
        <Member type="Field">private Button btnCancel</Member>
        <Member type="Field">private Label lblExtensions</Member>
        <Member type="Field">private TextBox txtExtensions</Member>
        <Member type="Field">private TextBox txtOutputExtension</Member>
        <Member type="Field">private Label lblOutputExtension</Member>
        <Member type="Property">public ExternalProgram FileAction { get; private set; }</Member>
        <Member type="Constructor">public ActionsForm()</Member>
        <Member type="Constructor">public ActionsForm(ExternalProgram fileAction)</Member>
        <Member type="Method">private Void btnPathBrowse_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnOK_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCancel_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>FileExistForm</Name>
        <Access>Public</Access>
        <Location left="793" top="5118" />
        <Size width="162" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private String filename</Member>
        <Member type="Field">private String uniqueFilepath</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label lblTitle</Member>
        <Member type="Field">private Button btnOverwrite</Member>
        <Member type="Field">private Button btnCancel</Member>
        <Member type="Field">private Button btnUniqueName</Member>
        <Member type="Field">private Button btnNewName</Member>
        <Member type="Field">private TextBox txtNewName</Member>
        <Member type="Property">public String Filepath { get; private set; }</Member>
        <Member type="Constructor">public FileExistForm(String filepath)</Member>
        <Member type="Method">private Void FileExistForm_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">private String GetNewFilename()</Member>
        <Member type="Method">private Void btnNewName_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtNewName_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnOverwrite_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnUniqueName_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCancel_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AboutForm</Name>
        <Access>Public</Access>
        <Location left="581" top="5118" />
        <Size width="162" height="893" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 step</Member>
        <Member type="Field">private Int32 direction</Member>
        <Member type="Field">private Color lineColor</Member>
        <Member type="Field">private Boolean isPaused</Member>
        <Member type="Field">private Int32 clickCount</Member>
        <Member type="Field">private Boolean isEasterEggStarted</Member>
        <Member type="Field">private Rectangle screenRect</Member>
        <Member type="Field">private Timer bounceTimer</Member>
        <Member type="Field">private Point windowVelocity</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label lblProductName</Member>
        <Member type="Field">private Label lblBerk</Member>
        <Member type="Field">private PictureBox pbTR</Member>
        <Member type="Field">private PictureBox pbBerkURL</Member>
        <Member type="Field">private PictureBox pbMikeURL</Member>
        <Member type="Field">private PictureBox pbAU</Member>
        <Member type="Field">private Label lblMike</Member>
        <Member type="Field">private Canvas cLogo</Member>
        <Member type="Field">private PictureBox pbBerkSteamURL</Member>
        <Member type="Field">private RichTextBox rtbCredits</Member>
        <Member type="Field">private RichTextBox rtbShareXInfo</Member>
        <Member type="Field">private Label lblOwners</Member>
        <Member type="Field">private UpdateCheckerLabel uclUpdate</Member>
        <Member type="Field">private PictureBox pbMikeGooglePlus</Member>
        <Member type="Field">private const Int32 w = 200</Member>
        <Member type="Field">private const Int32 h = 200</Member>
        <Member type="Field">private const Int32 mX = 100</Member>
        <Member type="Field">private const Int32 mY = 100</Member>
        <Member type="Field">private const Int32 minStep = 3</Member>
        <Member type="Field">private const Int32 maxStep = 30</Member>
        <Member type="Field">private const Int32 speed = 1</Member>
        <Member type="Field">private const Int32 windowGravityPower = 3</Member>
        <Member type="Field">private const Int32 windowBouncePower = -50</Member>
        <Member type="Field">private const Int32 windowSpeed = 20</Member>
        <Member type="Constructor">public AboutForm()</Member>
        <Member type="Method">private Void AboutForm_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lblProductName_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void pbBerkURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void pbBerkSteamURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void pbMikeURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void pbMikeGooglePlus_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void rtb_LinkClicked(Object sender, LinkClickedEventArgs e)</Member>
        <Member type="Method">private Void cLogo_Draw(Graphics g)</Member>
        <Member type="Method">private Void cLogo_MouseDown(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void RunEasterEgg()</Member>
        <Member type="Method">private Void bounceTimer_Tick(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScreenColorPicker</Name>
        <Access>Public</Access>
        <Location left="1471" top="1817" />
        <Size width="162" height="468" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Timer colorTimer</Member>
        <Member type="Field">private new IContainer components</Member>
        <Member type="Field">private Button btnPipette</Member>
        <Member type="Field">private Label lblScreenColorPickerTip</Member>
        <Member type="Field">private Button btnColorPicker</Member>
        <Member type="Field">private Label lblY</Member>
        <Member type="Field">private Label lblX</Member>
        <Member type="Field">private Button btnCopyAll</Member>
        <Member type="Field">private TextBox txtX</Member>
        <Member type="Field">private TextBox txtY</Member>
        <Member type="Field">private Label lblCursorPosition</Member>
        <Member type="Constructor">public ScreenColorPicker()</Member>
        <Member type="Method">private Void CopyToClipboard(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void UpdateColor(Int32 x, Int32 y)</Member>
        <Member type="Method">private Void UpdateColor(Int32 x, Int32 y, Color color)</Member>
        <Member type="Method">private Void UpdateControls(Boolean colorTimerEnable)</Member>
        <Member type="Method">private Void btnColorPicker_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnPipette_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCopyAll_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void colorTimer_Tick(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void ScreenColorPicker_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScreenRecordForm</Name>
        <Access>Public</Access>
        <Location left="2907" top="5136" />
        <Size width="162" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private ScreenRecorder screenRecorder</Member>
        <Member type="Field">private ScreenRegionForm regionForm</Member>
        <Member type="Field">private Boolean abortRequested</Member>
        <Member type="Field">private static ScreenRecordForm instance</Member>
        <Member type="Property">public Boolean IsRecording { get; private set; }</Member>
        <Member type="Property">public static ScreenRecordForm Instance { get; }</Member>
        <Member type="Constructor">private ScreenRecordForm()</Member>
        <Member type="Method">public Void StartStopRecording()</Member>
        <Member type="Method">private Void StopRecording()</Member>
        <Member type="Method">private Void TrayIcon_MouseClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">public Void StartRecording(ScreenRecordOutput outputType, TaskSettings taskSettings, Boolean skipRegionSelection = False)</Member>
        <Member type="Method">private Void DownloaderForm_InstallRequested(String filePath)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScreenRegionForm</Name>
        <Access>Public</Access>
        <Location left="2695" top="5136" />
        <Size width="162" height="570" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Color borderColor</Member>
        <Member type="Field">private Rectangle borderRectangle</Member>
        <Member type="Field">private Rectangle borderRectangle0Based</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private BlackStyleButton btnStop</Member>
        <Member type="Field">private Timer timerRefresh</Member>
        <Member type="Field">private BlackStyleLabel lblTimer</Member>
        <Member type="Field">private BlackStyleButton btnAbort</Member>
        <Member type="Field">private Panel pInfo</Member>
        <Member type="Property">public Boolean IsRecording { get; private set; }</Member>
        <Member type="Property">public Boolean IsCountdown { get; set; }</Member>
        <Member type="Property">public TimeSpan Countdown { get; set; }</Member>
        <Member type="Property">public Stopwatch Timer { get; private set; }</Member>
        <Member type="Property">public ManualResetEvent RecordResetEvent { get; set; }</Member>
        <Member type="Property">public Boolean AbortRequested { get; private set; }</Member>
        <Member type="Event">public event Action StopRequested</Member>
        <Member type="Constructor">public ScreenRegionForm(Rectangle regionRectangle)</Member>
        <Member type="Method">private Void ScreenRegionForm_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">protected Void OnStopRequested()</Member>
        <Member type="Method">public static ScreenRegionForm Show(Rectangle captureRectangle, Action stopRequested, Single duration = 0)</Member>
        <Member type="Method">public Void StartTimer()</Member>
        <Member type="Method">private Void UpdateTimer()</Member>
        <Member type="Method">protected virtual Void OnPaint(PaintEventArgs e)</Member>
        <Member type="Method">private Void timerRefresh_Tick(Object sender, EventArgs e)</Member>
        <Member type="Method">public Void StartStop()</Member>
        <Member type="Method">private Void btnStop_MouseClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void btnAbort_MouseClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ApplicationSettingsForm</Name>
        <Access>Public</Access>
        <Location left="2307" top="2817" />
        <Size width="162" height="2253" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Boolean loaded</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private TabControl tcSettings</Member>
        <Member type="Field">private TabPage tpGeneral</Member>
        <Member type="Field">private TabPage tpProxy</Member>
        <Member type="Field">private CheckBox cbSendToMenu</Member>
        <Member type="Field">private Button btnOpenPersonalFolderPath</Member>
        <Member type="Field">private CheckBox cbShowTray</Member>
        <Member type="Field">private CheckBox cbStartWithWindows</Member>
        <Member type="Field">private Label lblSaveImageSubFolderPatternPreview</Member>
        <Member type="Field">private TextBox txtSaveImageSubFolderPattern</Member>
        <Member type="Field">private Label lblSaveImageSubFolderPattern</Member>
        <Member type="Field">private CheckBox cbUseCustomScreenshotsPath</Member>
        <Member type="Field">private TabPage tpPaths</Member>
        <Member type="Field">private Button btnBrowseCustomScreenshotsPath</Member>
        <Member type="Field">private TextBox txtCustomScreenshotsPath</Member>
        <Member type="Field">private Label lblProxyHost</Member>
        <Member type="Field">private TextBox txtProxyHost</Member>
        <Member type="Field">private NumericUpDown nudProxyPort</Member>
        <Member type="Field">private Label lblProxyPort</Member>
        <Member type="Field">private Label lblProxyPassword</Member>
        <Member type="Field">private TextBox txtProxyPassword</Member>
        <Member type="Field">private Label lblProxyUsername</Member>
        <Member type="Field">private TextBox txtProxyUsername</Member>
        <Member type="Field">private CheckBox cbShellContextMenu</Member>
        <Member type="Field">private ComboBox cbProxyMethod</Member>
        <Member type="Field">private Label lblProxyMethod</Member>
        <Member type="Field">private TabPage tpUpload</Member>
        <Member type="Field">private Label cbIfUploadFailRetryOnce</Member>
        <Member type="Field">private Label lblUploadLimit</Member>
        <Member type="Field">private ComboBox cbBufferSize</Member>
        <Member type="Field">private Label lblUploadLimitHint</Member>
        <Member type="Field">private Label lblBufferSize</Member>
        <Member type="Field">private NumericUpDown nudUploadLimit</Member>
        <Member type="Field">private GroupBox gbClipboardFormats</Member>
        <Member type="Field">private Button btnClipboardFormatRemove</Member>
        <Member type="Field">private Button btnClipboardFormatAdd</Member>
        <Member type="Field">private MyListView lvClipboardFormats</Member>
        <Member type="Field">private ColumnHeader chDescription</Member>
        <Member type="Field">private ColumnHeader chFormat</Member>
        <Member type="Field">private Button btnClipboardFormatEdit</Member>
        <Member type="Field">private TabPage tpPrint</Member>
        <Member type="Field">private CheckBox cbDontShowPrintSettingDialog</Member>
        <Member type="Field">private Button btnShowImagePrintSettings</Member>
        <Member type="Field">private TabPage tpAdvanced</Member>
        <Member type="Field">private PropertyGrid pgSettings</Member>
        <Member type="Field">private CheckBox cbTaskbarProgressEnabled</Member>
        <Member type="Field">private CheckBox cbTrayIconProgressEnabled</Member>
        <Member type="Field">private CheckBox cbRememberMainFormSize</Member>
        <Member type="Field">private Label lblPreviewPersonalFolderPath</Member>
        <Member type="Field">private Button btnBrowsePersonalFolderPath</Member>
        <Member type="Field">private Label lblPersonalFolderPath</Member>
        <Member type="Field">private TextBox txtPersonalFolderPath</Member>
        <Member type="Field">private Button btnOpenScreenshotsFolder</Member>
        <Member type="Field">private Label lblNotePersonalFolderPath</Member>
        <Member type="Field">private CheckBox cbSilentRun</Member>
        <Member type="Field">private NumericUpDown nudRetryUpload</Member>
        <Member type="Field">private TableLayoutPanel tlpBackupDestinations</Member>
        <Member type="Field">private GroupBox gbSecondaryImageUploaders</Member>
        <Member type="Field">private MyListView lvSecondaryImageUploaders</Member>
        <Member type="Field">private GroupBox gbSecondaryFileUploaders</Member>
        <Member type="Field">private MyListView lvSecondaryFileUploaders</Member>
        <Member type="Field">private GroupBox gbSecondaryTextUploaders</Member>
        <Member type="Field">private MyListView lvSecondaryTextUploaders</Member>
        <Member type="Field">private TabControl tcUpload</Member>
        <Member type="Field">private TabPage tpPerformance</Member>
        <Member type="Field">private TabPage tpUploadResults</Member>
        <Member type="Field">private TabPage tpUploadRetry</Member>
        <Member type="Field">private CheckBox chkUseSecondaryUploaders</Member>
        <Member type="Field">private ColumnHeader columnHeader1</Member>
        <Member type="Field">private ColumnHeader columnHeader3</Member>
        <Member type="Field">private ColumnHeader columnHeader2</Member>
        <Member type="Field">private CheckBox cbPrintDontShowWindowsDialog</Member>
        <Member type="Field">private CheckBox cbRememberMainFormPosition</Member>
        <Member type="Field">private Label lblLanguage</Member>
        <Member type="Field">private LinkLabel llTranslators</Member>
        <Member type="Field">private TabToTreeView tttvMain</Member>
        <Member type="Field">private MenuButton btnLanguages</Member>
        <Member type="Field">private ContextMenuStrip cmsLanguages</Member>
        <Member type="Field">private const Int32 MaxBufferSizePower = 14</Member>
        <Member type="Constructor">public ApplicationSettingsForm()</Member>
        <Member type="Method">private Void LoadSettings()</Member>
        <Member type="Method">private Image GetLanguageIcon(SupportedLanguage language)</Member>
        <Member type="Method">private Void ChangeLanguage(SupportedLanguage language)</Member>
        <Member type="Method">private Void SettingsForm_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void SettingsForm_Resize(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void SettingsForm_FormClosed(Object sender, FormClosedEventArgs e)</Member>
        <Member type="Method">private Void UpdateProxyControls()</Member>
        <Member type="Method">private Void UpdatePersonalFolderPathPreview()</Member>
        <Member type="Method">private Void llTranslators_LinkClicked(Object sender, LinkLabelLinkClickedEventArgs e)</Member>
        <Member type="Method">private Void cbShowTray_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbSilentRun_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbStartWithWindows_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbSendToMenu_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbShellContextMenu_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbTrayIconProgressEnabled_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbTaskbarProgressEnabled_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbRememberMainFormPosition_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbRememberMainFormSize_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtPersonalFolderPath_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnBrowsePersonalFolderPath_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnOpenPersonalFolder_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbUseCustomScreenshotsPath_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtCustomScreenshotsPath_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnBrowseCustomScreenshotsPath_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtSaveImageSubFolderPattern_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnOpenScreenshotsFolder_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbProxyMethod_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtProxyUsername_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtProxyPassword_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtProxyHost_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudProxyPort_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudUploadLimit_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbBufferSize_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void AddClipboardFormat(ClipboardFormat cf)</Member>
        <Member type="Method">private Void ClipboardFormatsEditSelected()</Member>
        <Member type="Method">private Void lvClipboardFormats_MouseDoubleClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void btnAddClipboardFormat_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnClipboardFormatEdit_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnClipboardFormatRemove_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkUseSecondaryUploaders_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudRetryUpload_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lvSecondaryUploaders_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void cbDontShowPrintSettingDialog_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnShowImagePrintSettings_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbPrintDontShowWindowsDialog_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NotificationForm</Name>
        <Access>Public</Access>
        <Location left="2513" top="4310" />
        <Size width="162" height="519" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 windowOffset</Member>
        <Member type="Field">private Boolean isMouseInside</Member>
        <Member type="Field">private Boolean isDurationEnd</Member>
        <Member type="Field">private Boolean closingAnimation</Member>
        <Member type="Field">private Int32 closingAnimationDuration</Member>
        <Member type="Field">private Int32 closingAnimationInterval</Member>
        <Member type="Field">private Font textFont</Member>
        <Member type="Field">private Int32 textPadding</Member>
        <Member type="Field">private Int32 urlPadding</Member>
        <Member type="Field">private Size textRenderSize</Member>
        <Member type="Field">private Timer tDuration</Member>
        <Member type="Field">private Timer tOpacity</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Property">public NotificationFormConfig ToastConfig { get; private set; }</Member>
        <Member type="Constructor">public NotificationForm(Int32 duration, ContentAlignment placement, Size size, NotificationFormConfig config)</Member>
        <Member type="Method">private Void tDuration_Tick(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void DurationEnd()</Member>
        <Member type="Method">private Void StartClosing()</Member>
        <Member type="Method">private Void tOpacity_Tick(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void OnPaint(PaintEventArgs e)</Member>
        <Member type="Method">public static Void Show(Int32 duration, ContentAlignment placement, Size size, NotificationFormConfig config)</Member>
        <Member type="Method">private Void NotificationForm_MouseClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void NotificationForm_MouseEnter(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void NotificationForm_MouseLeave(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NotificationFormConfig</Name>
        <Access>Public</Access>
        <Location left="2513" top="4847" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Image Image { get; set; }</Member>
        <Member type="Property">public String Text { get; set; }</Member>
        <Member type="Property">public String FilePath { get; set; }</Member>
        <Member type="Property">public String URL { get; set; }</Member>
        <Member type="Property">public ToastClickAction Action { get; set; }</Member>
        <Member type="Constructor">public NotificationFormConfig()</Member>
        <Member type="Method">public Void Dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WatchFolderForm</Name>
        <Access>Public</Access>
        <Location left="2513" top="3891" />
        <Size width="162" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Button btnPathBrowse</Member>
        <Member type="Field">private TextBox txtFilter</Member>
        <Member type="Field">private TextBox txtFolderPath</Member>
        <Member type="Field">private Label lblFilter</Member>
        <Member type="Field">private Label lblFolderPath</Member>
        <Member type="Field">private Label lblFilterExample</Member>
        <Member type="Field">private CheckBox cbIncludeSubdirectories</Member>
        <Member type="Field">private Button btnCancel</Member>
        <Member type="Field">private Button btnOK</Member>
        <Member type="Property">public WatchFolderSettings WatchFolder { get; private set; }</Member>
        <Member type="Constructor">public WatchFolderForm()</Member>
        <Member type="Constructor">public WatchFolderForm(WatchFolderSettings watchFolder)</Member>
        <Member type="Method">private Void btnPathBrowse_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnOK_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCancel_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AfterUploadForm</Name>
        <Access>Public</Access>
        <Location left="2526" top="7124" />
        <Size width="162" height="638" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private UploadInfoParser parser</Member>
        <Member type="Field">private ListViewGroup lvgForums</Member>
        <Member type="Field">private ListViewGroup lvgHtml</Member>
        <Member type="Field">private ListViewGroup lvgWiki</Member>
        <Member type="Field">private ListViewGroup lvgLocal</Member>
        <Member type="Field">private ListViewGroup lvgCustom</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private MyPictureBox pbPreview</Member>
        <Member type="Field">private Timer tmrClose</Member>
        <Member type="Field">private Button btnOpenFolder</Member>
        <Member type="Field">private Button btnCopyImage</Member>
        <Member type="Field">private Button btnOpenLink</Member>
        <Member type="Field">private Button btnCopyLink</Member>
        <Member type="Field">private Button btnOpenFile</Member>
        <Member type="Field">private Button btnClose</Member>
        <Member type="Field">private MyListView lvClipboardFormats</Member>
        <Member type="Field">private ColumnHeader chDescription</Member>
        <Member type="Field">private ColumnHeader chFormat</Member>
        <Member type="Property">public TaskInfo Info { get; private set; }</Member>
        <Member type="Constructor">public AfterUploadForm(TaskInfo info)</Member>
        <Member type="Method">private Void AddFormat(String description, String text, ListViewGroup group)</Member>
        <Member type="Method">private Void tmrClose_Tick(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCopyImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCopyLink_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnOpenLink_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnOpenFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnFolderOpen_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnClose_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">public String GetUrlByType(LinkFormatEnum type)</Member>
        <Member type="Method">public String GetLocalFilePathAsUri(String fp)</Member>
        <Member type="Method">private Void lvClipboardFormats_MouseDoubleClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HotkeysConfig</Name>
        <Access>Public</Access>
        <Location left="1532" top="1516" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public List&lt;HotkeySettings&gt; Hotkeys</Member>
        <Member type="Constructor">public HotkeysConfig()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HotkeyManager</Name>
        <Access>Public</Access>
        <Location left="2438" top="6408" />
        <Size width="162" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public HotkeyTriggerEventHandler HotkeyTrigger</Member>
        <Member type="Field">private HotkeyForm hotkeyForm</Member>
        <Member type="Property">public List&lt;HotkeySettings&gt; Hotkeys { get; private set; }</Member>
        <Member type="Property">public Boolean IgnoreHotkeys { get; set; }</Member>
        <Member type="Constructor">public HotkeyManager(HotkeyForm form, List&lt;HotkeySettings&gt; hotkeys)</Member>
        <Member type="Method">private Void hotkeyForm_HotkeyPress(UInt16 id, Keys key, Modifiers modifier)</Member>
        <Member type="Method">protected Void OnHotkeyTrigger(HotkeySettings hotkeySetting)</Member>
        <Member type="Method">public Void RegisterHotkey(HotkeySettings hotkeySetting)</Member>
        <Member type="Method">public Void RegisterAllHotkeys()</Member>
        <Member type="Method">public Void UnregisterHotkey(HotkeySettings hotkeySetting, Boolean removeFromList = True)</Member>
        <Member type="Method">public Void UnregisterAllHotkeys(Boolean removeFromList = True)</Member>
        <Member type="Method">public Void ShowFailedHotkeys()</Member>
        <Member type="Method">public Void ResetHotkeys()</Member>
        <Member type="Method">private HotkeySettings[] GetDefaultHotkeyList()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HotkeySettings</Name>
        <Access>Public</Access>
        <Location left="1332" top="1516" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public HotkeyInfo HotkeyInfo { get; set; }</Member>
        <Member type="Property">public TaskSettings TaskSettings { get; set; }</Member>
        <Member type="Constructor">public HotkeySettings()</Member>
        <Member type="Constructor">public HotkeySettings(HotkeyType job, Keys hotkey = 0)</Member>
        <Member type="Method">public override String ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HotkeyForm</Name>
        <Access>Public</Access>
        <Location left="2935" top="6460" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Stopwatch repeatLimitTimer</Member>
        <Member type="Property">public Int32 HotkeyRepeatLimit { get; set; }</Member>
        <Member type="Event">public event HotkeyEventHandler HotkeyPress</Member>
        <Member type="Constructor">public HotkeyForm()</Member>
        <Member type="Method">public Void RegisterHotkey(HotkeyInfo hotkeyInfo)</Member>
        <Member type="Method">public Boolean UnregisterHotkey(HotkeyInfo hotkeyInfo)</Member>
        <Member type="Method">protected virtual Void WndProc(ref Message m)</Member>
        <Member type="Method">protected Void OnKeyPressed(UInt16 id, Keys key, Modifiers modifier)</Member>
        <Member type="Method">private Boolean CheckRepeatLimitTime()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HotkeyInfo</Name>
        <Access>Public</Access>
        <Location left="1438" top="1118" />
        <Size width="162" height="366" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Keys Hotkey { get; set; }</Member>
        <Member type="Property">public UInt16 ID { get; set; }</Member>
        <Member type="Property">public HotkeyStatus Status { get; set; }</Member>
        <Member type="Property">public Keys KeyCode { get; }</Member>
        <Member type="Property">public Keys ModifiersKeys { get; }</Member>
        <Member type="Property">public Boolean Control { get; }</Member>
        <Member type="Property">public Boolean Shift { get; }</Member>
        <Member type="Property">public Boolean Alt { get; }</Member>
        <Member type="Property">public Boolean Win { get; set; }</Member>
        <Member type="Property">public Modifiers ModifiersEnum { get; }</Member>
        <Member type="Property">public Boolean IsOnlyModifiers { get; }</Member>
        <Member type="Property">public Boolean IsValidHotkey { get; }</Member>
        <Member type="Constructor">public HotkeyInfo()</Member>
        <Member type="Constructor">public HotkeyInfo(Keys hotkey)</Member>
        <Member type="Constructor">public HotkeyInfo(Keys hotkey, UInt16 id)</Member>
        <Member type="Method">public override String ToString()</Member>
        <Member type="Method">private String ToStringWithSpaces(Keys key)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HotkeySelectionControl</Name>
        <Access>Public</Access>
        <Location left="2090" top="6551" />
        <Size width="162" height="604" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Boolean selected</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label lblHotkeyStatus</Member>
        <Member type="Field">private Label lblHotkeyDescription</Member>
        <Member type="Field">private Button btnHotkey</Member>
        <Member type="Property">public HotkeySettings Setting { get; set; }</Member>
        <Member type="Property">public Boolean Selected { get; set; }</Member>
        <Member type="Property">public Boolean Editing { get; private set; }</Member>
        <Member type="Event">public event EventHandler HotkeyChanged</Member>
        <Member type="Event">public event EventHandler SelectedChanged</Member>
        <Member type="Event">public event EventHandler LabelDoubleClick</Member>
        <Member type="Constructor">public HotkeySelectionControl(HotkeySettings setting)</Member>
        <Member type="Method">public Void UpdateDescription()</Member>
        <Member type="Method">private Void UpdateHotkeyText()</Member>
        <Member type="Method">private Void UpdateHotkeyStatus()</Member>
        <Member type="Method">private Void btnHotkey_PreviewKeyDown(Object sender, PreviewKeyDownEventArgs e)</Member>
        <Member type="Method">private Void btnHotkey_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void btnHotkey_KeyUp(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void btnHotkey_MouseClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void btnHotkey_Leave(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void StartEditing()</Member>
        <Member type="Method">private Void StopEditing()</Member>
        <Member type="Method">protected Void OnHotkeyChanged()</Member>
        <Member type="Method">protected Void OnSelectedChanged()</Member>
        <Member type="Method">protected Void OnLabelDoubleClick()</Member>
        <Member type="Method">private Void lblHotkeyDescription_MouseEnter(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lblHotkeyDescription_MouseLeave(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lblHotkeyDescription_MouseClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void lblHotkeyDescription_MouseDoubleClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaskSettingsForm</Name>
        <Access>Public</Access>
        <Location left="77" top="1144" />
        <Size width="162" height="4293" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private ToolStripDropDownItem tsmiImageFileUploaders</Member>
        <Member type="Field">private ToolStripDropDownItem tsmiTextFileUploaders</Member>
        <Member type="Field">private Boolean loaded</Member>
        <Member type="Field">private readonly String ConfigureEncoder</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private MenuButton btnAfterCapture</Member>
        <Member type="Field">private ContextMenuStrip cmsAfterCapture</Member>
        <Member type="Field">private MenuButton btnAfterUpload</Member>
        <Member type="Field">private MenuButton btnDestinations</Member>
        <Member type="Field">private ContextMenuStrip cmsAfterUpload</Member>
        <Member type="Field">private CheckBox cbUseDefaultAfterCaptureSettings</Member>
        <Member type="Field">private CheckBox cbUseDefaultAfterUploadSettings</Member>
        <Member type="Field">private CheckBox cbUseDefaultDestinationSettings</Member>
        <Member type="Field">private Label lblDescription</Member>
        <Member type="Field">private TextBox tbDescription</Member>
        <Member type="Field">private MenuButton btnTask</Member>
        <Member type="Field">private ContextMenuStrip cmsTask</Member>
        <Member type="Field">private TabControl tcTaskSettings</Member>
        <Member type="Field">private TabPage tpImage</Member>
        <Member type="Field">private TabPage tpCapture</Member>
        <Member type="Field">private TabControl tcImage</Member>
        <Member type="Field">private TabPage tpQuality</Member>
        <Member type="Field">private Label lblImageFormat</Member>
        <Member type="Field">private Label lblUseImageFormat2AfterHint</Member>
        <Member type="Field">private ComboBox cbImageFormat</Member>
        <Member type="Field">private Label lblImageJPEGQualityHint</Member>
        <Member type="Field">private Label lblImageJPEGQuality</Member>
        <Member type="Field">private ComboBox cbImageGIFQuality</Member>
        <Member type="Field">private Label lblImageGIFQuality</Member>
        <Member type="Field">private ComboBox cbImageFormat2</Member>
        <Member type="Field">private NumericUpDown nudImageJPEGQuality</Member>
        <Member type="Field">private Label lblImageFormat2</Member>
        <Member type="Field">private NumericUpDown nudUseImageFormat2After</Member>
        <Member type="Field">private Label lblUseImageFormat2After</Member>
        <Member type="Field">private TabPage tpEffects</Member>
        <Member type="Field">private TabControl tcCapture</Member>
        <Member type="Field">private TabPage tpCaptureGeneral</Member>
        <Member type="Field">private CheckBox cbCaptureAutoHideTaskbar</Member>
        <Member type="Field">private Label lblScreenshotDelayInfo</Member>
        <Member type="Field">private NumericUpDown nudScreenshotDelay</Member>
        <Member type="Field">private CheckBox cbScreenshotDelay</Member>
        <Member type="Field">private NumericUpDown nudCaptureShadowOffset</Member>
        <Member type="Field">private CheckBox cbCaptureClientArea</Member>
        <Member type="Field">private CheckBox cbCaptureShadow</Member>
        <Member type="Field">private CheckBox cbShowCursor</Member>
        <Member type="Field">private CheckBox cbCaptureTransparent</Member>
        <Member type="Field">private TabPage tpRegionCapture</Member>
        <Member type="Field">private TabPage tpScreenRecorder</Member>
        <Member type="Field">private TabPage tpTask</Member>
        <Member type="Field">private TabPage tpActions</Member>
        <Member type="Field">private Button btnActionsEdit</Member>
        <Member type="Field">private Button btnActionsRemove</Member>
        <Member type="Field">private Button btnActionsAdd</Member>
        <Member type="Field">private MyListView lvActions</Member>
        <Member type="Field">private ColumnHeader chActionsName</Member>
        <Member type="Field">private ColumnHeader chActionsPath</Member>
        <Member type="Field">private ColumnHeader chActionsArgs</Member>
        <Member type="Field">private TabPage tpUpload</Member>
        <Member type="Field">private TabControl tcUpload</Member>
        <Member type="Field">private TabPage tpUploadNamePattern</Member>
        <Member type="Field">private CheckBox cbFileUploadUseNamePattern</Member>
        <Member type="Field">private Label lblNameFormatPattern</Member>
        <Member type="Field">private TextBox txtNameFormatPatternActiveWindow</Member>
        <Member type="Field">private Button btnResetAutoIncrementNumber</Member>
        <Member type="Field">private Label lblNameFormatPatternActiveWindow</Member>
        <Member type="Field">private TextBox txtNameFormatPattern</Member>
        <Member type="Field">private Label lblNameFormatPatternPreview</Member>
        <Member type="Field">private Label lblNameFormatPatternPreviewActiveWindow</Member>
        <Member type="Field">private TabPage tpUploadClipboard</Member>
        <Member type="Field">private CheckBox cbClipboardUploadShortenURL</Member>
        <Member type="Field">private TabPage tpAdvanced</Member>
        <Member type="Field">private PropertyGrid pgTaskSettings</Member>
        <Member type="Field">private CheckBox chkUseDefaultImageSettings</Member>
        <Member type="Field">private CheckBox chkUseDefaultCaptureSettings</Member>
        <Member type="Field">private CheckBox chkUseDefaultActions</Member>
        <Member type="Field">private CheckBox chkUseDefaultUploadSettings</Member>
        <Member type="Field">private Panel pActions</Member>
        <Member type="Field">private CheckBox chkUseDefaultAdvancedSettings</Member>
        <Member type="Field">private CheckBox cbScreenRecorderFixedDuration</Member>
        <Member type="Field">private NumericUpDown nudGIFFPS</Member>
        <Member type="Field">private NumericUpDown nudScreenRecorderDuration</Member>
        <Member type="Field">private Label lblGIFFPS</Member>
        <Member type="Field">private TabPage tpWatchFolders</Member>
        <Member type="Field">private CheckBox cbWatchFolderEnabled</Member>
        <Member type="Field">private ListView lvWatchFolderList</Member>
        <Member type="Field">private ColumnHeader chWatchFolderFolderPath</Member>
        <Member type="Field">private ColumnHeader chWatchFolderFilter</Member>
        <Member type="Field">private ColumnHeader chWatchFolderIncludeSubdirectories</Member>
        <Member type="Field">private Button btnWatchFolderRemove</Member>
        <Member type="Field">private Button btnWatchFolderAdd</Member>
        <Member type="Field">private TabPage tpGeneral</Member>
        <Member type="Field">private CheckBox cbShowAfterCaptureTasksForm</Member>
        <Member type="Field">private CheckBox cbHistorySave</Member>
        <Member type="Field">private CheckBox cbPlaySoundAfterCapture</Member>
        <Member type="Field">private CheckBox cbPlaySoundAfterUpload</Member>
        <Member type="Field">private CheckBox chkShowAfterUploadForm</Member>
        <Member type="Field">private CheckBox chkUseDefaultGeneralSettings</Member>
        <Member type="Field">private Panel panelGeneral</Member>
        <Member type="Field">private PropertyGrid pgRegionCapture</Member>
        <Member type="Field">private TabPage tpIndexer</Member>
        <Member type="Field">private PropertyGrid pgIndexerConfig</Member>
        <Member type="Field">private CheckBox chkUseDefaultIndexerSettings</Member>
        <Member type="Field">private NumericUpDown nudScreenRecorderStartDelay</Member>
        <Member type="Field">private Button btnImageEffects</Member>
        <Member type="Field">private CheckBox cbImageEffectOnlyRegionCapture</Member>
        <Member type="Field">private CheckBox chkShowImageEffectsWindowAfterCapture</Member>
        <Member type="Field">private CheckBox chkOverrideFTP</Member>
        <Member type="Field">private ComboBox cboFTPaccounts</Member>
        <Member type="Field">private ComboBox cboPopUpNotification</Member>
        <Member type="Field">private Label lblAfterTaskNotification</Member>
        <Member type="Field">private ContextMenuStrip cmsDestinations</Member>
        <Member type="Field">private ToolStripMenuItem tsmiImageUploaders</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTextUploaders</Member>
        <Member type="Field">private ToolStripMenuItem tsmiFileUploaders</Member>
        <Member type="Field">private ToolStripMenuItem tsmiURLShorteners</Member>
        <Member type="Field">private ToolStripMenuItem tsmiURLSharingServices</Member>
        <Member type="Field">private ComboBox cbImageFileExist</Member>
        <Member type="Field">private Label lblImageFileExist</Member>
        <Member type="Field">private ComboBox cboEncoder</Member>
        <Member type="Field">private Button btnEncoderConfig</Member>
        <Member type="Field">private TabPage tpThumbnail</Member>
        <Member type="Field">private Label lblThumbnailHeight</Member>
        <Member type="Field">private Label lblThumbnailWidth</Member>
        <Member type="Field">private NumericUpDown nudThumbnailHeight</Member>
        <Member type="Field">private NumericUpDown nudThumbnailWidth</Member>
        <Member type="Field">private Label lblThumbnailName</Member>
        <Member type="Field">private TextBox txtThumbnailName</Member>
        <Member type="Field">private Label lblThumbnailNamePreview</Member>
        <Member type="Field">private CheckBox cbThumbnailIfSmaller</Member>
        <Member type="Field">private CheckBox cbClipboardUploadAutoIndexFolder</Member>
        <Member type="Field">private CheckBox chkRunScreencastCLI</Member>
        <Member type="Field">private CheckBox chkClipboardUploadURLContents</Member>
        <Member type="Field">private NumericUpDown nudScreenRecordFPS</Member>
        <Member type="Field">private Label lblScreenRecordFPS</Member>
        <Member type="Field">private CheckBox chkShowBeforeUploadForm</Member>
        <Member type="Field">private Label lblScreenRecorderFixedDuration</Member>
        <Member type="Field">private CheckBox cbClipboardUploadShareURL</Member>
        <Member type="Field">private TabPage tpRectangleAnnotate</Member>
        <Member type="Field">private PropertyGrid pgRectangleAnnotate</Member>
        <Member type="Field">private ColumnHeader chActionsExtensions</Member>
        <Member type="Field">private Button btnActionsDuplicate</Member>
        <Member type="Field">private Label lblImageEffectsNote</Member>
        <Member type="Field">private Label lblCaptureShadowOffset</Member>
        <Member type="Field">private CheckBox chkScreenRecordAutoStart</Member>
        <Member type="Field">private Label lblScreenRecorderStartDelay</Member>
        <Member type="Field">private TabToTreeView tttvMain</Member>
        <Member type="Field">private Panel pImage</Member>
        <Member type="Field">private Panel pCapture</Member>
        <Member type="Field">private Panel pUpload</Member>
        <Member type="Field">private ComboBox cbOverrideCustomUploader</Member>
        <Member type="Field">private CheckBox chkOverrideCustomUploader</Member>
        <Member type="Field">private Button btnScreenRecorderFFmpegOptions</Member>
        <Member type="Field">private ComboBox cbNameFormatTimeZone</Member>
        <Member type="Field">private CheckBox cbNameFormatCustomTimeZone</Member>
        <Member type="Property">public TaskSettings TaskSettings { get; private set; }</Member>
        <Member type="Property">public Boolean IsDefault { get; private set; }</Member>
        <Member type="Constructor">public TaskSettingsForm(TaskSettings hotkeySetting, Boolean isDefault = False)</Member>
        <Member type="Method">private Void UpdateWindowTitle()</Member>
        <Member type="Method">private Void UpdateVideoEncoders()</Member>
        <Member type="Method">private Void UpdateDefaultSettingVisibility()</Member>
        <Member type="Method">private Void UpdateNameFormatPreviews()</Member>
        <Member type="Method">private Void TaskSettingsForm_Resize(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void UpdateDestinationStates()</Member>
        <Member type="Method">private Void AddEnumItemsContextMenu(Action&lt;T&gt; selectedEnum, params ToolStripDropDown[] parents)</Member>
        <Member type="Method">private Void SetEnumCheckedContextMenu(Enum value, params ToolStripDropDown[] parents)</Member>
        <Member type="Method">private Void AddMultiEnumItemsContextMenu(Action&lt;T&gt; selectedEnum, params ToolStripDropDown[] parents)</Member>
        <Member type="Method">private Void SetMultiEnumCheckedContextMenu(Enum value, params ToolStripDropDown[] parents)</Member>
        <Member type="Method">private Void AddEnumItems(Action&lt;T&gt; selectedEnum, params ToolStripDropDownItem[] parents)</Member>
        <Member type="Method">private Void SetEnumChecked(Enum value, params ToolStripDropDownItem[] parents)</Member>
        <Member type="Method">private Void EnableDisableToolStripMenuItems(params ToolStripDropDownItem[] parents)</Member>
        <Member type="Method">private Void UpdateUploaderMenuNames()</Member>
        <Member type="Method">private Void tbDescription_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbUseDefaultAfterCaptureSettings_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbUseDefaultAfterUploadSettings_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbUseDefaultDestinationSettings_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkOverrideFTP_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cboFTPaccounts_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkOverrideCustomUploader_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbOverrideCustomUploader_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkUseDefaultGeneralSettings_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbPlaySoundAfterCapture_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbShowAfterCaptureTasksForm_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkShowBeforeUploadForm_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbPlaySoundAfterUpload_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkShowAfterUploadForm_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cboPopUpNotification_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbHistorySave_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkUseDefaultImageSettings_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbImageFormat_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbImageGIFQuality_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbImageFormat2_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudImageJPEGQuality_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudUseImageFormat2After_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbImageFileExist_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbImageEffectOnlyRegionCapture_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkShowImageEffectsWindowAfterCapture_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnImageEffects_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudThumbnailWidth_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudThumbnailHeight_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtThumbnailName_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbThumbnailIfSmaller_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkUseDefaultCaptureSettings_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbCaptureAutoHideTaskbar_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudScreenshotDelay_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbScreenshotDelay_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudCaptureShadowOffset_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbCaptureClientArea_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbCaptureShadow_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbShowCursor_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbCaptureTransparent_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnScreenRecorderFFmpegOptions_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkRunScreencastCLI_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cboEncoder_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnEncoderConfig_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudScreenRecordFPS_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudGIFFPS_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbScreenRecorderFixedDuration_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudScreenRecorderDuration_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkScreenRecordAutoStart_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudScreenRecorderStartDelay_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkUseDefaultActions_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnActionsAdd_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void AddFileAction(ExternalProgram fileAction)</Member>
        <Member type="Method">private Void btnActionsEdit_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnActionsDuplicate_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnActionsRemove_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lvActions_ItemChecked(Object sender, ItemCheckedEventArgs e)</Member>
        <Member type="Method">private Void lvActions_ItemMoved(Object sender, Int32 oldIndex, Int32 newIndex)</Member>
        <Member type="Method">private Void cbWatchFolderEnabled_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnWatchFolderAdd_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lvWatchFolderList_MouseDoubleClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void AddWatchFolder(WatchFolderSettings watchFolderSetting)</Member>
        <Member type="Method">private Void btnWatchFolderRemove_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkUseDefaultUploadSettings_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbNameFormatCustomTimeZone_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbNameFormatTimeZone_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtNameFormatPattern_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtNameFormatPatternActiveWindow_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnResetAutoIncrementNumber_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbFileUploadUseNamePattern_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkClipboardUploadContents_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbClipboardUploadAutoDetectURL_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbClipboardUploadShareURL_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbClipboardUploadAutoIndexFolder_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkUseDefaultIndexerSettings_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void chkUseDefaultAdvancedSettings_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ImageData</Name>
        <Access>Public</Access>
        <Location left="862" top="471" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public MemoryStream ImageStream { get; set; }</Member>
        <Member type="Property">public EImageFormat ImageFormat { get; set; }</Member>
        <Member type="Constructor">public ImageData()</Member>
        <Member type="Method">public String Write(String filePath)</Member>
        <Member type="Method">public Void Dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MainForm</Name>
        <Access>Public</Access>
        <Location left="3197" top="35" />
        <Size width="162" height="6792" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Boolean forceClose</Member>
        <Member type="Field">private Boolean firstUpdateCheck</Member>
        <Member type="Field">private UploadInfoManager uim</Member>
        <Member type="Field">private ToolStripDropDownItem tsmiImageFileUploaders</Member>
        <Member type="Field">private ToolStripDropDownItem tsmiTrayImageFileUploaders</Member>
        <Member type="Field">private ToolStripDropDownItem tsmiTextFileUploaders</Member>
        <Member type="Field">private ToolStripDropDownItem tsmiTrayTextFileUploaders</Member>
        <Member type="Field">private Timer updateTimer</Member>
        <Member type="Field">private LastRegionCaptureType lastRegionCaptureType</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private MyListView lvUploads</Member>
        <Member type="Field">private ColumnHeader chStatus</Member>
        <Member type="Field">private ColumnHeader chURL</Member>
        <Member type="Field">private ColumnHeader chFilename</Member>
        <Member type="Field">private ColumnHeader chProgress</Member>
        <Member type="Field">private ToolStrip tsMain</Member>
        <Member type="Field">private ToolStripSeparator tssMain1</Member>
        <Member type="Field">private ColumnHeader chSpeed</Member>
        <Member type="Field">private ColumnHeader chRemaining</Member>
        <Member type="Field">private ColumnHeader chElapsed</Member>
        <Member type="Field">private ToolStripButton tsbHistory</Member>
        <Member type="Field">private ToolStripMenuItem tsmiImageUploaders</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTextUploaders</Member>
        <Member type="Field">private ToolStripMenuItem tsmiFileUploaders</Member>
        <Member type="Field">private ToolStripMenuItem tsmiURLShorteners</Member>
        <Member type="Field">private ToolStripDropDownButton tsddbDestinations</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayExit</Member>
        <Member type="Field">private ToolStripSeparator tssTray1</Member>
        <Member type="Field">public NotifyIcon niTray</Member>
        <Member type="Field">private ToolStripDropDownButton tsddbCapture</Member>
        <Member type="Field">private ToolStripMenuItem tsmiFullscreen</Member>
        <Member type="Field">private ToolStripMenuItem tsmiRectangle</Member>
        <Member type="Field">private ToolStripMenuItem tsmiRoundedRectangle</Member>
        <Member type="Field">private ToolStripMenuItem tsmiEllipse</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTriangle</Member>
        <Member type="Field">private ToolStripMenuItem tsmiDiamond</Member>
        <Member type="Field">private ToolStripMenuItem tsmiPolygon</Member>
        <Member type="Field">private ToolStripMenuItem tsmiFreeHand</Member>
        <Member type="Field">private ToolStripMenuItem tsmiWindow</Member>
        <Member type="Field">private ToolStripMenuItem tsmiWindowRectangle</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayHistory</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayAbout</Member>
        <Member type="Field">private ToolStripSeparator tssTray2</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayCapture</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayFullscreen</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayWindow</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayWindowRectangle</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayRectangle</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayRoundedRectangle</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayTriangle</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayDiamond</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayPolygon</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayFreeHand</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayEllipse</Member>
        <Member type="Field">private ToolStripMenuItem tsmiLastRegion</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayLastRegion</Member>
        <Member type="Field">private SplitContainerCustomSplitter scMain</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayDestinations</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayImageUploaders</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayTextUploaders</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayFileUploaders</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayURLShorteners</Member>
        <Member type="Field">private ContextMenuStrip cmsTaskInfo</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpen</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenShortenedURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenThumbnailURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenDeletionURL</Member>
        <Member type="Field">private ToolStripSeparator tssOpen1</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenFolder</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopy</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyShortenedURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyThumbnailURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyDeletionURL</Member>
        <Member type="Field">private ToolStripSeparator tssCopy1</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyImage</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyText</Member>
        <Member type="Field">private ToolStripSeparator tssCopy2</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyHTMLLink</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyHTMLImage</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyHTMLLinkedImage</Member>
        <Member type="Field">private ToolStripSeparator tssCopy3</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyForumLink</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyForumImage</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyForumLinkedImage</Member>
        <Member type="Field">private ToolStripSeparator tssCopy4</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyFilePath</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyFileName</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyFileNameWithExtension</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyFolder</Member>
        <Member type="Field">private ToolStripMenuItem tsmiStopUpload</Member>
        <Member type="Field">private MyPictureBox pbPreview</Member>
        <Member type="Field">private ToolStripMenuItem tsmiShowErrors</Member>
        <Member type="Field">private ToolStripMenuItem tsmiShowResponse</Member>
        <Member type="Field">private ToolStripMenuItem tsmiScreenshotsFolder</Member>
        <Member type="Field">private ToolStripDropDownButton tsddbAfterCaptureTasks</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayAfterCaptureTasks</Member>
        <Member type="Field">private ToolStripMenuItem tsmiURLSharingServices</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayURLSharingServices</Member>
        <Member type="Field">private ToolStripDropDownButton tsddbAfterUploadTasks</Member>
        <Member type="Field">private ToolStripButton tsbScreenshotsFolder</Member>
        <Member type="Field">private Label lblSplitter</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayAfterUploadTasks</Member>
        <Member type="Field">private ToolStripSeparator tssUploadInfo1</Member>
        <Member type="Field">private ToolStripMenuItem tsmiImagePreview</Member>
        <Member type="Field">private ToolStripMenuItem tsmiUploadSelectedFile</Member>
        <Member type="Field">private ToolStripButton tsbImageHistory</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayImageHistory</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayTools</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayColorPicker</Member>
        <Member type="Field">private ToolStripDropDownButton tsddbTools</Member>
        <Member type="Field">private ToolStripMenuItem tsmiColorPicker</Member>
        <Member type="Field">private ToolStripMenuItem tsmiClearList</Member>
        <Member type="Field">private ToolStripMenuItem tsmiScreenRecordingGIF</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayScreenRecordingGIF</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayDonate</Member>
        <Member type="Field">private ToolStripMenuItem tsmiHashCheck</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayHashCheck</Member>
        <Member type="Field">private ToolStripMenuItem tsmiMonitor</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayMonitor</Member>
        <Member type="Field">private ToolStripMenuItem tsmiHideMenu</Member>
        <Member type="Field">private ToolStripMenuItem tsmiAutoCapture</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayAutoCapture</Member>
        <Member type="Field">private ToolStripDropDownButton tsddbDebug</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTestImageUpload</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTestTextUpload</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTestFileUpload</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTestURLShortener</Member>
        <Member type="Field">private ToolStripSeparator tssCopy5</Member>
        <Member type="Field">private ToolStripMenuItem tsmiShowDebugLog</Member>
        <Member type="Field">private ToolStripButton tsbApplicationSettings</Member>
        <Member type="Field">private ToolStripButton tsbTaskSettings</Member>
        <Member type="Field">private ToolStripButton tsbHotkeySettings</Member>
        <Member type="Field">private ToolStripSeparator tssMain2</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayApplicationSettings</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayTaskSettings</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayHotkeySettings</Member>
        <Member type="Field">private ToolStripSeparator tssTray3</Member>
        <Member type="Field">private ToolStripMenuItem tsmiIndexFolder</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayIndexFolder</Member>
        <Member type="Field">private ToolStripMenuItem tsmiImageEffects</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayImageEffects</Member>
        <Member type="Field">private ToolStripButton tsmiAbout</Member>
        <Member type="Field">private ToolStripButtonColorAnimation tsmiDonate</Member>
        <Member type="Field">private ToolStripMenuItem tsmiMonitorTest</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayMonitorTest</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayShow</Member>
        <Member type="Field">private ToolStripMenuItem tsmiDNSChanger</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayDNSChanger</Member>
        <Member type="Field">private ToolStripMenuItem tsmiRuler</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayRuler</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenThumbnailFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyThumbnailFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyThumbnailImage</Member>
        <Member type="Field">private ToolStripMenuItem tsmiFTPClient</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayFTPClient</Member>
        <Member type="Field">private ToolStripMenuItem tsmiImageEditor</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayImageEditor</Member>
        <Member type="Field">private ToolStripDropDownButton tsddbWorkflows</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayWorkflows</Member>
        <Member type="Field">private ToolStripMenuItem tsmiShowQRCode</Member>
        <Member type="Field">private ToolStripMenuItem tsmiQRCode</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayQRCode</Member>
        <Member type="Field">private ToolStripMenuItem tsmiRectangleLight</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayRectangleLight</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTweetMessage</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayTweetMessage</Member>
        <Member type="Field">private ToolStripMenuItem tsmiImagePreviewShow</Member>
        <Member type="Field">private ToolStripMenuItem tsmiImagePreviewHide</Member>
        <Member type="Field">private ToolStripMenuItem tsmiImagePreviewAutomatic</Member>
        <Member type="Field">private ToolStripDropDownButton tsddbUpload</Member>
        <Member type="Field">private ToolStripMenuItem tsmiUploadFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiUploadClipboard</Member>
        <Member type="Field">private ToolStripMenuItem tsmiUploadURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiUploadDragDrop</Member>
        <Member type="Field">private ToolStripSeparator tssDestinations1</Member>
        <Member type="Field">private ToolStripMenuItem tsmiDestinationSettings</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayUpload</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayUploadFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayUploadClipboard</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayUploadURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayUploadDragDrop</Member>
        <Member type="Field">private ToolStripSeparator tssTrayDestinations1</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayDestinationSettings</Member>
        <Member type="Field">private ToolStripMenuItem tsmiShareSelectedURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiShortenSelectedURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiRectangleAnnotate</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayRectangleAnnotate</Member>
        <Member type="Field">private ToolStripMenuItem tsmiEditSelectedFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTestURLSharing</Member>
        <Member type="Field">private ToolStripMenuItem tsmiDeleteSelectedFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiScreenRecordingFFmpeg</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayScreenRecordingFFmpeg</Member>
        <Member type="Field">private ToolStripMenuItem tsmiUploadFolder</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayUploadFolder</Member>
        <Member type="Field">public Label lblMainFormTip</Member>
        <Member type="Field">private ToolStripMenuItem tsmiScreenColorPicker</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayScreenColorPicker</Member>
        <Member type="Field">public ToolStripMenuItem tsmiTrayRecentItems</Member>
        <Member type="Field">private ContextMenuStrip cmsTray</Member>
        <Member type="Field">private ToolStripMenuItem tsmiAutomate</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayAutomate</Member>
        <Member type="Field">private ToolStripMenuItem tsmiRectangleTransparent</Member>
        <Member type="Field">private ToolStripMenuItem tsmiTrayRectangleTransparent</Member>
        <Member type="Field">private Object updateTimerLock</Member>
        <Member type="Property">public Boolean IsReady { get; private set; }</Member>
        <Member type="Constructor">static MainForm()</Member>
        <Member type="Constructor">public MainForm()</Member>
        <Member type="Method">private Void tsmiUploadSelectedFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiDeleteSelectedFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiEditSelectedFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiShowQRCode_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiShowResponse_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiClearList_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiHideMenu_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiImagePreviewShow_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiImagePreviewHide_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiImagePreviewAutomatic_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void InitHotkeys()</Member>
        <Member type="Method">private Void HandleHotkeys(HotkeySettings hotkeySetting)</Member>
        <Member type="Method">private Void ExecuteJob(HotkeyType job)</Member>
        <Member type="Method">private Void ExecuteJob(TaskSettings taskSettings)</Member>
        <Member type="Method">private Void ExecuteJob(TaskSettings taskSettings, HotkeyType job)</Member>
        <Member type="Method">public Void CaptureScreenshot(CaptureType captureType, TaskSettings taskSettings, Boolean autoHideForm = True)</Member>
        <Member type="Method">private Void DoCapture(ScreenCaptureDelegate capture, CaptureType captureType, TaskSettings taskSettings, Boolean autoHideForm = True)</Member>
        <Member type="Method">private Void DoCaptureWork(ScreenCaptureDelegate capture, CaptureType captureType, TaskSettings taskSettings, Boolean autoHideForm = True)</Member>
        <Member type="Method">private Void AfterCapture(Image img, CaptureType captureType, TaskSettings taskSettings)</Member>
        <Member type="Method">private Boolean IsRegionCapture(CaptureType captureType)</Member>
        <Member type="Method">private Void CaptureActiveWindow(TaskSettings taskSettings, Boolean autoHideForm = True)</Member>
        <Member type="Method">private Void CaptureWindow(IntPtr handle, TaskSettings taskSettings, Boolean autoHideForm = True)</Member>
        <Member type="Method">private Void CaptureRegion(CaptureType captureType, TaskSettings taskSettings, Boolean autoHideForm = True)</Member>
        <Member type="Method">private Void CaptureRectangleAnnotate(TaskSettings taskSettings, Boolean autoHideForm = True)</Member>
        <Member type="Method">private Void CaptureRectangleLight(TaskSettings taskSettings, Boolean autoHideForm = True)</Member>
        <Member type="Method">private Void CaptureRectangleTransparent(TaskSettings taskSettings, Boolean autoHideForm = True)</Member>
        <Member type="Method">private Void CaptureLastRegion(TaskSettings taskSettings, Boolean autoHideForm = True)</Member>
        <Member type="Method">private Void PrepareCaptureMenuAsync(ToolStripMenuItem tsmiWindow, EventHandler handlerWindow, ToolStripMenuItem tsmiMonitor, EventHandler handlerMonitor)</Member>
        <Member type="Method">private Void tsmiFullscreen_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsddbCapture_DropDownOpening(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiWindowItems_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiMonitorItems_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiWindowRectangle_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiRectangle_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiRoundedRectangle_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiRectangleAnnotate_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiRectangleLight_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiRectangleTransparent_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiEllipse_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTriangle_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiDiamond_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiPolygon_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiFreeHand_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiLastRegion_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cmsTray_Opened(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayFullscreen_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCapture_DropDownOpening(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayWindowItems_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayMonitorItems_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayRectangle_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayWindowRectangle_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayRectangleAnnotate_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayRectangleLight_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayRectangleTransparent_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayRoundedRectangle_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayEllipse_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayTriangle_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayDiamond_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayPolygon_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayFreeHand_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayLastRegion_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Member type="Method">private Void MainForm_HandleCreated(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void AfterShownJobs()</Member>
        <Member type="Method">private Void InitControls()</Member>
        <Member type="Method">private Void UpdateWorkflowsMenu()</Member>
        <Member type="Method">private Void UpdateMainFormTip()</Member>
        <Member type="Method">private ToolStripMenuItem WorkflowMenuItem(HotkeySettings hotkeySetting)</Member>
        <Member type="Method">private Void UpdateDestinationStates()</Member>
        <Member type="Method">private Void AddEnumItems(Action&lt;T&gt; selectedEnum, params ToolStripDropDownItem[] parents)</Member>
        <Member type="Method">public static Void Uncheck(params ToolStripDropDownItem[] lists)</Member>
        <Member type="Method">private static Void SetEnumChecked(Enum value, params ToolStripDropDownItem[] parents)</Member>
        <Member type="Method">private Void AddMultiEnumItems(Action&lt;T&gt; selectedEnum, params ToolStripDropDownItem[] parents)</Member>
        <Member type="Method">private Void SetMultiEnumChecked(Enum value, params ToolStripDropDownItem[] parents)</Member>
        <Member type="Method">private Void EnableDisableToolStripMenuItems(params ToolStripDropDownItem[] parents)</Member>
        <Member type="Method">private Void UpdateControls()</Member>
        <Member type="Method">private Void CleanCustomClipboardFormats()</Member>
        <Member type="Method">private Void LoadSettings()</Member>
        <Member type="Method">private Void RegisterMenuClosing()</Member>
        <Member type="Method">private Void AfterSettingsJobs()</Member>
        <Member type="Method">public Void UpdateMainFormSettings()</Member>
        <Member type="Method">public static Void SetTextFileDestinationChecked(TextDestination textDestination, FileDestination textFileDestination, params ToolStripDropDownItem[] lists)</Member>
        <Member type="Method">public static Void SetImageFileDestinationChecked(ImageDestination imageDestination, FileDestination imageFileDestination, params ToolStripDropDownItem[] lists)</Member>
        <Member type="Method">private Void UpdateUploaderMenuNames()</Member>
        <Member type="Method">private Void ConfigureAutoUpdate()</Member>
        <Member type="Method">private Void CheckUpdate()</Member>
        <Member type="Method">private Void ForceClose()</Member>
        <Member type="Method">public Void UseCommandLineArgs(List&lt;CLICommand&gt; commands)</Member>
        <Member type="Method">private Boolean CheckCLIHotkey(CLICommand command)</Member>
        <Member type="Method">private Boolean CheckCLIWorkflow(CLICommand command)</Member>
        <Member type="Method">private UploadTask[] GetCurrentTasks()</Member>
        <Member type="Method">private TaskInfo GetCurrentUploadInfo()</Member>
        <Member type="Method">private Void RemoveSelectedItems()</Member>
        <Member type="Method">private Void RemoveAllItems()</Member>
        <Member type="Method">private Void UpdateMenu()</Member>
        <Member type="Method">protected virtual Void SetVisibleCore(Boolean value)</Member>
        <Member type="Method">private Void MainForm_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void MainForm_VisibleChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void MainForm_Resize(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void MainForm_LocationChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void MainForm_SizeChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void MainForm_FormClosing(Object sender, FormClosingEventArgs e)</Member>
        <Member type="Method">private Void MainForm_FormClosed(Object sender, FormClosedEventArgs e)</Member>
        <Member type="Method">private Void MainForm_DragEnter(Object sender, DragEventArgs e)</Member>
        <Member type="Method">private Void MainForm_DragDrop(Object sender, DragEventArgs e)</Member>
        <Member type="Method">private Void tsbFileUpload_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiUploadFolder_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbClipboardUpload_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiUploadURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbDragDropUpload_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiColorPicker_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiScreenColorPicker_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiFTPClient_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiHashCheck_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiRuler_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiAutomate_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiIndexFolder_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiImageEditor_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiImageEffects_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiMonitorTest_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiDNSChanger_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiQRCode_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTweetMessage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsddbDestinations_DropDownOpened(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiShowDebugLog_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTestImageUpload_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTestTextUpload_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTestFileUpload_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTestURLShortener_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTestURLSharing_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiScreenRecordingFFmpeg_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiScreenRecordingGIF_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiAutoCapture_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbApplicationSettings_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbTaskSettings_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbHotkeySettings_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbDestinationSettings_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbScreenshotsFolder_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbHistory_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbImageHistory_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void imageHistoryForm_FormClosed(Object sender, FormClosedEventArgs e)</Member>
        <Member type="Method">private Void tsbAbout_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbDonate_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lblDragAndDropTip_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void lvUploads_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lvUploads_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void lvUploads_MouseDoubleClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void scMain_SplitterMoved(Object sender, SplitterEventArgs e)</Member>
        <Member type="Method">private Void lvUploads_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void niTray_MouseDoubleClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void niTray_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void niTray_BalloonTipClicked(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayShow_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiTrayExit_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiShowErrors_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiStopUpload_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenShortenedURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenThumbnailURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenDeletionURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenThumbnailFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenFolder_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyShortenedURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyThumbnailURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyDeletionURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyText_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyThumbnailFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyThumbnailImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyHTMLLink_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyHTMLImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyHTMLLinkedImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyForumLink_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyForumImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyForumLinkedImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyFilePath_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyFileName_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyFileNameWithExtension_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyFolder_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiClipboardFormat_Click(Object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ImageTag</Name>
        <Access>Public</Access>
        <Location left="1041" top="471" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String ActiveWindowTitle { get; set; }</Member>
        <Member type="Property">public String ActiveProcessName { get; set; }</Member>
        <Member type="Constructor">public ImageTag()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PointInfo</Name>
        <Access>Public</Access>
        <Location left="1988" top="1431" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Point Position { get; set; }</Member>
        <Member type="Property">public Color Color { get; set; }</Member>
        <Member type="Constructor">public PointInfo()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LanguageHelper</Name>
        <Access>Public</Access>
        <Location left="2192" top="1431" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static Boolean ChangeLanguage(SupportedLanguage language, params Form[] forms)</Member>
        <Member type="Method">private static Void ApplyResourceToControl(Control control, ComponentResourceManager resource, CultureInfo culture)</Member>
        <Member type="Method">private static Void ApplyResourceToToolStripItemCollection(ToolStripItemCollection collection, ComponentResourceManager resource, CultureInfo culture)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RecentManager</Name>
        <Access>Public</Access>
        <Location left="1699" top="616" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 maxCount</Member>
        <Member type="Field">private Object itemsLock</Member>
        <Member type="Property">public Int32 MaxCount { get; set; }</Member>
        <Member type="Property">public Queue&lt;RecentItem&gt; Items { get; private set; }</Member>
        <Member type="Constructor">public RecentManager()</Member>
        <Member type="Constructor">static RecentManager()</Member>
        <Member type="Method">public Void Add(String item)</Member>
        <Member type="Method">private Void UpdateRecentMenu()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RecentItem</Name>
        <Access>Public</Access>
        <Location left="1699" top="868" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Text { get; set; }</Member>
        <Member type="Property">public DateTime Time { get; set; }</Member>
        <Member type="Constructor">public RecentItem(String text)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaskHelpers</Name>
        <Access>Public</Access>
        <Location left="1294" top="153" />
        <Size width="162" height="791" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static ImageData PrepareImage(Image img, TaskSettings taskSettings)</Member>
        <Member type="Method">public static String CreateThumbnail(Image img, String folder, String filename, TaskSettings taskSettings)</Member>
        <Member type="Method">public static MemoryStream SaveImage(Image img, EImageFormat imageFormat, TaskSettings taskSettings)</Member>
        <Member type="Method">public static String GetFilename(TaskSettings taskSettings, String extension)</Member>
        <Member type="Method">public static String GetImageFilename(TaskSettings taskSettings, Image image)</Member>
        <Member type="Method">public static Boolean ShowAfterCaptureForm(TaskSettings taskSettings, Image img)</Member>
        <Member type="Method">public static Void AnnotateImage(String filePath)</Member>
        <Member type="Method">public static Image AnnotateImage(Image img, String imgPath)</Member>
        <Member type="Method">public static Void PrintImage(Image img)</Member>
        <Member type="Method">public static Image AddImageEffects(Image img, TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void AddDefaultExternalPrograms(TaskSettings taskSettings)</Member>
        <Member type="Method">private static Void AddExternalProgramFromFile(TaskSettings taskSettings, String name, String filename, String args)</Member>
        <Member type="Method">private static Void AddExternalProgramFromRegistry(TaskSettings taskSettings, String name, String filename)</Member>
        <Member type="Method">public static Boolean SelectRegion(out Rectangle rect, TaskSettings taskSettings)</Member>
        <Member type="Method">public static PointInfo SelectPointColor()</Member>
        <Member type="Method">public static Icon GetProgressIcon(Int32 percentage)</Member>
        <Member type="Method">public static UpdateChecker CheckUpdate()</Member>
        <Member type="Method">public static Void CheckDownloadCounts()</Member>
        <Member type="Method">public static String CheckFilePath(String folder, String filename, TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void OpenDropWindow()</Member>
        <Member type="Method">public static Void DoScreenRecordingFFmpeg()</Member>
        <Member type="Method">public static Void DoScreenRecordingGIF()</Member>
        <Member type="Method">public static Void StartScreenRecording(ScreenRecordOutput outputType, TaskSettings taskSettings, Boolean skipRegionSelection = False)</Member>
        <Member type="Method">public static Void OpenAutoCapture()</Member>
        <Member type="Method">public static Void StartAutoCapture()</Member>
        <Member type="Method">public static Void OpenScreenshotsFolder()</Member>
        <Member type="Method">public static Void OpenColorPicker()</Member>
        <Member type="Method">public static Void OpenScreenColorPicker(TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void OpenRuler()</Member>
        <Member type="Method">public static Void OpenAutomate()</Member>
        <Member type="Method">public static Void StartAutomate()</Member>
        <Member type="Method">public static Void OpenHashCheck()</Member>
        <Member type="Method">public static Void OpenIndexFolder()</Member>
        <Member type="Method">public static Void OpenImageEditor(String filePath)</Member>
        <Member type="Method">public static Void OpenImageEffects()</Member>
        <Member type="Method">public static Void OpenMonitorTest()</Member>
        <Member type="Method">public static Void OpenDNSChanger()</Member>
        <Member type="Method">public static Void RunShareXAsAdmin(String arguments)</Member>
        <Member type="Method">public static Void OpenQRCode()</Member>
        <Member type="Method">public static Void TweetMessage()</Member>
        <Member type="Method">public static Void OpenFTPClient()</Member>
        <Member type="Method">public static EDataType FindDataType(String filePath, TaskSettings taskSettings)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Program</Name>
        <Access>Internal</Access>
        <Location left="408" top="1474" />
        <Size width="162" height="1233" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public static Boolean IsBeta</Member>
        <Member type="Field">public String StartupPath</Member>
        <Member type="Field">public String DefaultPersonalPath</Member>
        <Member type="Field">private String PortablePersonalPath</Member>
        <Member type="Field">private String PersonalPathConfig</Member>
        <Member type="Field">private String ApplicationConfigFilename</Member>
        <Member type="Field">private String UploadersConfigFilename</Member>
        <Member type="Field">private String HotkeysConfigFilename</Member>
        <Member type="Field">private String HistoryFilename</Member>
        <Member type="Field">private String LogFileName</Member>
        <Member type="Field">private static FileSystemWatcher uploaderConfigWatcher</Member>
        <Member type="Field">private static WatchFolderDuplicateEventTimer uploaderConfigWatcherTimer</Member>
        <Member type="Field">private static Boolean restarting</Member>
        <Member type="Property">public static String Title { get; }</Member>
        <Member type="Property">public static CLIManager CLI { get; private set; }</Member>
        <Member type="Property">public static Boolean IsMultiInstance { get; private set; }</Member>
        <Member type="Property">public static Boolean IsPortable { get; private set; }</Member>
        <Member type="Property">public static Boolean IsSilentRun { get; private set; }</Member>
        <Member type="Property">public static Boolean IsSandbox { get; private set; }</Member>
        <Member type="Property">public static ApplicationConfig Settings { get; private set; }</Member>
        <Member type="Property">public static TaskSettings DefaultTaskSettings { get; private set; }</Member>
        <Member type="Property">public static UploadersConfig UploadersConfig { get; private set; }</Member>
        <Member type="Property">public static HotkeysConfig HotkeysConfig { get; private set; }</Member>
        <Member type="Property">public static ManualResetEvent UploaderSettingsResetEvent { get; private set; }</Member>
        <Member type="Property">public static ManualResetEvent HotkeySettingsResetEvent { get; private set; }</Member>
        <Member type="Property">public static MainForm MainForm { get; private set; }</Member>
        <Member type="Property">public static Stopwatch StartTimer { get; private set; }</Member>
        <Member type="Property">public static HotkeyManager HotkeyManager { get; set; }</Member>
        <Member type="Property">public static WatchFolderManager WatchFolderManager { get; set; }</Member>
        <Member type="Property">public static String CustomPersonalPath { get; private set; }</Member>
        <Member type="Property">public static String PersonalPath { get; }</Member>
        <Member type="Property">public static String ApplicationConfigFilePath { get; }</Member>
        <Member type="Property">private static String UploadersConfigFolder { get; }</Member>
        <Member type="Property">public static String UploadersConfigFilePath { get; }</Member>
        <Member type="Property">private static String HotkeysConfigFolder { get; }</Member>
        <Member type="Property">public static String HotkeysConfigFilePath { get; }</Member>
        <Member type="Property">public static String HistoryFilePath { get; }</Member>
        <Member type="Property">private static String LogsFolder { get; }</Member>
        <Member type="Property">public static String LogsFilePath { get; }</Member>
        <Member type="Property">public static String ScreenshotsParentFolder { get; }</Member>
        <Member type="Property">public static String ScreenshotsFolder { get; }</Member>
        <Member type="Property">public static String ScreenRecorderCacheFilePath { get; }</Member>
        <Member type="Property">private static String BackupFolder { get; }</Member>
        <Member type="Property">public static String ToolsFolder { get; }</Member>
        <Member type="Constructor">static Program()</Member>
        <Member type="Method">private static Void Main(String[] args)</Member>
        <Member type="Method">private static Void Run()</Member>
        <Member type="Method">public static Void Restart()</Member>
        <Member type="Method">private static Void SingleInstanceCallback(Object sender, InstanceCallbackEventArgs args)</Member>
        <Member type="Method">private static Boolean WaitFormLoad(Int32 wait)</Member>
        <Member type="Method">public static Void LoadSettings()</Member>
        <Member type="Method">public static Void LoadProgramSettings()</Member>
        <Member type="Method">public static Void LoadUploadersConfig()</Member>
        <Member type="Method">public static Void LoadHotkeySettings()</Member>
        <Member type="Method">public static Void SaveSettings()</Member>
        <Member type="Method">public static Void BackupSettings()</Member>
        <Member type="Method">private static Void CheckPersonalPathConfig()</Member>
        <Member type="Method">public static String ReadPersonalPathConfig()</Member>
        <Member type="Method">public static Void WritePersonalPathConfig(String path)</Member>
        <Member type="Method">private static Void Application_ThreadException(Object sender, ThreadExceptionEventArgs e)</Member>
        <Member type="Method">private static Void CurrentDomain_UnhandledException(Object sender, UnhandledExceptionEventArgs e)</Member>
        <Member type="Method">private static Void OnError(Exception e)</Member>
        <Member type="Method">public static Void ConfigureUploadersConfigWatcher()</Member>
        <Member type="Method">private static Void uploaderConfigWatcher_Changed(Object sender, FileSystemEventArgs e)</Member>
        <Member type="Method">private static Void ReloadUploadersConfig(String filePath)</Member>
        <Member type="Method">public static Void UploadersConfigSaveAsync()</Member>
        <Member type="Method">public static String GetGitHash()</Member>
        <Member type="Method">private static Boolean CheckAdminTasks()</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaskManager</Name>
        <Access>Public</Access>
        <Location left="1699" top="153" />
        <Size width="162" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private List&lt;UploadTask&gt; Tasks</Member>
        <Member type="Field">public RecentManager RecentManager</Member>
        <Member type="Field">private static Int32 lastIconStatus</Member>
        <Member type="Property">public static MyListView ListViewControl { get; set; }</Member>
        <Member type="Property">public static Boolean IsBusy { get; }</Member>
        <Member type="Constructor">static TaskManager()</Member>
        <Member type="Method">public static Void Start(UploadTask task)</Member>
        <Member type="Method">public static Void Remove(UploadTask task)</Member>
        <Member type="Method">private static Void StartTasks()</Member>
        <Member type="Method">public static Void StopAllTasks()</Member>
        <Member type="Method">public static Void UpdateMainFormTip()</Member>
        <Member type="Method">private static ListViewItem FindListViewItem(UploadTask task)</Member>
        <Member type="Method">private static Void ChangeListViewItemStatus(UploadTask task)</Member>
        <Member type="Method">private static Void CreateListViewItem(UploadTask task)</Member>
        <Member type="Method">private static Void task_StatusChanged(UploadTask task)</Member>
        <Member type="Method">private static Void task_UploadStarted(UploadTask task)</Member>
        <Member type="Method">private static Void task_UploadProgressChanged(UploadTask task)</Member>
        <Member type="Method">private static Void task_UploadCompleted(UploadTask task)</Member>
        <Member type="Method">public static Void UpdateProgressUI()</Member>
        <Member type="Method">public static Void UpdateTrayIcon(Int32 progress = -1)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaskSettings</Name>
        <Access>Public</Access>
        <Location left="926" top="3268" />
        <Size width="162" height="808" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public String Description</Member>
        <Member type="Field">public HotkeyType Job</Member>
        <Member type="Field">public Boolean UseDefaultAfterCaptureJob</Member>
        <Member type="Field">public AfterCaptureTasks AfterCaptureJob</Member>
        <Member type="Field">public Boolean UseDefaultAfterUploadJob</Member>
        <Member type="Field">public AfterUploadTasks AfterUploadJob</Member>
        <Member type="Field">public Boolean UseDefaultDestinations</Member>
        <Member type="Field">public ImageDestination ImageDestination</Member>
        <Member type="Field">public FileDestination ImageFileDestination</Member>
        <Member type="Field">public TextDestination TextDestination</Member>
        <Member type="Field">public FileDestination TextFileDestination</Member>
        <Member type="Field">public FileDestination FileDestination</Member>
        <Member type="Field">public UrlShortenerType URLShortenerDestination</Member>
        <Member type="Field">public URLSharingServices URLSharingServiceDestination</Member>
        <Member type="Field">public Boolean OverrideFTP</Member>
        <Member type="Field">public Int32 FTPIndex</Member>
        <Member type="Field">public Boolean OverrideCustomUploader</Member>
        <Member type="Field">public Int32 CustomUploaderIndex</Member>
        <Member type="Field">public Boolean UseDefaultGeneralSettings</Member>
        <Member type="Field">public TaskSettingsGeneral GeneralSettings</Member>
        <Member type="Field">public Boolean UseDefaultImageSettings</Member>
        <Member type="Field">public TaskSettingsImage ImageSettings</Member>
        <Member type="Field">public Boolean UseDefaultCaptureSettings</Member>
        <Member type="Field">public TaskSettingsCapture CaptureSettings</Member>
        <Member type="Field">public Boolean UseDefaultUploadSettings</Member>
        <Member type="Field">public TaskSettingsUpload UploadSettings</Member>
        <Member type="Field">public Boolean UseDefaultActions</Member>
        <Member type="Field">public List&lt;ExternalProgram&gt; ExternalPrograms</Member>
        <Member type="Field">public Boolean UseDefaultIndexerSettings</Member>
        <Member type="Field">public IndexerSettings IndexerSettings</Member>
        <Member type="Field">public Boolean UseDefaultAdvancedSettings</Member>
        <Member type="Field">public TaskSettingsAdvanced AdvancedSettings</Member>
        <Member type="Field">public Boolean WatchFolderEnabled</Member>
        <Member type="Field">public List&lt;WatchFolderSettings&gt; WatchFolderList</Member>
        <Member type="Property">public TaskSettings TaskSettingsReference { get; private set; }</Member>
        <Member type="Property">public TaskSettingsCapture TaskSettingsCaptureReference { get; }</Member>
        <Member type="Property">public Boolean IsUsingDefaultSettings { get; }</Member>
        <Member type="Property">public String CaptureFolder { get; }</Member>
        <Member type="Constructor">public TaskSettings()</Member>
        <Member type="Method">public override String ToString()</Member>
        <Member type="Method">public static TaskSettings GetDefaultTaskSettings()</Member>
        <Member type="Method">public static TaskSettings GetSafeTaskSettings(TaskSettings taskSettings)</Member>
        <Member type="Method">private Void SetDefaultSettings()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaskSettingsGeneral</Name>
        <Access>Public</Access>
        <Location left="1314" top="3812" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public Boolean PlaySoundAfterCapture</Member>
        <Member type="Field">public Boolean ShowAfterCaptureTasksForm</Member>
        <Member type="Field">public Boolean ShowBeforeUploadForm</Member>
        <Member type="Field">public Boolean PlaySoundAfterUpload</Member>
        <Member type="Field">public PopUpNotificationType PopUpNotification</Member>
        <Member type="Field">public Boolean ShowAfterUploadForm</Member>
        <Member type="Field">public Boolean SaveHistory</Member>
        <Member type="Constructor">public TaskSettingsGeneral()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaskSettingsImage</Name>
        <Access>Public</Access>
        <Location left="1658" top="3091" />
        <Size width="162" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public EImageFormat ImageFormat</Member>
        <Member type="Field">public Int32 ImageJPEGQuality</Member>
        <Member type="Field">public GIFQuality ImageGIFQuality</Member>
        <Member type="Field">public Int32 ImageSizeLimit</Member>
        <Member type="Field">public EImageFormat ImageFormat2</Member>
        <Member type="Field">public FileExistAction FileExistAction</Member>
        <Member type="Field">public List&lt;ImageEffect&gt; ImageEffects</Member>
        <Member type="Field">public Boolean ShowImageEffectsWindowAfterCapture</Member>
        <Member type="Field">public Boolean ImageEffectOnlyRegionCapture</Member>
        <Member type="Field">public Int32 ThumbnailWidth</Member>
        <Member type="Field">public Int32 ThumbnailHeight</Member>
        <Member type="Field">public String ThumbnailName</Member>
        <Member type="Field">public Boolean ThumbnailCheckSize</Member>
        <Member type="Constructor">public TaskSettingsImage()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaskSettingsCapture</Name>
        <Access>Public</Access>
        <Location left="926" top="4523" />
        <Size width="162" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public Boolean ShowCursor</Member>
        <Member type="Field">public Boolean CaptureTransparent</Member>
        <Member type="Field">public Boolean CaptureShadow</Member>
        <Member type="Field">public Int32 CaptureShadowOffset</Member>
        <Member type="Field">public Boolean CaptureClientArea</Member>
        <Member type="Field">public Boolean IsDelayScreenshot</Member>
        <Member type="Field">public Decimal DelayScreenshot</Member>
        <Member type="Field">public Boolean CaptureAutoHideTaskbar</Member>
        <Member type="Field">public SurfaceOptions SurfaceOptions</Member>
        <Member type="Field">public FFmpegOptions FFmpegOptions</Member>
        <Member type="Field">public Int32 ScreenRecordFPS</Member>
        <Member type="Field">public Int32 GIFFPS</Member>
        <Member type="Field">public Boolean ScreenRecordFixedDuration</Member>
        <Member type="Field">public Single ScreenRecordDuration</Member>
        <Member type="Field">public Boolean ScreenRecordAutoStart</Member>
        <Member type="Field">public Single ScreenRecordStartDelay</Member>
        <Member type="Field">public Boolean RunScreencastCLI</Member>
        <Member type="Field">public Int32 VideoEncoderSelected</Member>
        <Member type="Field">public RectangleAnnotateOptions RectangleAnnotateOptions</Member>
        <Member type="Constructor">public TaskSettingsCapture()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaskSettingsUpload</Name>
        <Access>Public</Access>
        <Location left="676" top="2956" />
        <Size width="162" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public Boolean UseCustomTimeZone</Member>
        <Member type="Field">public TimeZoneInfo CustomTimeZone</Member>
        <Member type="Field">public String NameFormatPattern</Member>
        <Member type="Field">public String NameFormatPatternActiveWindow</Member>
        <Member type="Field">public Boolean FileUploadUseNamePattern</Member>
        <Member type="Field">public Boolean ClipboardUploadURLContents</Member>
        <Member type="Field">public Boolean ClipboardUploadShortenURL</Member>
        <Member type="Field">public Boolean ClipboardUploadShareURL</Member>
        <Member type="Field">public Boolean ClipboardUploadAutoIndexFolder</Member>
        <Member type="Constructor">public TaskSettingsUpload()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaskSettingsAdvanced</Name>
        <Access>Public</Access>
        <Location left="412" top="3761" />
        <Size width="162" height="553" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Single toastWindowDuration</Member>
        <Member type="Field">private Size toastWindowSize</Member>
        <Member type="Property">public Boolean ProcessImagesDuringFileUpload { get; set; }</Member>
        <Member type="Property">public Boolean ProcessImagesDuringClipboardUpload { get; set; }</Member>
        <Member type="Property">public Boolean AutoClearClipboard { get; set; }</Member>
        <Member type="Property">public Int32 ThumbnailPreferredWidth { get; set; }</Member>
        <Member type="Property">public Int32 ThumbnailPreferredHeight { get; set; }</Member>
        <Member type="Property">public String CapturePath { get; set; }</Member>
        <Member type="Property">public List&lt;String&gt; ImageExtensions { get; set; }</Member>
        <Member type="Property">public List&lt;String&gt; TextExtensions { get; set; }</Member>
        <Member type="Property">public String ClipboardContentFormat { get; set; }</Member>
        <Member type="Property">public String BalloonTipContentFormat { get; set; }</Member>
        <Member type="Property">public String OpenURLFormat { get; set; }</Member>
        <Member type="Property">public Int32 AutoShortenURLLength { get; set; }</Member>
        <Member type="Property">public Single ToastWindowDuration { get; set; }</Member>
        <Member type="Property">public ContentAlignment ToastWindowPlacement { get; set; }</Member>
        <Member type="Property">public ToastClickAction ToastWindowClickAction { get; set; }</Member>
        <Member type="Property">public Size ToastWindowSize { get; set; }</Member>
        <Member type="Property">public Boolean AutoCloseAfterUploadForm { get; set; }</Member>
        <Member type="Property">public Boolean DisableNotifications { get; set; }</Member>
        <Member type="Property">public String TextFileExtension { get; set; }</Member>
        <Member type="Property">public String TextFormat { get; set; }</Member>
        <Member type="Property">public String TextCustom { get; set; }</Member>
        <Member type="Property">public Boolean TextCustomEncodeInput { get; set; }</Member>
        <Member type="Property">public Int32 NamePatternMaxLength { get; set; }</Member>
        <Member type="Property">public Int32 NamePatternMaxTitleLength { get; set; }</Member>
        <Member type="Property">public String ScreenColorPickerFormat { get; set; }</Member>
        <Member type="Constructor">public TaskSettingsAdvanced()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UploadInfoParser</Name>
        <Access>Public</Access>
        <Location left="2774" top="7085" />
        <Size width="162" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public const String HTMLLink = &lt;a href="$url"&gt;$url&lt;/a&gt;</Member>
        <Member type="Field">public const String HTMLImage = &lt;img src="$url"/&gt;</Member>
        <Member type="Field">public const String HTMLLinkedImage = &lt;a href="$url"&gt;&lt;img src="$thumbnailurl"/&gt;&lt;/a&gt;</Member>
        <Member type="Field">public const String ForumLink = [url]$url[/url]</Member>
        <Member type="Field">public const String ForumImage = [img]$url[/img]</Member>
        <Member type="Field">public const String ForumLinkedImage = [url=$url][img]$thumbnailurl[/img][/url]</Member>
        <Member type="Field">public const String WikiImage = [$url]</Member>
        <Member type="Field">public const String WikiLinkedImage = [$url $thumbnailurl]</Member>
        <Member type="Constructor">public UploadInfoParser()</Member>
        <Member type="Method">public String Parse(TaskInfo info, String pattern)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UploadInfoStatus</Name>
        <Access>Public</Access>
        <Location left="2058" top="666" />
        <Size width="162" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public TaskInfo Info { get; private set; }</Member>
        <Member type="Property">public Boolean IsURLExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsShortenedURLExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsThumbnailURLExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsDeletionURLExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsImageURL { get; private set; }</Member>
        <Member type="Property">public Boolean IsTextURL { get; private set; }</Member>
        <Member type="Property">public Boolean IsFilePathValid { get; private set; }</Member>
        <Member type="Property">public Boolean IsFileExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsThumbnailFilePathValid { get; private set; }</Member>
        <Member type="Property">public Boolean IsThumbnailFileExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsImageFile { get; private set; }</Member>
        <Member type="Property">public Boolean IsTextFile { get; private set; }</Member>
        <Member type="Constructor">public UploadInfoStatus(TaskInfo info)</Member>
        <Member type="Method">public Void Update()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HotkeySettingsForm</Name>
        <Access>Public</Access>
        <Location left="1884" top="6551" />
        <Size width="162" height="587" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private HotkeyManager manager</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Button btnDuplicate</Member>
        <Member type="Field">private Button btnReset</Member>
        <Member type="Field">private FlowLayoutPanel flpHotkeys</Member>
        <Member type="Field">private Button btnEdit</Member>
        <Member type="Field">private Button btnRemove</Member>
        <Member type="Field">private Button btnAdd</Member>
        <Member type="Property">public HotkeySelectionControl Selected { get; private set; }</Member>
        <Member type="Constructor">public HotkeySettingsForm()</Member>
        <Member type="Method">private Void HotkeySettingsForm_FormClosed(Object sender, FormClosedEventArgs e)</Member>
        <Member type="Method">public Void PrepareHotkeys(HotkeyManager hotkeyManager)</Member>
        <Member type="Method">private Void AddControls()</Member>
        <Member type="Method">private Void UpdateButtons()</Member>
        <Member type="Method">private HotkeySelectionControl FindSelectionControl(HotkeySettings hotkeySetting)</Member>
        <Member type="Method">private Void control_SelectedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void UpdateCheckStates()</Member>
        <Member type="Method">private Void control_HotkeyChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private HotkeySelectionControl AddHotkeySelectionControl(HotkeySettings hotkeySetting)</Member>
        <Member type="Method">private Void Edit(HotkeySelectionControl selectionControl)</Member>
        <Member type="Method">private Void control_LabelDoubleClick(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void EditSelected()</Member>
        <Member type="Method">private Void flpHotkeys_Layout(Object sender, LayoutEventArgs e)</Member>
        <Member type="Method">private Void btnAdd_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnRemove_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnEdit_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnDuplicate_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnReset_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>VideoEncodersForm</Name>
        <Access>Public</Access>
        <Location left="356" top="5118" />
        <Size width="162" height="400" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Button btnEncoderDuplicate</Member>
        <Member type="Field">private MyListView lvEncoders</Member>
        <Member type="Field">private ColumnHeader chEncoderDescription</Member>
        <Member type="Field">private ColumnHeader chEncoderPath</Member>
        <Member type="Field">private ColumnHeader chEncoderArgs</Member>
        <Member type="Field">private ColumnHeader chEncoderOutputExtension</Member>
        <Member type="Field">private Button btnEncodersAdd</Member>
        <Member type="Field">private Button btnEncodersEdit</Member>
        <Member type="Field">private Button btnEncodersRemove</Member>
        <Member type="Constructor">public VideoEncodersForm()</Member>
        <Member type="Method">private Void btnEncoderDuplicate_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lvEncoders_MouseDoubleClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void btnEncodersAdd_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnEncodersEdit_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnEncodersRemove_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void AddVideoEncoder(VideoEncoder encoder)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WatchFolder</Name>
        <Access>Public</Access>
        <Location left="277" top="450" />
        <Size width="162" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private SynchronizationContext context</Member>
        <Member type="Field">private FileSystemWatcher fileWatcher</Member>
        <Member type="Field">private List&lt;WatchFolderDuplicateEventTimer&gt; timers</Member>
        <Member type="Property">public WatchFolderSettings Settings { get; set; }</Member>
        <Member type="Property">public TaskSettings TaskSettings { get; set; }</Member>
        <Member type="Event">public event FileWatcherTriggerEventHandler FileWatcherTrigger</Member>
        <Member type="Constructor">public WatchFolder()</Member>
        <Member type="Method">public virtual Void Enable()</Member>
        <Member type="Method">protected Void OnFileWatcherTrigger(String path)</Member>
        <Member type="Method">private Void fileWatcher_Created(Object sender, FileSystemEventArgs e)</Member>
        <Member type="Method">protected Void CleanElapsedTimers()</Member>
        <Member type="Method">public Void Dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WatchFolderDuplicateEventTimer</Name>
        <Access>Public</Access>
        <Location left="408" top="1148" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Stopwatch timer</Member>
        <Member type="Field">private String path</Member>
        <Member type="Field">private const Int32 expireTime = 1000</Member>
        <Member type="Property">public Boolean IsElapsed { get; }</Member>
        <Member type="Constructor">public WatchFolderDuplicateEventTimer(String path)</Member>
        <Member type="Method">public Boolean IsDuplicateEvent(String path)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WatchFolderManager</Name>
        <Access>Public</Access>
        <Location left="77" top="450" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;WatchFolder&gt; WatchFolders { get; private set; }</Member>
        <Member type="Constructor">public WatchFolderManager()</Member>
        <Member type="Method">private WatchFolder FindWatchFolder(WatchFolderSettings watchFolderSetting)</Member>
        <Member type="Method">private Boolean IsExist(WatchFolderSettings watchFolderSetting)</Member>
        <Member type="Method">public Void AddWatchFolder(WatchFolderSettings watchFolderSetting, TaskSettings taskSettings)</Member>
        <Member type="Method">public Void RemoveWatchFolder(WatchFolderSettings watchFolderSetting)</Member>
        <Member type="Method">public Void UpdateWatchFolderState(WatchFolderSettings watchFolderSetting)</Member>
        <Member type="Method">public Void Dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WatchFolderSettings</Name>
        <Access>Public</Access>
        <Location left="60" top="796" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String FolderPath { get; set; }</Member>
        <Member type="Property">public String Filter { get; set; }</Member>
        <Member type="Property">public Boolean IncludeSubdirectories { get; set; }</Member>
        <Member type="Constructor">public WatchFolderSettings()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UploadTask</Name>
        <Access>Public</Access>
        <Location left="2259" top="153" />
        <Size width="162" height="910" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Image tempImage</Member>
        <Member type="Field">private String tempText</Member>
        <Member type="Field">private ThreadWorker threadWorker</Member>
        <Member type="Field">private Uploader uploader</Member>
        <Member type="Field">private static String lastSaveAsFolder</Member>
        <Member type="Property">public TaskInfo Info { get; private set; }</Member>
        <Member type="Property">public TaskStatus Status { get; private set; }</Member>
        <Member type="Property">public Boolean IsWorking { get; }</Member>
        <Member type="Property">public Boolean StopRequested { get; private set; }</Member>
        <Member type="Property">public Boolean RequestSettingUpdate { get; private set; }</Member>
        <Member type="Property">public Stream Data { get; set; }</Member>
        <Member type="Event">public event TaskEventHandler StatusChanged</Member>
        <Member type="Event">public event TaskEventHandler UploadStarted</Member>
        <Member type="Event">public event TaskEventHandler UploadProgressChanged</Member>
        <Member type="Event">public event TaskEventHandler UploadCompleted</Member>
        <Member type="Constructor">private UploadTask(TaskSettings taskSettings)</Member>
        <Member type="Method">public static UploadTask CreateDataUploaderTask(EDataType dataType, Stream stream, String fileName, TaskSettings taskSettings)</Member>
        <Member type="Method">public static UploadTask CreateFileUploaderTask(String filePath, TaskSettings taskSettings)</Member>
        <Member type="Method">public static UploadTask CreateImageUploaderTask(Image image, TaskSettings taskSettings)</Member>
        <Member type="Method">public static UploadTask CreateTextUploaderTask(String text, TaskSettings taskSettings)</Member>
        <Member type="Method">public static UploadTask CreateURLShortenerTask(String url, TaskSettings taskSettings)</Member>
        <Member type="Method">public static UploadTask CreateShareURLTask(String url, TaskSettings taskSettings)</Member>
        <Member type="Method">public static UploadTask CreateFileJobTask(String filePath, TaskSettings taskSettings)</Member>
        <Member type="Method">public Void Start()</Member>
        <Member type="Method">public Void StartSync()</Member>
        <Member type="Method">private Void Prepare()</Member>
        <Member type="Method">public Void Stop()</Member>
        <Member type="Method">private Void ThreadDoWork()</Member>
        <Member type="Method">private Void DoUploadJob()</Member>
        <Member type="Method">private Boolean DoUpload(Int32 retry = 0)</Member>
        <Member type="Method">private Boolean DoThreadJob()</Member>
        <Member type="Method">private Boolean DoAfterCaptureJobs()</Member>
        <Member type="Method">private Void DoFileJobs()</Member>
        <Member type="Method">private Void DoAfterUploadJobs()</Member>
        <Member type="Method">public UploadResult UploadImage(Stream stream, String fileName)</Member>
        <Member type="Method">public UploadResult UploadText(Stream stream, String fileName)</Member>
        <Member type="Method">public UploadResult UploadFile(Stream stream, String fileName)</Member>
        <Member type="Method">public UploadResult ShortenURL(String url)</Member>
        <Member type="Method">public Void ShareURL(String url)</Member>
        <Member type="Method">private FTPAccount GetFTPAccount(Int32 index)</Member>
        <Member type="Method">private CustomUploaderItem GetCustomUploader(Int32 index)</Member>
        <Member type="Method">private Void ThreadCompleted()</Member>
        <Member type="Method">private Void PrepareUploader(Uploader currentUploader)</Member>
        <Member type="Method">private Void uploader_ProgressChanged(ProgressManager progress)</Member>
        <Member type="Method">private Void OnStatusChanged()</Member>
        <Member type="Method">private Void OnUploadStarted()</Member>
        <Member type="Method">private Void OnUploadProgressChanged()</Member>
        <Member type="Method">private Void OnUploadCompleted()</Member>
        <Member type="Method">public Void Dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UploadInfoManager</Name>
        <Access>Public</Access>
        <Location left="3197" top="7124" />
        <Size width="162" height="842" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private ListView lv</Member>
        <Member type="Field">private UploadInfoParser parser</Member>
        <Member type="Property">public UploadInfoStatus[] SelectedItems { get; private set; }</Member>
        <Member type="Property">public UploadInfoStatus SelectedItem { get; }</Member>
        <Member type="Property">public Boolean IsItemSelected { get; }</Member>
        <Member type="Constructor">public UploadInfoManager(ListView listView)</Member>
        <Member type="Method">private Void CopyTexts(IEnumerable&lt;String&gt; texts)</Member>
        <Member type="Method">public Void RefreshSelectedItems()</Member>
        <Member type="Method">public Void OpenURL()</Member>
        <Member type="Method">public Void OpenShortenedURL()</Member>
        <Member type="Method">public Void OpenThumbnailURL()</Member>
        <Member type="Method">public Void OpenDeletionURL()</Member>
        <Member type="Method">public Void OpenFile()</Member>
        <Member type="Method">public Void OpenThumbnailFile()</Member>
        <Member type="Method">public Void OpenFolder()</Member>
        <Member type="Method">public Void TryOpen()</Member>
        <Member type="Method">public Void CopyURL()</Member>
        <Member type="Method">public Void CopyShortenedURL()</Member>
        <Member type="Method">public Void CopyThumbnailURL()</Member>
        <Member type="Method">public Void CopyDeletionURL()</Member>
        <Member type="Method">public Void CopyFile()</Member>
        <Member type="Method">public Void CopyImage()</Member>
        <Member type="Method">public Void CopyText()</Member>
        <Member type="Method">public Void CopyThumbnailFile()</Member>
        <Member type="Method">public Void CopyThumbnailImage()</Member>
        <Member type="Method">public Void CopyHTMLLink()</Member>
        <Member type="Method">public Void CopyHTMLImage()</Member>
        <Member type="Method">public Void CopyHTMLLinkedImage()</Member>
        <Member type="Method">public Void CopyForumLink()</Member>
        <Member type="Method">public Void CopyForumImage()</Member>
        <Member type="Method">public Void CopyForumLinkedImage()</Member>
        <Member type="Method">public Void CopyFilePath()</Member>
        <Member type="Method">public Void CopyFileName()</Member>
        <Member type="Method">public Void CopyFileNameWithExtension()</Member>
        <Member type="Method">public Void CopyFolder()</Member>
        <Member type="Method">public Void CopyCustomFormat(String format)</Member>
        <Member type="Method">public Void ShowImagePreview()</Member>
        <Member type="Method">public Void ShowErrors()</Member>
        <Member type="Method">public Void Upload()</Member>
        <Member type="Method">public Void EditImage()</Member>
        <Member type="Method">public Void DeleteFile()</Member>
        <Member type="Method">public Void ShortenURL(UrlShortenerType urlShortener)</Member>
        <Member type="Method">public Void ShareURL(URLSharingServices urlSharingService)</Member>
        <Member type="Method">public Void ShowQRCode()</Member>
        <Member type="Method">public Void ShowResponse()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UploadManager</Name>
        <Access>Public</Access>
        <Location left="2058" top="153" />
        <Size width="162" height="451" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static Void UploadFile(String filePath, TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void UploadFile(String[] files, TaskSettings taskSettings)</Member>
        <Member type="Method">private static Boolean IsUploadConfirmed(Int32 length)</Member>
        <Member type="Method">public static Void UploadFile(TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void UploadFolder(TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void IndexFolder(TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void IndexFolder(String folderPath, TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void ClipboardUpload(TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void ClipboardUploadWithContentViewer(TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void ClipboardUploadMainWindow(TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void DragDropUpload(IDataObject data, TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void UploadURL(TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void RunImageTask(Image img, TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void UploadImage(Image img)</Member>
        <Member type="Method">public static Void UploadImage(Image img, ImageDestination imageDestination, FileDestination imageFileDestination)</Member>
        <Member type="Method">public static Void UploadText(String text, TaskSettings taskSettings, Boolean allowCustomText = False)</Member>
        <Member type="Method">public static Void UploadImageStream(Stream stream, String filename, TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void ShortenURL(String url, TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void ShortenURL(String url, UrlShortenerType urlShortener)</Member>
        <Member type="Method">public static Void ShareURL(String url, TaskSettings taskSettings)</Member>
        <Member type="Method">public static Void ShareURL(String url, URLSharingServices urlSharingService)</Member>
        <Member type="Method">public static Void DownloadAndUploadFile(String url, TaskSettings taskSettings)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ApplicationConfig</Name>
        <Access>Public</Access>
        <Location left="910" top="1503" />
        <Size width="162" height="1148" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public TaskSettings DefaultTaskSettings</Member>
        <Member type="Field">public String FileUploadDefaultDirectory</Member>
        <Member type="Field">public Boolean ShowUploadWarning</Member>
        <Member type="Field">public Boolean ShowMultiUploadWarning</Member>
        <Member type="Field">public Int32 NameParserAutoIncrementNumber</Member>
        <Member type="Field">public Boolean ShowMenu</Member>
        <Member type="Field">public ImagePreviewVisibility ImagePreview</Member>
        <Member type="Field">public Int32 PreviewSplitterDistance</Member>
        <Member type="Field">public SupportedLanguage Language</Member>
        <Member type="Field">public Boolean ShowTray</Member>
        <Member type="Field">public Boolean SilentRun</Member>
        <Member type="Field">public Boolean TrayIconProgressEnabled</Member>
        <Member type="Field">public Boolean TaskbarProgressEnabled</Member>
        <Member type="Field">public Boolean RememberMainFormPosition</Member>
        <Member type="Field">public Point MainFormPosition</Member>
        <Member type="Field">public Boolean RememberMainFormSize</Member>
        <Member type="Field">public Size MainFormSize</Member>
        <Member type="Field">public Boolean UseCustomScreenshotsPath</Member>
        <Member type="Field">public String CustomScreenshotsPath</Member>
        <Member type="Field">public String SaveImageSubFolderPattern</Member>
        <Member type="Field">public ProxyInfo ProxySettings</Member>
        <Member type="Field">public Int32 UploadLimit</Member>
        <Member type="Field">public Int32 BufferSizePower</Member>
        <Member type="Field">public List&lt;ClipboardFormat&gt; ClipboardContentFormats</Member>
        <Member type="Field">public Int32 MaxUploadFailRetry</Member>
        <Member type="Field">public Boolean UseSecondaryUploaders</Member>
        <Member type="Field">public List&lt;ImageDestination&gt; SecondaryImageUploaders</Member>
        <Member type="Field">public List&lt;TextDestination&gt; SecondaryTextUploaders</Member>
        <Member type="Field">public List&lt;FileDestination&gt; SecondaryFileUploaders</Member>
        <Member type="Field">public Boolean DontShowPrintSettingsDialog</Member>
        <Member type="Field">public PrintSettings PrintSettings</Member>
        <Member type="Field">public List&lt;VideoEncoder&gt; VideoEncoders</Member>
        <Member type="Field">public WindowState HistoryWindowState</Member>
        <Member type="Field">public WindowState ImageHistoryWindowState</Member>
        <Member type="Field">public Int32 ImageHistoryMaxItemCount</Member>
        <Member type="Field">public Int32 ImageHistoryViewMode</Member>
        <Member type="Field">public Size ImageHistoryThumbnailSize</Member>
        <Member type="Field">public Rectangle AutoCaptureRegion</Member>
        <Member type="Field">public Decimal AutoCaptureRepeatTime</Member>
        <Member type="Field">public Boolean AutoCaptureMinimizeToTray</Member>
        <Member type="Field">public Boolean AutoCaptureWaitUpload</Member>
        <Member type="Field">public Rectangle ScreenRecordRegion</Member>
        <Member type="Field">public List&lt;ScriptInfo&gt; AutomateScripts</Member>
        <Member type="Property">public Boolean BinaryUnits { get; set; }</Member>
        <Member type="Property">public Boolean ShowMostRecentTaskFirst { get; set; }</Member>
        <Member type="Property">public Boolean UseAlternativeClipboardCopyImage { get; set; }</Member>
        <Member type="Property">public Boolean WorkflowsOnlyShowEdited { get; set; }</Member>
        <Member type="Property">public Boolean AutoCheckUpdate { get; set; }</Member>
        <Member type="Property">public Boolean TrayAutoExpandCaptureMenu { get; set; }</Member>
        <Member type="Property">public HotkeyType TrayMiddleClickAction { get; set; }</Member>
        <Member type="Property">public Boolean ShowMainWindowTip { get; set; }</Member>
        <Member type="Property">public Int32 RecentLinksMaxCount { get; set; }</Member>
        <Member type="Property">public String BrowserPath { get; set; }</Member>
        <Member type="Property">public Boolean DetectUploaderConfigFileChanges { get; set; }</Member>
        <Member type="Property">public Boolean ShowClipboardContentViewer { get; set; }</Member>
        <Member type="Property">public String CustomUploadersConfigPath { get; set; }</Member>
        <Member type="Property">public String CustomHotkeysConfigPath { get; set; }</Member>
        <Member type="Property">public Int32 DropSize { get; set; }</Member>
        <Member type="Property">public Int32 DropOffset { get; set; }</Member>
        <Member type="Property">public ContentAlignment DropAlignment { get; set; }</Member>
        <Member type="Property">public Int32 DropOpacity { get; set; }</Member>
        <Member type="Property">public Int32 DropHoverOpacity { get; set; }</Member>
        <Member type="Constructor">public ApplicationConfig()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaskInfo</Name>
        <Access>Public</Access>
        <Location left="1483" top="153" />
        <Size width="162" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private String filePath</Member>
        <Member type="Property">public TaskSettings TaskSettings { get; set; }</Member>
        <Member type="Property">public String Status { get; set; }</Member>
        <Member type="Property">public TaskJob Job { get; set; }</Member>
        <Member type="Property">public Boolean IsUploadJob { get; }</Member>
        <Member type="Property">public ProgressManager Progress { get; set; }</Member>
        <Member type="Property">public String FilePath { get; set; }</Member>
        <Member type="Property">public String FileName { get; set; }</Member>
        <Member type="Property">public String ThumbnailFilePath { get; set; }</Member>
        <Member type="Property">public EDataType DataType { get; set; }</Member>
        <Member type="Property">public EDataType UploadDestination { get; }</Member>
        <Member type="Property">public String UploaderHost { get; }</Member>
        <Member type="Property">public DateTime StartTime { get; set; }</Member>
        <Member type="Property">public DateTime UploadTime { get; set; }</Member>
        <Member type="Property">public TimeSpan UploadDuration { get; }</Member>
        <Member type="Property">public UploadResult Result { get; set; }</Member>
        <Member type="Constructor">public TaskInfo(TaskSettings taskSettings)</Member>
        <Member type="Method">public HistoryItem GetHistoryItem()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Delegate">
        <Name>EventHandler</Name>
        <Access>Public</Access>
        <Location left="1863" top="5505" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <ReturnType>Void</ReturnType>
        <Param>String currentDestination</Param>
      </Entity>
      <Entity type="Delegate">
        <Name>HotkeyTriggerEventHandler</Name>
        <Access>Public</Access>
        <Location left="2395" top="6840" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <ReturnType>Void</ReturnType>
        <Param>HotkeySettings hotkeySetting</Param>
      </Entity>
      <Entity type="Delegate">
        <Name>HotkeyEventHandler</Name>
        <Access>Public</Access>
        <Location left="2915" top="6137" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <ReturnType>Void</ReturnType>
        <Param>UInt16 id</Param>
        <Param>Keys key</Param>
        <Param>Modifiers modifier</Param>
      </Entity>
      <Entity type="Delegate">
        <Name>ScreenCaptureDelegate</Name>
        <Access>Public</Access>
        <Location left="3455" top="295" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <ReturnType>Image</ReturnType>
      </Entity>
      <Entity type="Delegate">
        <Name>FileWatcherTriggerEventHandler</Name>
        <Access>Public</Access>
        <Location left="277" top="796" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <ReturnType>Void</ReturnType>
        <Param>String path</Param>
      </Entity>
      <Entity type="Delegate">
        <Name>TaskEventHandler</Name>
        <Access>Public</Access>
        <Location left="2512" top="135" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <ReturnType>Void</ReturnType>
        <Param>UploadTask task</Param>
      </Entity>
      <Entity type="Enum">
        <Name>SupportedLanguage</Name>
        <Access>Public</Access>
        <Location left="1182" top="2340" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Automatic = 0</Value>
        <Value>English = 1</Value>
        <Value>German = 2</Value>
        <Value>French = 3</Value>
        <Value>Hungarian = 4</Value>
        <Value>Korean = 5</Value>
        <Value>SimplifiedChinese = 6</Value>
        <Value>Spanish = 7</Value>
        <Value>Turkish = 8</Value>
      </Entity>
      <Entity type="Enum">
        <Name>EImageFormat</Name>
        <Access>Public</Access>
        <Location left="1439" top="2518" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>PNG = 0</Value>
        <Value>JPEG = 1</Value>
        <Value>GIF = 2</Value>
        <Value>BMP = 3</Value>
        <Value>TIFF = 4</Value>
      </Entity>
      <Entity type="Enum">
        <Name>TaskJob</Name>
        <Access>Public</Access>
        <Location left="1041" top="29" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Job = 0</Value>
        <Value>DataUpload = 1</Value>
        <Value>FileUpload = 2</Value>
        <Value>TextUpload = 3</Value>
        <Value>ShortenURL = 4</Value>
        <Value>ShareURL = 5</Value>
      </Entity>
      <Entity type="Enum">
        <Name>AfterCaptureTasks</Name>
        <Access>Public</Access>
        <Location left="1630" top="4001" />
        <Size width="162" height="282" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>AddImageEffects = 1</Value>
        <Value>AnnotateImage = 2</Value>
        <Value>CopyImageToClipboard = 4</Value>
        <Value>SendImageToPrinter = 8</Value>
        <Value>SaveImageToFile = 16</Value>
        <Value>SaveImageToFileWithDialog = 32</Value>
        <Value>SaveThumbnailImageToFile = 64</Value>
        <Value>PerformActions = 128</Value>
        <Value>CopyFileToClipboard = 256</Value>
        <Value>CopyFilePathToClipboard = 512</Value>
        <Value>UploadImageToHost = 1024</Value>
        <Value>DeleteFile = 2048</Value>
      </Entity>
      <Entity type="Enum">
        <Name>AfterUploadTasks</Name>
        <Access>Public</Access>
        <Location left="638" top="3913" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>UseURLShortener = 1</Value>
        <Value>ShareURL = 2</Value>
        <Value>CopyURLToClipboard = 4</Value>
        <Value>OpenURL = 8</Value>
        <Value>ShowQRCode = 16</Value>
      </Entity>
      <Entity type="Enum">
        <Name>AfterCaptureFormResult</Name>
        <Access>Public</Access>
        <Location left="826" top="29" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Cancel = 0</Value>
        <Value>Continue = 1</Value>
        <Value>Copy = 2</Value>
      </Entity>
      <Entity type="Enum">
        <Name>CaptureType</Name>
        <Access>Public</Access>
        <Location left="634" top="29" />
        <Size width="162" height="299" />
        <Collapsed>False</Collapsed>
        <Value>Screen = 0</Value>
        <Value>Monitor = 1</Value>
        <Value>ActiveMonitor = 2</Value>
        <Value>Window = 3</Value>
        <Value>ActiveWindow = 4</Value>
        <Value>RectangleWindow = 5</Value>
        <Value>Rectangle = 6</Value>
        <Value>RoundedRectangle = 7</Value>
        <Value>Ellipse = 8</Value>
        <Value>Triangle = 9</Value>
        <Value>Diamond = 10</Value>
        <Value>Polygon = 11</Value>
        <Value>Freehand = 12</Value>
        <Value>LastRegion = 13</Value>
      </Entity>
      <Entity type="Enum">
        <Name>HotkeyType</Name>
        <Access>Public</Access>
        <Location left="412" top="2932" />
        <Size width="162" height="741" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>FileUpload = 1</Value>
        <Value>FolderUpload = 2</Value>
        <Value>ClipboardUpload = 3</Value>
        <Value>ClipboardUploadWithContentViewer = 4</Value>
        <Value>UploadURL = 5</Value>
        <Value>DragDropUpload = 6</Value>
        <Value>StopUploads = 7</Value>
        <Value>PrintScreen = 8</Value>
        <Value>ActiveWindow = 9</Value>
        <Value>ActiveMonitor = 10</Value>
        <Value>RectangleRegion = 11</Value>
        <Value>WindowRectangle = 12</Value>
        <Value>RectangleAnnotate = 13</Value>
        <Value>RectangleLight = 14</Value>
        <Value>RectangleTransparent = 15</Value>
        <Value>RoundedRectangleRegion = 16</Value>
        <Value>EllipseRegion = 17</Value>
        <Value>TriangleRegion = 18</Value>
        <Value>DiamondRegion = 19</Value>
        <Value>PolygonRegion = 20</Value>
        <Value>FreeHandRegion = 21</Value>
        <Value>LastRegion = 22</Value>
        <Value>ScreenRecorder = 23</Value>
        <Value>StartScreenRecorder = 24</Value>
        <Value>ScreenRecorderGIF = 25</Value>
        <Value>StartScreenRecorderGIF = 26</Value>
        <Value>AutoCapture = 27</Value>
        <Value>StartAutoCapture = 28</Value>
        <Value>OpenScreenshotsFolder = 29</Value>
        <Value>ColorPicker = 30</Value>
        <Value>ScreenColorPicker = 31</Value>
        <Value>Ruler = 32</Value>
        <Value>FTPClient = 33</Value>
        <Value>HashCheck = 34</Value>
        <Value>IndexFolder = 35</Value>
        <Value>ImageEffects = 36</Value>
        <Value>QRCode = 37</Value>
        <Value>TweetMessage = 38</Value>
        <Value>Automate = 39</Value>
      </Entity>
      <Entity type="Enum">
        <Name>HotkeyStatus</Name>
        <Access>Public</Access>
        <Location left="436" top="29" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Registered = 0</Value>
        <Value>Failed = 1</Value>
        <Value>NotConfigured = 2</Value>
      </Entity>
      <Entity type="Enum">
        <Name>PopUpNotificationType</Name>
        <Access>Public</Access>
        <Location left="1292" top="3533" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>BalloonTip = 1</Value>
        <Value>ToastNotification = 2</Value>
      </Entity>
      <Entity type="Enum">
        <Name>ToastClickAction</Name>
        <Access>Public</Access>
        <Location left="245" top="29" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>AnnotateImage = 0</Value>
        <Value>CopyImageToClipboard = 1</Value>
        <Value>OpenFile = 2</Value>
        <Value>OpenFolder = 3</Value>
        <Value>OpenUrl = 4</Value>
        <Value>Upload = 5</Value>
      </Entity>
      <Entity type="Enum">
        <Name>FileExistAction</Name>
        <Access>Public</Access>
        <Location left="1753" top="2518" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Ask = 0</Value>
        <Value>Overwrite = 1</Value>
        <Value>UniqueName = 2</Value>
        <Value>Cancel = 3</Value>
      </Entity>
      <Entity type="Enum">
        <Name>ImagePreviewVisibility</Name>
        <Access>Public</Access>
        <Location left="895" top="1237" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Show = 0</Value>
        <Value>Hide = 1</Value>
        <Value>Automatic = 2</Value>
      </Entity>
      <Entity type="Enum">
        <Name>ColorPickerFormat</Name>
        <Access>Public</Access>
        <Location left="38" top="29" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>RGB = 0</Value>
        <Value>Hexadecimal = 1</Value>
      </Entity>
      <Entity type="Enum">
        <Name>LastRegionCaptureType</Name>
        <Access>Public</Access>
        <Location left="2857" top="85" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Surface = 0</Value>
        <Value>Light = 1</Value>
        <Value>Transparent = 2</Value>
        <Value>Annotate = 3</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Nesting" first="26" second="74">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Nesting" first="0" second="54">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Nesting" first="19" second="55">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Nesting" first="21" second="56">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Nesting" first="26" second="57">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Nesting" first="45" second="58">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Nesting" first="49" second="59">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="26" second="21">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="1" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>ucBeforeUpload</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="4" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>ucBeforeUpload</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="5" second="5">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>instance</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="6" second="6">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>instance</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="11" second="12">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>regionForm</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="11" second="11">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>instance</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="17" second="41">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>parser</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="19" second="55">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>HotkeyTrigger</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="19" second="21">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>hotkeyForm</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="26" second="50">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>uim</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="26" second="74">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>lastRegionCaptureType</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="33" second="46">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>uploaderConfigWatcherTimer</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="34" second="30">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>RecentManager</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="35" second="67">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>Job</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="35" second="63">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>AfterCaptureJob</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="35" second="64">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>AfterUploadJob</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="35" second="36">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>GeneralSettings</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="35" second="37">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>ImageSettings</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="35" second="38">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>CaptureSettings</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="35" second="39">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>UploadSettings</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="35" second="40">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>AdvancedSettings</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="36" second="69">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>PopUpNotification</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="37" second="61">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>ImageFormat</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="37" second="61">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>ImageFormat2</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="37" second="71">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>FileExistAction</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="43" second="19">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>manager</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="50" second="41">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>parser</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="52" second="35">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>DefaultTaskSettings</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="52" second="72">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>ImagePreview</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="52" second="60">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>Language</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>ShareX.HistoryLib.dll</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>HistoryItemManager</Name>
        <Access>Public</Access>
        <Location left="1059" top="1398" />
        <Size width="162" height="1845" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public ContextMenuStrip cmsHistory</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpen</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenShortenedURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenThumbnailURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenDeletionURL</Member>
        <Member type="Field">private ToolStripSeparator tssOpen1</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiOpenFolder</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopy</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyShortenedURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyThumbnailURL</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyDeletionURL</Member>
        <Member type="Field">private ToolStripSeparator tssCopy1</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyImage</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyText</Member>
        <Member type="Field">private ToolStripSeparator tssCopy2</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyHTMLLink</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyHTMLImage</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyHTMLLinkedImage</Member>
        <Member type="Field">private ToolStripSeparator tssCopy3</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyForumLink</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyForumImage</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyForumLinkedImage</Member>
        <Member type="Field">private ToolStripSeparator tssCopy4</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyFilePath</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyFileName</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyFileNameWithExtension</Member>
        <Member type="Field">private ToolStripMenuItem tsmiCopyFolder</Member>
        <Member type="Field">private ToolStripMenuItem tsmiShow</Member>
        <Member type="Field">private ToolStripMenuItem tsmiShowImagePreview</Member>
        <Member type="Field">private ToolStripMenuItem tsmiShowMoreInfo</Member>
        <Member type="Property">public HistoryItem HistoryItem { get; private set; }</Member>
        <Member type="Property">public Boolean IsURLExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsShortenedURLExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsThumbnailURLExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsDeletionURLExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsImageURL { get; private set; }</Member>
        <Member type="Property">public Boolean IsTextURL { get; private set; }</Member>
        <Member type="Property">public Boolean IsFilePathValid { get; private set; }</Member>
        <Member type="Property">public Boolean IsFileExist { get; private set; }</Member>
        <Member type="Property">public Boolean IsImageFile { get; private set; }</Member>
        <Member type="Property">public Boolean IsTextFile { get; private set; }</Member>
        <Member type="Event">public event GetHistoryItemsEventHandler GetHistoryItems</Member>
        <Member type="Constructor">public HistoryItemManager()</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Member type="Method">public Void UpdateTexts(Int32 itemsCount)</Member>
        <Member type="Method">public Void UpdateButtons()</Member>
        <Member type="Method">private Void tsmiOpenURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenShortenedURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenThumbnailURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenDeletionURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiOpenFolder_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyShortenedURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyThumbnailURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyDeletionURL_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyText_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyHTMLLink_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyHTMLImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyHTMLLinkedImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyForumLink_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyForumImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyForumLinkedImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyFilePath_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyFileName_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyFileNameWithExtension_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiCopyFolder_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiShowImagePreview_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiShowMoreInfo_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">public HistoryRefreshInfoResult RefreshInfo()</Member>
        <Member type="Method">private HistoryItem GetSelectedHistoryItem()</Member>
        <Member type="Method">public HistoryItem[] OnGetHistoryItems()</Member>
        <Member type="Method">public Void OpenURL()</Member>
        <Member type="Method">public Void OpenShortenedURL()</Member>
        <Member type="Method">public Void OpenThumbnailURL()</Member>
        <Member type="Method">public Void OpenDeletionURL()</Member>
        <Member type="Method">public Void OpenFile()</Member>
        <Member type="Method">public Void OpenFolder()</Member>
        <Member type="Method">public Void TryOpen()</Member>
        <Member type="Method">public Void CopyURL()</Member>
        <Member type="Method">public Void CopyShortenedURL()</Member>
        <Member type="Method">public Void CopyThumbnailURL()</Member>
        <Member type="Method">public Void CopyDeletionURL()</Member>
        <Member type="Method">public Void CopyFile()</Member>
        <Member type="Method">public Void CopyImage()</Member>
        <Member type="Method">public Void CopyText()</Member>
        <Member type="Method">public Void CopyHTMLLink()</Member>
        <Member type="Method">public Void CopyHTMLImage()</Member>
        <Member type="Method">public Void CopyHTMLLinkedImage()</Member>
        <Member type="Method">public Void CopyForumLink()</Member>
        <Member type="Method">public Void CopyForumImage()</Member>
        <Member type="Method">public Void CopyForumLinkedImage()</Member>
        <Member type="Method">public Void CopyFilePath()</Member>
        <Member type="Method">public Void CopyFileName()</Member>
        <Member type="Method">public Void CopyFileNameWithExtension()</Member>
        <Member type="Method">public Void CopyFolder()</Member>
        <Member type="Method">public Void ShowImagePreview()</Member>
        <Member type="Method">public Void ShowMoreInfo()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HistoryItemOld</Name>
        <Access>Public</Access>
        <Location left="1099" top="501" />
        <Size width="162" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String ID { get; set; }</Member>
        <Member type="Property">public String Filename { get; set; }</Member>
        <Member type="Property">public String Filepath { get; set; }</Member>
        <Member type="Property">public DateTime DateTimeUtc { get; set; }</Member>
        <Member type="Property">public String Type { get; set; }</Member>
        <Member type="Property">public String Host { get; set; }</Member>
        <Member type="Property">public String URL { get; set; }</Member>
        <Member type="Property">public String ThumbnailURL { get; set; }</Member>
        <Member type="Property">public String DeletionURL { get; set; }</Member>
        <Member type="Property">public String ShortenedURL { get; set; }</Member>
        <Member type="Property">public XmlNode Node { get; set; }</Member>
        <Member type="Constructor">public HistoryItemOld()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ImageHistoryForm</Name>
        <Access>Public</Access>
        <Location left="817" top="220" />
        <Size width="162" height="808" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private HistoryManager history</Member>
        <Member type="Field">private HistoryItemManager him</Member>
        <Member type="Field">private HistoryItem[] historyItems</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private ImageListView ilvImages</Member>
        <Member type="Field">private ToolStripContainer tscMain</Member>
        <Member type="Field">private ToolStrip tsMain</Member>
        <Member type="Field">private ToolStripDropDownButton tsddbThumbnailSize</Member>
        <Member type="Field">private ToolStripMenuItem tsmiThumbnailSize75</Member>
        <Member type="Field">private ToolStripMenuItem tsmiThumbnailSize100</Member>
        <Member type="Field">private ToolStripMenuItem tsmiThumbnailSize150</Member>
        <Member type="Field">private ToolStripMenuItem tsmiThumbnailSize200</Member>
        <Member type="Field">private ToolStripMenuItem tsmiThumbnailSize250</Member>
        <Member type="Field">private ToolStripDropDownButton tsddbViewMode</Member>
        <Member type="Field">private ToolStripMenuItem tsmiViewModeThumbnails</Member>
        <Member type="Field">private ToolStripMenuItem tsmiViewModeGallery</Member>
        <Member type="Field">private ToolStripMenuItem tsmiViewModePane</Member>
        <Member type="Field">private ToolStripButton tsbQuickList</Member>
        <Member type="Property">public String HistoryPath { get; private set; }</Member>
        <Member type="Property">public Int32 MaxItemCount { get; set; }</Member>
        <Member type="Property">public Int32 ViewMode { get; set; }</Member>
        <Member type="Property">public Size ThumbnailSize { get; set; }</Member>
        <Member type="Constructor">public ImageHistoryForm(String historyPath, Int32 viewMode, Size thumbnailSize, Int32 maxItemCount = -1)</Member>
        <Member type="Method">private Void RefreshHistoryItems()</Member>
        <Member type="Method">private HistoryItem[] GetHistoryItems()</Member>
        <Member type="Method">private HistoryItem[] him_GetHistoryItems()</Member>
        <Member type="Method">private Void ImageHistoryForm_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void ImageHistoryForm_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void ilvImages_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void ilvImages_SelectionChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void ilvImages_ItemDoubleClick(Object sender, ItemClickEventArgs e)</Member>
        <Member type="Method">private Void tsmiViewModeThumbnails_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiViewModeGallery_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiViewModePane_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiThumbnailSize75_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiThumbnailSize100_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiThumbnailSize150_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiThumbnailSize200_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiThumbnailSize250_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsbQuickList_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void ilvImages_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ObjectListView</Name>
        <Access>Public</Access>
        <Location left="356" top="308" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ObjectType SetObjectType { get; set; }</Member>
        <Member type="Property">public Object SelectedObject { set; }</Member>
        <Member type="Constructor">public ObjectListView()</Member>
        <Member type="Method">private Void PropertyListView_Click_Name(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void PropertyListView_Click_Value(Object sender, EventArgs e)</Member>
        <Member type="Method">public Void SelectObject(Object obj)</Member>
        <Member type="Method">private Void AddObject(Object obj, String name)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HistoryForm</Name>
        <Access>Public</Access>
        <Location left="1419" top="1058" />
        <Size width="162" height="995" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private HistoryManager history</Member>
        <Member type="Field">private HistoryItemManager him</Member>
        <Member type="Field">private HistoryItem[] allHistoryItems</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private MyListView lvHistory</Member>
        <Member type="Field">private ColumnHeader chFilename</Member>
        <Member type="Field">private ColumnHeader chDateTime</Member>
        <Member type="Field">private ColumnHeader chType</Member>
        <Member type="Field">private ColumnHeader chHost</Member>
        <Member type="Field">private ColumnHeader chURL</Member>
        <Member type="Field">private DateTimePicker dtpFilterFrom</Member>
        <Member type="Field">private CheckBox cbDateFilter</Member>
        <Member type="Field">private Label lblFilterFrom</Member>
        <Member type="Field">private Label lblFilterTo</Member>
        <Member type="Field">private DateTimePicker dtpFilterTo</Member>
        <Member type="Field">private Button btnApplyFilters</Member>
        <Member type="Field">private TextBox txtFilenameFilter</Member>
        <Member type="Field">private ComboBox cbFilenameFilterMethod</Member>
        <Member type="Field">private ComboBox cbFilenameFilterCulture</Member>
        <Member type="Field">private CheckBox cbFilenameFilter</Member>
        <Member type="Field">private CheckBox cbFilenameFilterCase</Member>
        <Member type="Field">private MyPictureBox pbThumbnail</Member>
        <Member type="Field">private StatusStrip ssMain</Member>
        <Member type="Field">private ToolStripStatusLabel tsslStatus</Member>
        <Member type="Field">private GroupBox gbFilters</Member>
        <Member type="Field">private Button btnRemoveFilters</Member>
        <Member type="Field">private ComboBox cbTypeFilterSelection</Member>
        <Member type="Field">private CheckBox cbHostFilter</Member>
        <Member type="Field">private CheckBox cbTypeFilter</Member>
        <Member type="Field">private TextBox txtHostFilter</Member>
        <Member type="Property">public String HistoryPath { get; private set; }</Member>
        <Member type="Property">public Int32 MaxItemCount { get; set; }</Member>
        <Member type="Constructor">public HistoryForm(String historyPath, Int32 maxItemCount = -1)</Member>
        <Member type="Method">private Void RefreshHistoryItems()</Member>
        <Member type="Method">private HistoryItem[] him_GetHistoryItems()</Member>
        <Member type="Method">private HistoryItem[] GetHistoryItems()</Member>
        <Member type="Method">private Void ApplyFiltersAndAdd()</Member>
        <Member type="Method">private HistoryItem[] ApplyFilters(HistoryItem[] historyItems)</Member>
        <Member type="Method">private StringComparison GetStringRule()</Member>
        <Member type="Method">private Void AddHistoryItems(HistoryItem[] historyItems)</Member>
        <Member type="Method">private Void UpdateItemCount(HistoryItem[] historyItems)</Member>
        <Member type="Method">private Void UpdateControls()</Member>
        <Member type="Method">private Void UpdatePictureBox()</Member>
        <Member type="Method">private Void HistoryForm_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void HistoryForm_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void btnApplyFilters_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnRemoveFilters_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lvHistory_ItemSelectionChanged(Object sender, ListViewItemSelectionChangedEventArgs e)</Member>
        <Member type="Method">private Void lvHistory_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void lvHistory_MouseDoubleClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void lvHistory_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void txtFilenameFilter_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HistoryItem</Name>
        <Access>Public</Access>
        <Location left="1099" top="204" />
        <Size width="162" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Filename { get; set; }</Member>
        <Member type="Property">public String Filepath { get; set; }</Member>
        <Member type="Property">public DateTime DateTimeUtc { get; set; }</Member>
        <Member type="Property">public String Type { get; set; }</Member>
        <Member type="Property">public String Host { get; set; }</Member>
        <Member type="Property">public String URL { get; set; }</Member>
        <Member type="Property">public String ThumbnailURL { get; set; }</Member>
        <Member type="Property">public String DeletionURL { get; set; }</Member>
        <Member type="Property">public String ShortenedURL { get; set; }</Member>
        <Member type="Constructor">public HistoryItem()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HistoryItemInfoForm</Name>
        <Access>Public</Access>
        <Location left="582" top="308" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private ObjectListView olvMain</Member>
        <Member type="Constructor">public HistoryItemInfoForm(Object hi)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HistoryManager</Name>
        <Access>Public</Access>
        <Location left="1415" top="35" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">internal XMLManager Manager { get; private set; }</Member>
        <Member type="Constructor">public HistoryManager(String historyPath)</Member>
        <Member type="Method">public Boolean AppendHistoryItem(HistoryItem historyItem)</Member>
        <Member type="Method">public List&lt;HistoryItem&gt; GetHistoryItems()</Member>
        <Member type="Method">public static Void AddHistoryItemAsync(String historyPath, HistoryItem historyItem)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>XMLManagerOld</Name>
        <Access>Internal</Access>
        <Location left="300" top="551" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private String xmlPath</Member>
        <Member type="Field">private static Object thisLock</Member>
        <Member type="Constructor">public XMLManagerOld(String xmlFilePath)</Member>
        <Member type="Constructor">static XMLManagerOld()</Member>
        <Member type="Method">public List&lt;HistoryItemOld&gt; Load()</Member>
        <Member type="Method">public Boolean AddHistoryItemOld(HistoryItemOld HistoryItemOld)</Member>
        <Member type="Method">public Boolean RemoveHistoryItemOld(HistoryItemOld HistoryItemOld)</Member>
        <Member type="Method">private IEnumerable&lt;HistoryItemOld&gt; ParseHistoryItemOld(XmlNode rootNode)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>XMLManager</Name>
        <Access>Internal</Access>
        <Location left="92" top="551" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private String xmlPath</Member>
        <Member type="Field">private static Object thisLock</Member>
        <Member type="Constructor">public XMLManager(String xmlFilePath)</Member>
        <Member type="Constructor">static XMLManager()</Member>
        <Member type="Method">public List&lt;HistoryItem&gt; Load()</Member>
        <Member type="Method">public Boolean Append(params HistoryItem[] historyItems)</Member>
        <Member type="Method">private HistoryItem ParseHistoryItem(XElement element)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Delegate">
        <Name>GetHistoryItemsEventHandler</Name>
        <Access>Public</Access>
        <Location left="547" top="1494" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <ReturnType>HistoryItem[]</ReturnType>
      </Entity>
      <Entity type="Enum">
        <Name>ObjectType</Name>
        <Access>Public</Access>
        <Location left="332" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Fields = 0</Value>
        <Value>Properties = 1</Value>
      </Entity>
      <Entity type="Enum">
        <Name>HistoryRefreshInfoResult</Name>
        <Access>Public</Access>
        <Location left="12" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Success = 0</Value>
        <Value>Same = 1</Value>
        <Value>Invalid = 2</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Nesting" first="3" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Nesting" first="0" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="2" second="7">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>history</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="2" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>him</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="2" second="5">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>historyItems</StartRole>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="4" second="7">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>history</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="4" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>him</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="4" second="5">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1489</X>
          <Y>1033</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>allHistoryItems</StartRole>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="6" second="3">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>olvMain</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>ShareX.ImageEffectsLib.dll</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>ImageEffect</Name>
        <Access>Public</Access>
        <Location left="678" top="418" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Boolean Enabled { get; set; }</Member>
        <Member type="Constructor">protected ImageEffect()</Member>
        <Member type="Method">public abstract Image Apply(Image img)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Alpha</Name>
        <Access>Internal</Access>
        <Location left="1517" top="1603" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Value { get; set; }</Member>
        <Member type="Property">public Single Addition { get; set; }</Member>
        <Member type="Constructor">public Alpha()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BlackWhite</Name>
        <Access>Internal</Access>
        <Location left="1876" top="1603" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public BlackWhite()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Polaroid</Name>
        <Access>Internal</Access>
        <Location left="1699" top="1603" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Polaroid()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Sepia</Name>
        <Access>Internal</Access>
        <Location left="897" top="418" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Value { get; set; }</Member>
        <Member type="Constructor">public Sepia()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MatrixColor</Name>
        <Access>Internal</Access>
        <Location left="2052" top="1322" />
        <Size width="162" height="451" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Rr { get; set; }</Member>
        <Member type="Property">public Single Rg { get; set; }</Member>
        <Member type="Property">public Single Rb { get; set; }</Member>
        <Member type="Property">public Single Ra { get; set; }</Member>
        <Member type="Property">public Single Ro { get; set; }</Member>
        <Member type="Property">public Single Gr { get; set; }</Member>
        <Member type="Property">public Single Gg { get; set; }</Member>
        <Member type="Property">public Single Gb { get; set; }</Member>
        <Member type="Property">public Single Ga { get; set; }</Member>
        <Member type="Property">public Single Go { get; set; }</Member>
        <Member type="Property">public Single Br { get; set; }</Member>
        <Member type="Property">public Single Bg { get; set; }</Member>
        <Member type="Property">public Single Bb { get; set; }</Member>
        <Member type="Property">public Single Ba { get; set; }</Member>
        <Member type="Property">public Single Bo { get; set; }</Member>
        <Member type="Property">public Single Ar { get; set; }</Member>
        <Member type="Property">public Single Ag { get; set; }</Member>
        <Member type="Property">public Single Ab { get; set; }</Member>
        <Member type="Property">public Single Aa { get; set; }</Member>
        <Member type="Property">public Single Ao { get; set; }</Member>
        <Member type="Constructor">public MatrixColor()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DrawCheckerboard</Name>
        <Access>Public</Access>
        <Location left="1314" top="1033" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 size</Member>
        <Member type="Property">public Int32 Size { get; set; }</Member>
        <Member type="Property">public Color Color { get; set; }</Member>
        <Member type="Property">public Color Color2 { get; set; }</Member>
        <Member type="Constructor">public DrawCheckerboard()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DrawImage</Name>
        <Access>Public</Access>
        <Location left="679" top="66" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Point offset</Member>
        <Member type="Property">public ContentAlignment Placement { get; set; }</Member>
        <Member type="Property">public Point Offset { get; set; }</Member>
        <Member type="Property">public Boolean AutoHide { get; set; }</Member>
        <Member type="Property">public String ImageLocation { get; set; }</Member>
        <Member type="Constructor">public DrawImage()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DrawText</Name>
        <Access>Public</Access>
        <Location left="451" top="633" />
        <Size width="162" height="519" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Point offset</Member>
        <Member type="Field">private FontSafe textFontSafe</Member>
        <Member type="Field">private Int32 cornerRadius</Member>
        <Member type="Property">public ContentAlignment Placement { get; set; }</Member>
        <Member type="Property">public Point Offset { get; set; }</Member>
        <Member type="Property">public Boolean AutoHide { get; set; }</Member>
        <Member type="Property">public String Text { get; set; }</Member>
        <Member type="Property">public Font TextFont { get; set; }</Member>
        <Member type="Property">public Color TextColor { get; set; }</Member>
        <Member type="Property">public Boolean DrawTextShadow { get; set; }</Member>
        <Member type="Property">public Color TextShadowColor { get; set; }</Member>
        <Member type="Property">public Point TextShadowOffset { get; set; }</Member>
        <Member type="Property">public Int32 CornerRadius { get; set; }</Member>
        <Member type="Property">public Int32 BackgroundPadding { get; set; }</Member>
        <Member type="Property">public Boolean DrawBorder { get; set; }</Member>
        <Member type="Property">public Color BorderColor { get; set; }</Member>
        <Member type="Property">public Boolean DrawBackground { get; set; }</Member>
        <Member type="Property">public Color BackgroundColor { get; set; }</Member>
        <Member type="Property">public Boolean UseGradient { get; set; }</Member>
        <Member type="Property">public LinearGradientMode GradientType { get; set; }</Member>
        <Member type="Property">public Color BackgroundColor2 { get; set; }</Member>
        <Member type="Property">public Boolean UseCustomGradient { get; set; }</Member>
        <Member type="Property">public GradientInfo Gradient { get; set; }</Member>
        <Member type="Constructor">public DrawText()</Member>
        <Member type="Method">private Void AddDefaultGradient()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EdgeDetect</Name>
        <Access>Internal</Access>
        <Location left="954" top="1329" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public EdgeDetect()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Emboss</Name>
        <Access>Internal</Access>
        <Location left="1148" top="1329" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Emboss()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GaussianBlur</Name>
        <Access>Internal</Access>
        <Location left="1337" top="1329" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public GaussianBlur()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MatrixConvolution</Name>
        <Access>Internal</Access>
        <Location left="1337" top="1921" />
        <Size width="162" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Int32 X0Y0 { get; set; }</Member>
        <Member type="Property">public Int32 X1Y0 { get; set; }</Member>
        <Member type="Property">public Int32 X2Y0 { get; set; }</Member>
        <Member type="Property">public Int32 X0Y1 { get; set; }</Member>
        <Member type="Property">public Int32 X1Y1 { get; set; }</Member>
        <Member type="Property">public Int32 X2Y1 { get; set; }</Member>
        <Member type="Property">public Int32 X0Y2 { get; set; }</Member>
        <Member type="Property">public Int32 X1Y2 { get; set; }</Member>
        <Member type="Property">public Int32 X2Y2 { get; set; }</Member>
        <Member type="Property">public Int32 Factor { get; set; }</Member>
        <Member type="Property">public Int32 Offset { get; set; }</Member>
        <Member type="Constructor">public MatrixConvolution()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MeanRemoval</Name>
        <Access>Internal</Access>
        <Location left="954" top="1921" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public MeanRemoval()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Outline</Name>
        <Access>Internal</Access>
        <Location left="1148" top="1921" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 size</Member>
        <Member type="Property">public Int32 Size { get; set; }</Member>
        <Member type="Property">public Color Color { get; set; }</Member>
        <Member type="Constructor">public Outline()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Pixelate</Name>
        <Access>Internal</Access>
        <Location left="1862" top="802" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 size</Member>
        <Member type="Property">public Int32 Size { get; set; }</Member>
        <Member type="Constructor">public Pixelate()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Sharpen</Name>
        <Access>Internal</Access>
        <Location left="1679" top="802" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Sharpen()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Smooth</Name>
        <Access>Internal</Access>
        <Location left="1132" top="802" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Smooth()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ImageEffectManager</Name>
        <Access>Public</Access>
        <Location left="897" top="125" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static Image ApplyEffects(Image img, List&lt;ImageEffect&gt; imageEffects)</Member>
        <Member type="Method">public static List&lt;ImageEffect&gt; GetDefaultImageEffects()</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Brightness</Name>
        <Access>Internal</Access>
        <Location left="1132" top="1033" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Value { get; set; }</Member>
        <Member type="Constructor">public Brightness()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Colorize</Name>
        <Access>Internal</Access>
        <Location left="1679" top="1037" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Color Color { get; set; }</Member>
        <Member type="Property">public Single Value { get; set; }</Member>
        <Member type="Constructor">public Colorize()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Contrast</Name>
        <Access>Internal</Access>
        <Location left="1876" top="1037" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Value { get; set; }</Member>
        <Member type="Constructor">public Contrast()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Gamma</Name>
        <Access>Internal</Access>
        <Location left="1517" top="1322" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Value { get; set; }</Member>
        <Member type="Constructor">public Gamma()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Grayscale</Name>
        <Access>Internal</Access>
        <Location left="1699" top="1322" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Value { get; set; }</Member>
        <Member type="Constructor">public Grayscale()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Hue</Name>
        <Access>Internal</Access>
        <Location left="1876" top="1322" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Angle { get; set; }</Member>
        <Member type="Constructor">public Hue()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Inverse</Name>
        <Access>Internal</Access>
        <Location left="1635" top="418" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Inverse()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Saturation</Name>
        <Access>Internal</Access>
        <Location left="2052" top="802" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Value { get; set; }</Member>
        <Member type="Constructor">public Saturation()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Crop</Name>
        <Access>Internal</Access>
        <Location left="1449" top="418" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Padding margin</Member>
        <Member type="Property">public Padding Margin { get; set; }</Member>
        <Member type="Constructor">public Crop()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RoundedCorners</Name>
        <Access>Internal</Access>
        <Location left="1494" top="802" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 cornerRadius</Member>
        <Member type="Property">public Int32 CornerRadius { get; set; }</Member>
        <Member type="Constructor">public RoundedCorners()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Skew</Name>
        <Access>Internal</Access>
        <Location left="1314" top="802" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Int32 Horizontally { get; set; }</Member>
        <Member type="Property">public Int32 Vertically { get; set; }</Member>
        <Member type="Constructor">public Skew()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Blur</Name>
        <Access>Internal</Access>
        <Location left="954" top="1033" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 radius</Member>
        <Member type="Property">public Int32 Radius { get; set; }</Member>
        <Member type="Constructor">public Blur()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Shadow</Name>
        <Access>Internal</Access>
        <Location left="2052" top="1037" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Single opacity</Member>
        <Member type="Field">private Int32 size</Member>
        <Member type="Property">public Single Opacity { get; set; }</Member>
        <Member type="Property">public Int32 Size { get; set; }</Member>
        <Member type="Property">public Single Darkness { get; set; }</Member>
        <Member type="Property">public Color Color { get; set; }</Member>
        <Member type="Property">public Point Offset { get; set; }</Member>
        <Member type="Constructor">public Shadow()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TornEdge</Name>
        <Access>Internal</Access>
        <Location left="1494" top="1033" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Int32 ToothHeight { get; set; }</Member>
        <Member type="Property">public Int32 HorizontalToothRange { get; set; }</Member>
        <Member type="Property">public Int32 VerticalToothRange { get; set; }</Member>
        <Member type="Property">public AnchorStyles Sides { get; set; }</Member>
        <Member type="Constructor">public TornEdge()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Canvas</Name>
        <Access>Internal</Access>
        <Location left="954" top="802" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Padding margin</Member>
        <Member type="Property">public Padding Margin { get; set; }</Member>
        <Member type="Constructor">public Canvas()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DrawBackground</Name>
        <Access>Public</Access>
        <Location left="954" top="1603" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Color Color { get; set; }</Member>
        <Member type="Property">public Boolean UseGradient { get; set; }</Member>
        <Member type="Property">public Color Color2 { get; set; }</Member>
        <Member type="Property">public LinearGradientMode GradientType { get; set; }</Member>
        <Member type="Constructor">public DrawBackground()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Flip</Name>
        <Access>Internal</Access>
        <Location left="1267" top="418" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Boolean Horizontally { get; set; }</Member>
        <Member type="Property">public Boolean Vertically { get; set; }</Member>
        <Member type="Constructor">public Flip()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Scale</Name>
        <Access>Internal</Access>
        <Location left="1076" top="418" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single WidthPercentage { get; set; }</Member>
        <Member type="Property">public Single HeightPercentage { get; set; }</Member>
        <Member type="Constructor">public Scale()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ImageEffectsForm</Name>
        <Access>Public</Access>
        <Location left="2285" top="89" />
        <Size width="162" height="995" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private PropertyGrid pgSettings</Member>
        <Member type="Field">private Button btnAdd</Member>
        <Member type="Field">private MyListView lvEffects</Member>
        <Member type="Field">private ColumnHeader chEffect</Member>
        <Member type="Field">private Button btnRemove</Member>
        <Member type="Field">private MyPictureBox pbResult</Member>
        <Member type="Field">private Button btnOK</Member>
        <Member type="Field">private Button btnCancel</Member>
        <Member type="Field">private Button btnClear</Member>
        <Member type="Field">private Button btnDuplicate</Member>
        <Member type="Field">private Button btnRefresh</Member>
        <Member type="Field">private Button btnSaveImage</Member>
        <Member type="Field">private ExportImportControl eiImageEffects</Member>
        <Member type="Field">private ContextMenuStrip cmsEffects</Member>
        <Member type="Field">private MenuButton mbLoadImage</Member>
        <Member type="Field">private ContextMenuStrip cmsLoadImage</Member>
        <Member type="Field">private ToolStripMenuItem tsmiLoadImageFromFile</Member>
        <Member type="Field">private ToolStripMenuItem tsmiLoadImageFromClipboard</Member>
        <Member type="Property">public Image DefaultImage { get; private set; }</Member>
        <Member type="Property">public List&lt;ImageEffect&gt; Effects { get; private set; }</Member>
        <Member type="Constructor">public ImageEffectsForm(Image img, List&lt;ImageEffect&gt; effects)</Member>
        <Member type="Method">public Void EditorMode()</Member>
        <Member type="Method">private Void AddAllEffectsToContextMenu()</Member>
        <Member type="Method">private Void AddEffectToContextMenu(String groupName, params Type[] imageEffects)</Member>
        <Member type="Method">private Void UpdatePreview()</Member>
        <Member type="Method">private List&lt;ImageEffect&gt; GetImageEffects()</Member>
        <Member type="Method">private Image ApplyEffects()</Member>
        <Member type="Method">private Void tsmiEffectClick(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void RemoveSelectedEffects()</Member>
        <Member type="Method">private Void ClearEffects()</Member>
        <Member type="Method">private Void AddEffect(ImageEffect imageEffect)</Member>
        <Member type="Method">private Void AddEffects(List&lt;ImageEffect&gt; imageEffects)</Member>
        <Member type="Method">private Void btnAdd_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnRemove_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnClear_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnDuplicate_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lvEffects_ItemMoved(Object sender, Int32 oldIndex, Int32 newIndex)</Member>
        <Member type="Method">private Void btnRefresh_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lvEffects_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void lvEffects_ItemChecked(Object sender, ItemCheckedEventArgs e)</Member>
        <Member type="Method">private Void lvEffects_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void pgSettings_PropertyValueChanged(Object s, PropertyValueChangedEventArgs e)</Member>
        <Member type="Method">private Object eiImageEffects_ExportRequested()</Member>
        <Member type="Method">private Void eiImageEffects_ImportRequested(Object obj)</Member>
        <Member type="Method">private Void tsmiLoadImageFromFile_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tsmiLoadImageFromClipboard_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnSaveImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void pbResult_DragEnter(Object sender, DragEventArgs e)</Member>
        <Member type="Method">private Void pbResult_DragDrop(Object sender, DragEventArgs e)</Member>
        <Member type="Method">private Void btnOK_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCancel_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DrawBorder</Name>
        <Access>Public</Access>
        <Location left="1847" top="395" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 size</Member>
        <Member type="Property">public BorderType Type { get; set; }</Member>
        <Member type="Property">public Int32 Size { get; set; }</Member>
        <Member type="Property">public Color Color { get; set; }</Member>
        <Member type="Property">public Boolean UseGradient { get; set; }</Member>
        <Member type="Property">public Color Color2 { get; set; }</Member>
        <Member type="Property">public LinearGradientMode GradientType { get; set; }</Member>
        <Member type="Constructor">public DrawBorder()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Reflection</Name>
        <Access>Internal</Access>
        <Location left="2034" top="395" />
        <Size width="162" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 percentage</Member>
        <Member type="Field">private Int32 maxAlpha</Member>
        <Member type="Field">private Int32 minAlpha</Member>
        <Member type="Property">public Int32 Percentage { get; set; }</Member>
        <Member type="Property">public Int32 MaxAlpha { get; set; }</Member>
        <Member type="Property">public Int32 MinAlpha { get; set; }</Member>
        <Member type="Property">public Int32 Offset { get; set; }</Member>
        <Member type="Property">public Boolean Skew { get; set; }</Member>
        <Member type="Property">public Int32 SkewSize { get; set; }</Member>
        <Member type="Constructor">public Reflection()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Resize</Name>
        <Access>Public</Access>
        <Location left="1148" top="1603" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Int32 Width { get; set; }</Member>
        <Member type="Property">public Int32 Height { get; set; }</Member>
        <Member type="Property">public Boolean ResizeIfBigger { get; set; }</Member>
        <Member type="Constructor">public Resize()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Rotate</Name>
        <Access>Internal</Access>
        <Location left="1337" top="1603" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Angle { get; set; }</Member>
        <Member type="Property">public Boolean Upsize { get; set; }</Member>
        <Member type="Property">public Boolean Clip { get; set; }</Member>
        <Member type="Constructor">public Rotate()</Member>
        <Member type="Method">public override Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WatermarkConfig</Name>
        <Access>Public</Access>
        <Location left="451" top="27" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public WatermarkType Type</Member>
        <Member type="Field">public ContentAlignment Placement</Member>
        <Member type="Field">public Int32 Offset</Member>
        <Member type="Field">public DrawText Text</Member>
        <Member type="Field">public DrawImage Image</Member>
        <Member type="Constructor">public WatermarkConfig()</Member>
        <Member type="Method">public Image Apply(Image img)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WatermarkForm</Name>
        <Access>Public</Access>
        <Location left="12" top="12" />
        <Size width="162" height="1012" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private WatermarkConfig config</Member>
        <Member type="Field">private Boolean IsGuiReady</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label lblWatermarkOffsetPixel</Member>
        <Member type="Field">internal ComboBox cboWatermarkType</Member>
        <Member type="Field">internal CheckBox cbWatermarkAutoHide</Member>
        <Member type="Field">internal Label lblWatermarkType</Member>
        <Member type="Field">internal ComboBox chkWatermarkPosition</Member>
        <Member type="Field">internal Label lblWatermarkPosition</Member>
        <Member type="Field">internal NumericUpDown nudWatermarkOffset</Member>
        <Member type="Field">internal Label lblWatermarkOffset</Member>
        <Member type="Field">internal GroupBox gbWatermarkBackground</Member>
        <Member type="Field">internal Label lblRectangleCornerRadius</Member>
        <Member type="Field">internal ComboBox cbWatermarkGradientType</Member>
        <Member type="Field">internal NumericUpDown nudWatermarkCornerRadius</Member>
        <Member type="Field">internal Label lblWatermarkCornerRadiusTip</Member>
        <Member type="Field">internal GroupBox gbWatermarkText</Member>
        <Member type="Field">internal Label lblWatermarkText</Member>
        <Member type="Field">internal Label lblWatermarkFont</Member>
        <Member type="Field">internal Button btnWatermarkFont</Member>
        <Member type="Field">internal TextBox txtWatermarkText</Member>
        <Member type="Field">internal Button btwWatermarkBrowseImage</Member>
        <Member type="Field">internal TextBox txtWatermarkImageLocation</Member>
        <Member type="Field">private MyPictureBox pbPreview</Member>
        <Member type="Field">private GroupBox gbImageWatermark</Member>
        <Member type="Field">private CheckBox cbWatermarkDrawBackground</Member>
        <Member type="Field">private CheckBox cbWatermarkUseGradient</Member>
        <Member type="Field">private ColorButton btnTextColor</Member>
        <Member type="Field">private ColorButton btnBackgroundColor2</Member>
        <Member type="Field">private ColorButton btnBackgroundColor</Member>
        <Member type="Field">private ColorButton btnBorderColor</Member>
        <Member type="Field">internal Label lblImageLocation</Member>
        <Member type="Field">private Label lblPreview</Member>
        <Member type="Constructor">public WatermarkForm(WatermarkConfig watermarkConfig)</Member>
        <Member type="Method">private Void WatermarkUI_Load(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void WatermarkUI_Resize(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void UpdatePreview()</Member>
        <Member type="Method">private Void cboWatermarkType_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbWatermarkPosition_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudWatermarkOffset_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbWatermarkAutoHide_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtWatermarkText_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnWatermarkFont_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnTextColor_ColorChanged(Color color)</Member>
        <Member type="Method">private Void cbWatermarkDrawBackground_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnBorderColor_ColorChanged(Color color)</Member>
        <Member type="Method">private Void nudWatermarkCornerRadius_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnBackgroundColor_ColorChanged(Color color)</Member>
        <Member type="Method">private Void cbWatermarkBackColor2_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbWatermarkGradientType_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnBackgroundColor2_ColorChanged(Color color)</Member>
        <Member type="Method">private Void txtWatermarkImageLocation_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btwWatermarkBrowseImage_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>WatermarkType</Name>
        <Access>Public</Access>
        <Location left="228" top="271" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Text = 0</Value>
        <Value>Image = 1</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1607</X>
          <Y>1844</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1971</X>
          <Y>1844</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1782</X>
          <Y>1844</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="4" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="5" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2144</X>
          <Y>1890</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="6" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1409</X>
          <Y>1300</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="7" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="8" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="9" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1047</X>
          <Y>1570</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="10" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1230</X>
          <Y>1570</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="11" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1425</X>
          <Y>1572</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="12" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1439</X>
          <Y>2255</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="13" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1044</X>
          <Y>2162</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="14" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1225</X>
          <Y>2162</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="15" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="16" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="17" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="19" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1235</X>
          <Y>1298</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="20" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1771</X>
          <Y>1298</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="21" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1976</X>
          <Y>1298</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="22" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1590</X>
          <Y>1573</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="23" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1774</X>
          <Y>1575</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="24" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1959</X>
          <Y>1577</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="25" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="26" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="27" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="28" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="29" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="30" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>929</X>
          <Y>1125</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="31" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2147</X>
          <Y>1297</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="32" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1577</X>
          <Y>1298</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="33" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1021</X>
          <Y>777</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="34" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1039</X>
          <Y>1844</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="35" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="36" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="38" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1941</X>
          <Y>660</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="39" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2165</X>
          <Y>684</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="40" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1239</X>
          <Y>1844</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="41" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1425</X>
          <Y>1844</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="42" second="44">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>Type</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="42" second="8">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>Text</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="42" second="7">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>Image</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="43" second="42">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>config</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>ShareX.IndexerLib.dll</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>HtmlHelper</Name>
        <Access>Public</Access>
        <Location left="839" top="326" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static String GetCssStyle(String filePath)</Member>
        <Member type="Method">public static String StartTag(String tag, String style, String otherFields)</Member>
        <Member type="Method">public static String EndTag(String tag)</Member>
        <Member type="Method">public static String Tag(String tag, String content, String style, String otherFields)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Indexer</Name>
        <Access>Public</Access>
        <Location left="436" top="326" />
        <Size width="162" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected IndexerSettings config</Member>
        <Member type="Field">protected StringBuilder sbContent</Member>
        <Member type="Constructor">protected Indexer(IndexerSettings indexerSettings)</Member>
        <Member type="Method">public static String Index(String folderPath, IndexerSettings config)</Member>
        <Member type="Method">public virtual String Index(String folderPath)</Member>
        <Member type="Method">protected FolderInfo GetFolderInfo(String folderPath, Int32 level = 0)</Member>
        <Member type="Method">protected abstract Void IndexFolder(FolderInfo dir, Int32 level = 0)</Member>
        <Member type="Method">protected virtual String GetFolderNameRow(FolderInfo dir, Int32 level = 0)</Member>
        <Member type="Method">protected virtual String GetFileNameRow(FileInfo fi, Int32 level = 0)</Member>
        <Member type="Method">protected virtual String GetFooter()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IndexerHtml</Name>
        <Access>Public</Access>
        <Location left="651" top="326" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public IndexerHtml(IndexerSettings indexerSettings)</Member>
        <Member type="Method">public override String Index(String folderPath)</Member>
        <Member type="Method">protected virtual Void IndexFolder(FolderInfo dir, Int32 level)</Member>
        <Member type="Method">protected virtual String GetFolderNameRow(FolderInfo dir, Int32 level)</Member>
        <Member type="Method">protected virtual String GetFileNameRow(FileInfo fi, Int32 level)</Member>
        <Member type="Method">protected virtual String GetFooter()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IndexerSettings</Name>
        <Access>Public</Access>
        <Location left="224" top="326" />
        <Size width="162" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public Boolean BinaryUnits</Member>
        <Member type="Property">public IndexerOutput Output { get; set; }</Member>
        <Member type="Property">public Boolean SkipHiddenFolders { get; set; }</Member>
        <Member type="Property">public Boolean SkipHiddenFiles { get; set; }</Member>
        <Member type="Property">public Int32 MaxDepthLevel { get; set; }</Member>
        <Member type="Property">public Boolean AddFooter { get; set; }</Member>
        <Member type="Property">public String IndentationText { get; set; }</Member>
        <Member type="Property">public Boolean AddEmptyLineAfterFolders { get; set; }</Member>
        <Member type="Property">public String CssFilePath { get; set; }</Member>
        <Member type="Property">public Boolean AddValidationIcons { get; set; }</Member>
        <Member type="Property">public Boolean UseAttribute { get; set; }</Member>
        <Member type="Constructor">public IndexerSettings()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IndexerText</Name>
        <Access>Public</Access>
        <Location left="459" top="38" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public IndexerText(IndexerSettings indexerSettings)</Member>
        <Member type="Method">public override String Index(String folderPath)</Member>
        <Member type="Method">protected virtual Void IndexFolder(FolderInfo dir, Int32 level)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>FolderInfo</Name>
        <Access>Public</Access>
        <Location left="839" top="38" />
        <Size width="162" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String FolderPath { get; set; }</Member>
        <Member type="Property">public List&lt;FileInfo&gt; Files { get; set; }</Member>
        <Member type="Property">public List&lt;FolderInfo&gt; Folders { get; set; }</Member>
        <Member type="Property">public Int64 Size { get; private set; }</Member>
        <Member type="Property">public Int32 TotalFileCount { get; private set; }</Member>
        <Member type="Property">public Int32 TotalFolderCount { get; private set; }</Member>
        <Member type="Property">public FolderInfo Parent { get; set; }</Member>
        <Member type="Property">public String FolderName { get; }</Member>
        <Member type="Property">public Boolean IsEmpty { get; }</Member>
        <Member type="Constructor">public FolderInfo(String folderPath)</Member>
        <Member type="Method">public Void Update()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IndexerXml</Name>
        <Access>Public</Access>
        <Location left="224" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private XmlWriter xmlWriter</Member>
        <Member type="Constructor">public IndexerXml(IndexerSettings indexerSettings)</Member>
        <Member type="Method">public override String Index(String folderPath)</Member>
        <Member type="Method">protected virtual Void IndexFolder(FolderInfo dir, Int32 level = 0)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>IndexerOutput</Name>
        <Access>Public</Access>
        <Location left="12" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Txt = 0</Value>
        <Value>Html = 1</Value>
        <Value>Xml = 2</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="2" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="4" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="6" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="1" second="3">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>config</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>ShareX.ScreenCaptureLib.dll</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>RectangleAnnotate</Name>
        <Access>Public</Access>
        <Location left="2468" top="93" />
        <Size width="162" height="808" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Boolean cursorShown</Member>
        <Member type="Field">private Timer timer</Member>
        <Member type="Field">private Image backgroundImage</Member>
        <Member type="Field">private Pen borderDotPen</Member>
        <Member type="Field">private Pen borderDotPen2</Member>
        <Member type="Field">private Point positionOnClick</Member>
        <Member type="Field">private Boolean isMouseDown</Member>
        <Member type="Field">private Boolean isDrawingMode</Member>
        <Member type="Field">private Stopwatch penTimer</Member>
        <Member type="Field">private Font rectangleInfofont</Member>
        <Member type="Field">private Font tipFont</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Property">public static Rectangle LastSelectionRectangle0Based { get; private set; }</Member>
        <Member type="Property">public Rectangle ScreenRectangle { get; private set; }</Member>
        <Member type="Property">public Rectangle ScreenRectangle0Based { get; }</Member>
        <Member type="Property">public Rectangle SelectionRectangle { get; private set; }</Member>
        <Member type="Property">public Rectangle SelectionRectangle0Based { get; }</Member>
        <Member type="Property">public Point CurrentMousePosition { get; private set; }</Member>
        <Member type="Property">public Point CurrentMousePosition0Based { get; }</Member>
        <Member type="Property">public Point PreviousMousePosition { get; private set; }</Member>
        <Member type="Property">public Point PreviousMousePosition0Based { get; }</Member>
        <Member type="Property">public Boolean CursorShown { get; private set; }</Member>
        <Member type="Property">public RectangleAnnotateOptions Options { get; private set; }</Member>
        <Member type="Constructor">public RectangleAnnotate(RectangleAnnotateOptions options)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void RectangleAnnotate_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void RectangleAnnotate_FormClosing(Object sender, FormClosingEventArgs e)</Member>
        <Member type="Method">private Void RectangleAnnotate_LostFocus(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void RectangleAnnotate_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void RectangleAnnotate_KeyUp(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void RectangleAnnotate_MouseDown(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void RectangleAnnotate_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void RectangleAnnotate_MouseWheel(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void DoSelection(Rectangle rect)</Member>
        <Member type="Method">public Image GetAreaImage()</Member>
        <Member type="Method">private Void timer_Tick(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void OnPaintBackground(PaintEventArgs e)</Member>
        <Member type="Method">protected virtual Void OnPaint(PaintEventArgs e)</Member>
        <Member type="Method">private Void DrawTips(Graphics g)</Member>
        <Member type="Method">private Void DrawRectangleInfo(Graphics g)</Member>
        <Member type="Method">private Void DrawLine(Graphics g, Point pos1, Point pos2, Int32 size, Color color)</Member>
        <Member type="Method">private Void DrawDot(Graphics g, Point pos, Int32 size, Color color, Boolean border = False)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RectangleTransparent</Name>
        <Access>Public</Access>
        <Location left="1822" top="1698" />
        <Size width="162" height="519" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Timer timer</Member>
        <Member type="Field">private Bitmap surface</Member>
        <Member type="Field">private Graphics gSurface</Member>
        <Member type="Field">private Pen clearPen</Member>
        <Member type="Field">private Pen borderDotPen</Member>
        <Member type="Field">private Pen borderDotPen2</Member>
        <Member type="Field">private Point currentPosition</Member>
        <Member type="Field">private Point positionOnClick</Member>
        <Member type="Field">private Boolean isMouseDown</Member>
        <Member type="Field">private Stopwatch penTimer</Member>
        <Member type="Property">public static Rectangle LastSelectionRectangle0Based { get; private set; }</Member>
        <Member type="Property">public Rectangle ScreenRectangle { get; private set; }</Member>
        <Member type="Property">public Rectangle ScreenRectangle0Based { get; }</Member>
        <Member type="Property">public Rectangle SelectionRectangle { get; private set; }</Member>
        <Member type="Property">public Rectangle SelectionRectangle0Based { get; }</Member>
        <Member type="Property">private Rectangle PreviousSelectionRectangle { get; set; }</Member>
        <Member type="Property">private Rectangle PreviousSelectionRectangle0Based { get; }</Member>
        <Member type="Constructor">public RectangleTransparent()</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void RectangleLight_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void RectangleLight_KeyUp(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void RectangleLight_MouseDown(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void RectangleLight_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">public Image GetAreaImage()</Member>
        <Member type="Method">private Void timer_Tick(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void RefreshSurface()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RectangleAnnotateOptions</Name>
        <Access>Public</Access>
        <Location left="1610" top="1698" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 drawingPenSize</Member>
        <Member type="Property">public Boolean ShowRectangleInfo { get; set; }</Member>
        <Member type="Property">public Boolean ShowTips { get; set; }</Member>
        <Member type="Property">public Color DrawingPenColor { get; set; }</Member>
        <Member type="Property">public Int32 DrawingPenSize { get; set; }</Member>
        <Member type="Constructor">public RectangleAnnotateOptions()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>FFmpegOptions</Name>
        <Access>Public</Access>
        <Location left="1398" top="1698" />
        <Size width="162" height="434" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String VideoSource { get; set; }</Member>
        <Member type="Property">public String AudioSource { get; set; }</Member>
        <Member type="Property">public FFmpegVideoCodec VideoCodec { get; set; }</Member>
        <Member type="Property">public FFmpegAudioCodec AudioCodec { get; set; }</Member>
        <Member type="Property">public String Extension { get; set; }</Member>
        <Member type="Property">public String CLIPath { get; set; }</Member>
        <Member type="Property">public String UserArgs { get; set; }</Member>
        <Member type="Property">public Boolean ShowError { get; set; }</Member>
        <Member type="Property">public Boolean UseCustomCommands { get; set; }</Member>
        <Member type="Property">public String CustomCommands { get; set; }</Member>
        <Member type="Property">public FFmpegPreset Preset { get; set; }</Member>
        <Member type="Property">public Int32 x264_CRF { get; set; }</Member>
        <Member type="Property">public Int32 VPx_CRF { get; set; }</Member>
        <Member type="Property">public Int32 XviD_qscale { get; set; }</Member>
        <Member type="Property">public Int32 AAC_bitrate { get; set; }</Member>
        <Member type="Property">public Int32 Vorbis_qscale { get; set; }</Member>
        <Member type="Property">public Int32 MP3_qscale { get; set; }</Member>
        <Member type="Property">public Boolean IsSourceSelected { get; }</Member>
        <Member type="Property">public Boolean IsVideoSourceSelected { get; }</Member>
        <Member type="Property">public Boolean IsAudioSourceSelected { get; }</Member>
        <Member type="Constructor">public FFmpegOptions()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>FFmpegHelper</Name>
        <Access>Public</Access>
        <Location left="2582" top="1296" />
        <Size width="162" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public Int32 libmp3lame_qscale_end</Member>
        <Member type="Field">public String SourceNone</Member>
        <Member type="Field">public String SourceGDIGrab</Member>
        <Member type="Property">public StringBuilder Output { get; private set; }</Member>
        <Member type="Property">public ScreencastOptions Options { get; private set; }</Member>
        <Member type="Constructor">public FFmpegHelper(ScreencastOptions options)</Member>
        <Member type="Constructor">static FFmpegHelper()</Member>
        <Member type="Method">private Void FFmpegHelper_DataReceived(Object sender, DataReceivedEventArgs e)</Member>
        <Member type="Method">public Boolean Record()</Member>
        <Member type="Method">public DirectShowDevices GetDirectShowDevices()</Member>
        <Member type="Method">public override Void Close()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DirectShowDevices</Name>
        <Access>Public</Access>
        <Location left="1072" top="1620" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public List&lt;String&gt; VideoDevices</Member>
        <Member type="Field">public List&lt;String&gt; AudioDevices</Member>
        <Member type="Constructor">public DirectShowDevices()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>FFmpegOptionsForm</Name>
        <Access>Public</Access>
        <Location left="860" top="1620" />
        <Size width="162" height="1573" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public ScreencastOptions Options</Member>
        <Member type="Field">public String DefaultToolsPath</Member>
        <Member type="Field">private Boolean settingsLoaded</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label lblExtension</Member>
        <Member type="Field">private Label lblX264CRF</Member>
        <Member type="Field">private NumericUpDown nudx264CRF</Member>
        <Member type="Field">private ToolTip ttHelpTip</Member>
        <Member type="Field">private Label lblCodec</Member>
        <Member type="Field">private ComboBox cboVideoCodec</Member>
        <Member type="Field">private ComboBox cbPreset</Member>
        <Member type="Field">private Label lblPreset</Member>
        <Member type="Field">private NumericUpDown nudQscale</Member>
        <Member type="Field">private Label lblQscale</Member>
        <Member type="Field">private GroupBox gbFFmpegExe</Member>
        <Member type="Field">private Button btnFFmpegBrowse</Member>
        <Member type="Field">private TextBox txtFFmpegPath</Member>
        <Member type="Field">private GroupBox gbCommandLinePreview</Member>
        <Member type="Field">private TextBox txtCommandLinePreview</Member>
        <Member type="Field">private GroupBox gbCommandLineArgs</Member>
        <Member type="Field">private Button btnFFmpegHelp</Member>
        <Member type="Field">private TextBox tbUserArgs</Member>
        <Member type="Field">private Button btnDownload</Member>
        <Member type="Field">private TabControl tcFFmpegVideoCodecs</Member>
        <Member type="Field">private TabPage tpX264</Member>
        <Member type="Field">private TabPage tpVpx</Member>
        <Member type="Field">private TabPage tpXvid</Member>
        <Member type="Field">private NumericUpDown nudVPxCRF</Member>
        <Member type="Field">private Label lblVpxCRF</Member>
        <Member type="Field">private Button btnTest</Member>
        <Member type="Field">private Button btnCopyPreview</Member>
        <Member type="Field">private TabControl tcFFmpegAudioCodecs</Member>
        <Member type="Field">private TabPage tpVorbis</Member>
        <Member type="Field">private TabPage tpMP3</Member>
        <Member type="Field">private ComboBox cboVideoSource</Member>
        <Member type="Field">private Label lblVideoSource</Member>
        <Member type="Field">private ComboBox cboAudioSource</Member>
        <Member type="Field">private Label lblAudioSource</Member>
        <Member type="Field">private ComboBox cboAudioCodec</Member>
        <Member type="Field">private Label lblAudioCodec</Member>
        <Member type="Field">private GroupBox gbSource</Member>
        <Member type="Field">private GroupBox gbCodecs</Member>
        <Member type="Field">private Button btnRefreshSources</Member>
        <Member type="Field">private TrackBar tbVorbis_qscale</Member>
        <Member type="Field">private Label lblVorbisQuality</Member>
        <Member type="Field">private TrackBar tbMP3_qscale</Member>
        <Member type="Field">private Label lblMP3Quality</Member>
        <Member type="Field">private TabPage tpAAC</Member>
        <Member type="Field">private TrackBar tbAACBitrate</Member>
        <Member type="Field">private Label lblAACQuality</Member>
        <Member type="Field">private CheckBox cbShowError</Member>
        <Member type="Field">private CheckBox cbCustomCommands</Member>
        <Member type="Field">private Button btnHelp</Member>
        <Member type="Field">private ExportImportControl eiFFmpeg</Member>
        <Member type="Field">private TextBox txtExtension</Member>
        <Member type="Constructor">public FFmpegOptionsForm(ScreencastOptions options)</Member>
        <Member type="Method">private Void SettingsLoad()</Member>
        <Member type="Method">private Void RefreshSourcesAsync()</Member>
        <Member type="Method">private Void UpdateUI()</Member>
        <Member type="Method">private Void btnRefreshSources_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cboVideoSource_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cboAudioSource_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cboVideoCodec_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cboAudioCodec_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtExtension_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudx264CRF_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbPreset_SelectedIndexChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudVPxCRF_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void nudQscale_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tbAACBitrate_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tbVorbis_qscale_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tbMP3_qscale_ValueChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbShowError_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tbFFmpegPath_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void buttonFFmpegBrowse_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void tbUserArgs_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void buttonFFmpegHelp_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnDownload_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void DownloaderForm_InstallRequested(String filePath)</Member>
        <Member type="Method">private Void btnTest_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnCopyPreview_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void cbCustomCommands_CheckedChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void txtCommandLinePreview_TextChanged(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void btnHelp_Click(Object sender, EventArgs e)</Member>
        <Member type="Method">private Object eiFFmpeg_ExportRequested()</Member>
        <Member type="Method">private Void eiFFmpeg_ImportRequested(Object obj)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScreencastOptions</Name>
        <Access>Public</Access>
        <Location left="1114" top="1920" />
        <Size width="162" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ScreenRecordOutput OutputType { get; set; }</Member>
        <Member type="Property">public String OutputPath { get; set; }</Member>
        <Member type="Property">public Int32 GIFFPS { get; set; }</Member>
        <Member type="Property">public Int32 ScreenRecordFPS { get; set; }</Member>
        <Member type="Property">public Rectangle CaptureArea { get; set; }</Member>
        <Member type="Property">public Single Duration { get; set; }</Member>
        <Member type="Property">public Boolean DrawCursor { get; set; }</Member>
        <Member type="Property">public FFmpegOptions FFmpeg { get; set; }</Member>
        <Member type="Constructor">public ScreencastOptions()</Member>
        <Member type="Method">public String GetFFmpegCommands()</Member>
        <Member type="Method">public String GetFFmpegArgs(Boolean isCustom = False)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RectangleLight</Name>
        <Access>Public</Access>
        <Location left="2464" top="1750" />
        <Size width="162" height="502" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Timer timer</Member>
        <Member type="Field">private Image backgroundImage</Member>
        <Member type="Field">private TextureBrush backgroundBrush</Member>
        <Member type="Field">private Pen borderDotPen</Member>
        <Member type="Field">private Pen borderDotPen2</Member>
        <Member type="Field">private Point currentPosition</Member>
        <Member type="Field">private Point positionOnClick</Member>
        <Member type="Field">private Boolean isMouseDown</Member>
        <Member type="Field">private Stopwatch penTimer</Member>
        <Member type="Property">public static Rectangle LastSelectionRectangle0Based { get; private set; }</Member>
        <Member type="Property">public Rectangle ScreenRectangle { get; private set; }</Member>
        <Member type="Property">public Rectangle ScreenRectangle0Based { get; }</Member>
        <Member type="Property">public Rectangle SelectionRectangle { get; private set; }</Member>
        <Member type="Property">public Rectangle SelectionRectangle0Based { get; }</Member>
        <Member type="Constructor">public RectangleLight()</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Member type="Method">private Void RectangleLight_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void RectangleLight_KeyUp(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void RectangleLight_MouseDown(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void RectangleLight_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">public Image GetAreaImage()</Member>
        <Member type="Method">private Void timer_Tick(Object sender, EventArgs e)</Member>
        <Member type="Method">protected virtual Void OnPaintBackground(PaintEventArgs e)</Member>
        <Member type="Method">protected virtual Void OnPaint(PaintEventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Surface</Name>
        <Access>Public</Access>
        <Location left="528" top="1536" />
        <Size width="162" height="757" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected TextureBrush darkBackgroundBrush</Member>
        <Member type="Field">protected TextureBrush lightBackgroundBrush</Member>
        <Member type="Field">protected GraphicsPath regionFillPath</Member>
        <Member type="Field">protected GraphicsPath regionDrawPath</Member>
        <Member type="Field">protected Pen borderPen</Member>
        <Member type="Field">protected Pen borderDotPen</Member>
        <Member type="Field">protected Brush nodeBackgroundBrush</Member>
        <Member type="Field">protected Font textFont</Member>
        <Member type="Field">protected Stopwatch timer</Member>
        <Member type="Field">protected Int32 frameCount</Member>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">public static GraphicsPath LastRegionFillPath</Member>
        <Member type="Field">public static GraphicsPath LastRegionDrawPath</Member>
        <Member type="Property">public Image SurfaceImage { get; set; }</Member>
        <Member type="Property">public SurfaceOptions Config { get; set; }</Member>
        <Member type="Property">public Int32 FPS { get; private set; }</Member>
        <Member type="Property">public Rectangle ScreenRectangle { get; private set; }</Member>
        <Member type="Property">public Rectangle ScreenRectangle0Based { get; private set; }</Member>
        <Member type="Property">public SurfaceResult Result { get; private set; }</Member>
        <Member type="Property">protected List&lt;DrawableObject&gt; DrawableObjects { get; set; }</Member>
        <Member type="Constructor">public Surface()</Member>
        <Member type="Method">private Void InitializeComponent()</Member>
        <Member type="Method">public virtual Void Prepare()</Member>
        <Member type="Method">private Void Surface_Shown(Object sender, EventArgs e)</Member>
        <Member type="Method">private Void Surface_KeyUp(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void Surface_MouseDoubleClick(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">protected virtual Void OnPaintBackground(PaintEventArgs e)</Member>
        <Member type="Method">protected virtual Void OnPaint(PaintEventArgs e)</Member>
        <Member type="Method">public virtual Image GetRegionImage()</Member>
        <Member type="Method">public Void Close(SurfaceResult result)</Member>
        <Member type="Method">protected new virtual Void Update()</Member>
        <Member type="Method">protected virtual Void Draw(Graphics g)</Member>
        <Member type="Method">protected Void DrawObjects(Graphics g)</Member>
        <Member type="Method">private Void CheckFPS()</Member>
        <Member type="Method">private Void DrawInfo(Graphics g)</Member>
        <Member type="Method">protected Rectangle CalculateAreaFromNodes()</Member>
        <Member type="Method">internal NodeObject MakeNode()</Member>
        <Member type="Method">protected Void ShowNodes()</Member>
        <Member type="Method">protected Void HideNodes()</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ImageCache</Name>
        <Access>Public</Access>
        <Location left="2120" top="1750" />
        <Size width="162" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected Thread task</Member>
        <Member type="Field">protected BlockingCollection&lt;Image&gt; imageQueue</Member>
        <Member type="Property">public Boolean IsWorking { get; protected set; }</Member>
        <Member type="Property">public ScreencastOptions Options { get; set; }</Member>
        <Member type="Constructor">public ImageCache()</Member>
        <Member type="Method">public Void AddImageAsync(Image img)</Member>
        <Member type="Method">protected virtual Void StartConsumerThread()</Member>
        <Member type="Method">protected abstract Void WriteFrame(Image img)</Member>
        <Member type="Method">public Void Finish()</Member>
        <Member type="Method">public virtual Void Dispose()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LocationInfo</Name>
        <Access>Public</Access>
        <Location left="1920" top="898" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Int64 Location { get; set; }</Member>
        <Member type="Property">public Int64 Length { get; set; }</Member>
        <Member type="Constructor">public LocationInfo(Int64 location, Int64 length)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AreaManager</Name>
        <Access>Public</Access>
        <Location left="1732" top="802" />
        <Size width="162" height="672" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private RectangleRegion surface</Member>
        <Member type="Field">private Point currentPosition</Member>
        <Member type="Field">private Point positionOnClick</Member>
        <Member type="Field">private Boolean proportionalResizing</Member>
        <Member type="Property">public List&lt;Rectangle&gt; Areas { get; private set; }</Member>
        <Member type="Property">public Int32 SelectedAreaIndex { get; private set; }</Member>
        <Member type="Property">public List&lt;Rectangle&gt; GetValidAreas { get; }</Member>
        <Member type="Property">public Rectangle CurrentArea { get; set; }</Member>
        <Member type="Property">public Boolean IsCurrentAreaValid { get; }</Member>
        <Member type="Property">public Rectangle CurrentHoverArea { get; private set; }</Member>
        <Member type="Property">public Boolean IsCurrentHoverAreaValid { get; }</Member>
        <Member type="Property">public ResizeManager ResizeManager { get; private set; }</Member>
        <Member type="Property">public Boolean IsCreating { get; private set; }</Member>
        <Member type="Property">public Boolean IsMoving { get; private set; }</Member>
        <Member type="Property">public Boolean IsResizing { get; }</Member>
        <Member type="Property">public List&lt;Rectangle&gt; Windows { get; set; }</Member>
        <Member type="Property">public Boolean WindowCaptureMode { get; set; }</Member>
        <Member type="Property">public Boolean IncludeControls { get; set; }</Member>
        <Member type="Property">public Int32 MinimumSize { get; set; }</Member>
        <Member type="Constructor">public AreaManager(RectangleRegion surface)</Member>
        <Member type="Method">private Void surface_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void surface_KeyUp(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">public Void Update()</Member>
        <Member type="Method">private Void CheckHover()</Member>
        <Member type="Method">private Void surface_MouseDown(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void surface_MouseUp(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void SelectArea()</Member>
        <Member type="Method">private Void DeselectArea()</Member>
        <Member type="Method">private Void RemoveCurrentArea()</Member>
        <Member type="Method">private Boolean IsAreaValid(Rectangle rect)</Member>
        <Member type="Method">public Int32 AreaIntersect(Point mousePosition)</Member>
        <Member type="Method">public Int32 AreaIntersect()</Member>
        <Member type="Method">public Rectangle GetAreaIntersectWithMouse()</Member>
        <Member type="Method">public Boolean IsAreaIntersect()</Member>
        <Member type="Method">public Rectangle CombineAreas()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DrawableObject</Name>
        <Access>Public</Access>
        <Location left="1494" top="818" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Boolean Visible { get; set; }</Member>
        <Member type="Property">public RectangleF Rectangle { get; set; }</Member>
        <Member type="Property">public Boolean IsMouseHover { get; set; }</Member>
        <Member type="Property">public Boolean IsDragging { get; set; }</Member>
        <Member type="Property">public Int32 Order { get; set; }</Member>
        <Member type="Constructor">public DrawableObject()</Member>
        <Member type="Method">public Void Show()</Member>
        <Member type="Method">public Void Hide()</Member>
        <Member type="Method">public virtual Void Draw(Graphics g)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RectangleRegion</Name>
        <Access>Public</Access>
        <Location left="1284" top="898" />
        <Size width="162" height="485" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Bitmap bmpSurfaceImage</Member>
        <Member type="Property">public AreaManager AreaManager { get; private set; }</Member>
        <Member type="Property">public Boolean OneClickMode { get; set; }</Member>
        <Member type="Property">public Point CurrentPosition { get; set; }</Member>
        <Member type="Property">public Color CurrentColor { get; }</Member>
        <Member type="Property">public Boolean RulerMode { get; set; }</Member>
        <Member type="Constructor">public RectangleRegion()</Member>
        <Member type="Method">private Void RectangleRegion_MouseDown(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">private Void RectangleRegion_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">private Void CopyAreaInfo()</Member>
        <Member type="Method">private Void RectangleRegion_MouseWheel(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">public override Void Prepare()</Member>
        <Member type="Method">protected override Void Update()</Member>
        <Member type="Method">protected virtual Void Draw(Graphics g)</Member>
        <Member type="Method">private String GetRulerText(Rectangle area)</Member>
        <Member type="Method">private String GetAreaText(Rectangle area)</Member>
        <Member type="Method">private Void DrawScreenColorPickerInfo(Graphics g)</Member>
        <Member type="Method">private Void DrawCrosshair(Graphics g)</Member>
        <Member type="Method">private Void DrawMagnifier(Graphics g)</Member>
        <Member type="Method">private Bitmap Magnifier(Image img, Point position, Int32 horizontalPixelCount, Int32 verticalPixelCount, Int32 pixelSize)</Member>
        <Member type="Method">private Void DrawRuler(Graphics g, Rectangle rect, Pen pen, Int32 rulerSize, Int32 rulerWidth)</Member>
        <Member type="Method">public Void UpdateRegionPath()</Member>
        <Member type="Method">protected virtual Void AddShapePath(GraphicsPath graphicsPath, Rectangle rect)</Member>
        <Member type="Method">protected virtual Void Dispose(Boolean disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DiamondRegion</Name>
        <Access>Public</Access>
        <Location left="810" top="1064" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public DiamondRegion()</Member>
        <Member type="Method">protected virtual Void AddShapePath(GraphicsPath graphicsPath, Rectangle rect)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EllipseRegion</Name>
        <Access>Public</Access>
        <Location left="1060" top="762" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public EllipseRegion()</Member>
        <Member type="Method">protected virtual Void AddShapePath(GraphicsPath graphicsPath, Rectangle rect)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>FreeHandRegion</Name>
        <Access>Public</Access>
        <Location left="640" top="738" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private NodeObject lastNode</Member>
        <Member type="Field">private List&lt;Point&gt; points</Member>
        <Member type="Field">private Boolean isAreaCreated</Member>
        <Member type="Field">private Rectangle currentArea</Member>
        <Member type="Constructor">public FreeHandRegion()</Member>
        <Member type="Method">protected override Void Update()</Member>
        <Member type="Method">protected virtual Void Draw(Graphics g)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PolygonRegion</Name>
        <Access>Public</Access>
        <Location left="436" top="898" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private List&lt;NodeObject&gt; nodes</Member>
        <Member type="Field">private Boolean isAreaCreated</Member>
        <Member type="Field">private Rectangle currentArea</Member>
        <Member type="Constructor">public PolygonRegion()</Member>
        <Member type="Method">private Void PolygonRegionSurface_MouseDown(Object sender, MouseEventArgs e)</Member>
        <Member type="Method">protected override Void Update()</Member>
        <Member type="Method">protected virtual Void Draw(Graphics g)</Member>
        <Member type="Method">private Void CreateNode()</Member>
        <Member type="Method">private Void ActivateNode(NodeObject node)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RoundedRectangleRegion</Name>
        <Access>Public</Access>
        <Location left="992" top="1226" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Single Radius { get; set; }</Member>
        <Member type="Property">public Int32 RadiusIncrement { get; set; }</Member>
        <Member type="Constructor">public RoundedRectangleRegion()</Member>
        <Member type="Method">private Void RoundedRectangleRegion_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">protected virtual Void AddShapePath(GraphicsPath graphicsPath, Rectangle rect)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TriangleRegion</Name>
        <Access>Public</Access>
        <Location left="1470" top="1412" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public TriangleAngle Angle { get; set; }</Member>
        <Member type="Constructor">public TriangleRegion()</Member>
        <Member type="Method">private Void TriangleRegion_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">protected virtual Void AddShapePath(GraphicsPath graphicsPath, Rectangle rect)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>InputManager</Name>
        <Access>Public</Access>
        <Location left="1920" top="278" />
        <Size width="162" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static MouseState mouseState</Member>
        <Member type="Field">private static MouseState oldMouseState</Member>
        <Member type="Property">public static Point MousePosition { get; }</Member>
        <Member type="Property">public static Point PreviousMousePosition { get; }</Member>
        <Member type="Property">public static Point MousePosition0Based { get; }</Member>
        <Member type="Property">public static Point PreviousMousePosition0Based { get; }</Member>
        <Member type="Property">public static Point MouseVelocity { get; }</Member>
        <Member type="Property">public static Boolean IsMouseMoved { get; }</Member>
        <Member type="Constructor">static InputManager()</Member>
        <Member type="Method">public static Void Update()</Member>
        <Member type="Method">public static Boolean IsMouseDown(MouseButtons button)</Member>
        <Member type="Method">public static Boolean IsBeforeMouseDown(MouseButtons button)</Member>
        <Member type="Method">public static Boolean IsMousePressed(MouseButtons button)</Member>
        <Member type="Method">public static Boolean IsMouseReleased(MouseButtons button)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NodeObject</Name>
        <Access>Internal</Access>
        <Location left="1430" top="370" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private PointF position</Member>
        <Member type="Property">public PointF Position { get; set; }</Member>
        <Member type="Property">public Single NodeSize { get; set; }</Member>
        <Member type="Property">public NodeShape Shape { get; set; }</Member>
        <Member type="Constructor">public NodeObject(Single x = 0, Single y = 0)</Member>
        <Member type="Method">public override Void Draw(Graphics g)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ResizeManager</Name>
        <Access>Public</Access>
        <Location left="1664" top="336" />
        <Size width="162" height="400" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Boolean visible</Member>
        <Member type="Field">private AreaManager areaManager</Member>
        <Member type="Field">private NodeObject[] nodes</Member>
        <Member type="Field">private Rectangle tempRect</Member>
        <Member type="Property">public Boolean Visible { get; set; }</Member>
        <Member type="Property">public Boolean IsResizing { get; private set; }</Member>
        <Member type="Property">public Int32 MaxMoveSpeed { get; set; }</Member>
        <Member type="Property">public Int32 MinMoveSpeed { get; set; }</Member>
        <Member type="Property">public Boolean IsBottomRightResizing { get; set; }</Member>
        <Member type="Constructor">public ResizeManager(Surface surface, AreaManager areaManager)</Member>
        <Member type="Method">public Void Update()</Member>
        <Member type="Method">private Void surface_KeyDown(Object sender, KeyEventArgs e)</Member>
        <Member type="Method">public Boolean IsCursorOnNode()</Member>
        <Member type="Method">public Void Show()</Member>
        <Member type="Method">public Void Hide()</Member>
        <Member type="Method">public Void UpdateNodePositions()</Member>
        <Member type="Method">private Void UpdateNodePositions(Rectangle rect)</Member>
        <Member type="Method">public Void MoveCurrentArea(Int32 x, Int32 y)</Member>
        <Member type="Method">public Void ResizeCurrentArea(Int32 x, Int32 y, Boolean isBottomRightMoving)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ShapeCaptureHelpers</Name>
        <Access>Public</Access>
        <Location left="1106" top="278" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static Image GetRegionImage(Image surfaceImage, GraphicsPath regionFillPath, GraphicsPath regionDrawPath, SurfaceOptions options)</Member>
        <Member type="Method">private static Void MoveGraphicsPath(GraphicsPath gp, Int32 x, Int32 y)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SurfaceOptions</Name>
        <Access>Public</Access>
        <Location left="906" top="278" />
        <Size width="162" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Boolean QuickCrop { get; set; }</Member>
        <Member type="Property">public Boolean ShowInfo { get; set; }</Member>
        <Member type="Property">public Boolean ShowMagnifier { get; set; }</Member>
        <Member type="Property">public Int32 MagnifierPixelCount { get; set; }</Member>
        <Member type="Property">public Int32 MagnifierPixelSize { get; set; }</Member>
        <Member type="Property">public Boolean ShowCrosshair { get; set; }</Member>
        <Member type="Property">public Boolean UseDimming { get; set; }</Member>
        <Member type="Property">public Boolean ShowFPS { get; set; }</Member>
        <Member type="Property">public Boolean DrawBorder { get; set; }</Member>
        <Member type="Property">public Boolean ForceWindowCapture { get; set; }</Member>
        <Member type="Property">public Boolean IncludeControls { get; set; }</Member>
        <Member type="Property">public Int32 MinMoveSpeed { get; set; }</Member>
        <Member type="Property">public Int32 MaxMoveSpeed { get; set; }</Member>
        <Member type="Property">public Boolean IsFixedSize { get; set; }</Member>
        <Member type="Property">public Size FixedSize { get; set; }</Member>
        <Member type="Constructor">public SurfaceOptions()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScreenRecorder</Name>
        <Access>Public</Access>
        <Location left="2188" top="944" />
        <Size width="162" height="536" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Int32 fps</Member>
        <Member type="Field">private Int32 delay</Member>
        <Member type="Field">private Int32 frameCount</Member>
        <Member type="Field">private Int32 previousProgress</Member>
        <Member type="Field">private Single durationSeconds</Member>
        <Member type="Field">private Rectangle captureRectangle</Member>
        <Member type="Field">private ImageCache imgCache</Member>
        <Member type="Field">private FFmpegHelper ffmpegCli</Member>
        <Member type="Field">private Boolean stopRequest</Member>
        <Member type="Property">public Boolean IsRecording { get; private set; }</Member>
        <Member type="Property">public Boolean WriteCompressed { get; set; }</Member>
        <Member type="Property">public Int32 FPS { get; set; }</Member>
        <Member type="Property">public Single DurationSeconds { get; set; }</Member>
        <Member type="Property">public Rectangle CaptureRectangle { get; private set; }</Member>
        <Member type="Property">public String CachePath { get; private set; }</Member>
        <Member type="Property">public ScreenRecordOutput OutputType { get; private set; }</Member>
        <Member type="Property">public ScreencastOptions Options { get; set; }</Member>
        <Member type="Event">public event ProgressEventHandler EncodingProgressChanged</Member>
        <Member type="Constructor">public ScreenRecorder(ScreenRecordOutput outputType, ScreencastOptions options, Rectangle captureRectangle)</Member>
        <Member type="Method">private Void UpdateInfo()</Member>
        <Member type="Method">public Void StartRecording()</Member>
        <Member type="Method">private Void RecordUsingCache()</Member>
        <Member type="Method">public Void StopRecording()</Member>
        <Member type="Method">public Void SaveAsGIF(String path, GIFQuality quality)</Member>
        <Member type="Method">public Void EncodeUsingCommandLine(VideoEncoder encoder, String sourceFilePath, String targetFilePath)</Member>
        <Member type="Method">protected Void OnEncodingProgressChanged(Int32 progress)</Member>
        <Member type="Method">public Void Dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HardDiskCache</Name>
        <Access>Public</Access>
        <Location left="2120" top="2050" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private FileStream fsCache</Member>
        <Member type="Field">private List&lt;LocationInfo&gt; indexList</Member>
        <Member type="Property">public Int32 Count { get; }</Member>
        <Member type="Constructor">public HardDiskCache(ScreencastOptions options)</Member>
        <Member type="Method">protected virtual Void WriteFrame(Image img)</Member>
        <Member type="Method">public override Void Dispose()</Member>
        <Member type="Method">public IEnumerable&lt;Image&gt; GetImageEnumerator()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Screenshot</Name>
        <Access>Public</Access>
        <Location left="436" top="278" />
        <Size width="162" height="570" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public static Boolean RemoveOutsideScreenArea</Member>
        <Member type="Field">public static Boolean CaptureCursor</Member>
        <Member type="Field">public static Boolean CaptureClientArea</Member>
        <Member type="Field">public static Boolean CaptureShadow</Member>
        <Member type="Field">public static Int32 ShadowOffset</Member>
        <Member type="Field">public static Boolean AutoHideTaskbar</Member>
        <Member type="Field">private static Byte[,] windows7Corner</Member>
        <Member type="Field">private static Byte[,] windowsVistaCorner</Member>
        <Member type="Constructor">static Screenshot()</Member>
        <Member type="Method">public static Image CaptureRectangle(Rectangle rect)</Member>
        <Member type="Method">public static Image CaptureFullscreen()</Member>
        <Member type="Method">public static Image CaptureWindow(IntPtr handle)</Member>
        <Member type="Method">public static Image CaptureActiveWindow()</Member>
        <Member type="Method">public static Image CaptureActiveMonitor()</Member>
        <Member type="Method">public static Image CaptureRectangleNative(Rectangle rect, Boolean captureCursor = False)</Member>
        <Member type="Method">public static Image CaptureRectangleNative(IntPtr handle, Rectangle rect, Boolean captureCursor = False)</Member>
        <Member type="Method">public static Image CaptureRectangleManaged(Rectangle rect)</Member>
        <Member type="Method">public static Image CaptureWindowTransparent(IntPtr handle)</Member>
        <Member type="Method">public static Image CaptureActiveWindowTransparent()</Member>
        <Member type="Method">private static Bitmap CreateTransparentImage(Bitmap whiteBackground, Bitmap blackBackground)</Member>
        <Member type="Method">private static Bitmap TrimTransparent(Bitmap bitmap)</Member>
        <Member type="Method">private static Rectangle TrimTransparentFindX(UnsafeBitmap unsafeBitmap, Rectangle rect)</Member>
        <Member type="Method">private static Rectangle TrimTransparentFindY(UnsafeBitmap unsafeBitmap, Rectangle rect)</Member>
        <Member type="Method">private static Rectangle TrimTransparentFindWidth(UnsafeBitmap unsafeBitmap, Rectangle rect)</Member>
        <Member type="Method">private static Rectangle TrimTransparentFindHeight(UnsafeBitmap unsafeBitmap, Rectangle rect)</Member>
        <Member type="Method">private static Bitmap QuickTrimTransparent(Bitmap bitmap)</Member>
        <Member type="Method">private static Void TrimShadow(Bitmap bitmap)</Member>
        <Member type="Method">private static Bitmap RemoveCorners(Image img)</Member>
        <Member type="Method">private static Bitmap RemoveCorners(Image img, Byte[,] cornerData)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WindowInfo</Name>
        <Access>Public</Access>
        <Location left="224" top="278" />
        <Size width="162" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IntPtr Handle { get; private set; }</Member>
        <Member type="Property">public String Text { get; }</Member>
        <Member type="Property">public String ClassName { get; }</Member>
        <Member type="Property">public Process Process { get; }</Member>
        <Member type="Property">public Rectangle Rectangle { get; }</Member>
        <Member type="Property">public Rectangle Rectangle0Based { get; }</Member>
        <Member type="Property">public Rectangle ClientRectangle { get; }</Member>
        <Member type="Property">public WindowStyles Styles { get; }</Member>
        <Member type="Property">public Boolean IsMaximized { get; }</Member>
        <Member type="Property">public Boolean IsMinimized { get; }</Member>
        <Member type="Property">public Boolean IsVisible { get; }</Member>
        <Member type="Property">public Icon Icon { get; }</Member>
        <Member type="Constructor">public WindowInfo(IntPtr handle)</Member>
        <Member type="Method">public override String ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WindowsList</Name>
        <Access>Public</Access>
        <Location left="12" top="278" />
        <Size width="162" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private String[] ignoreList</Member>
        <Member type="Field">private List&lt;WindowInfo&gt; windows</Member>
        <Member type="Property">public List&lt;IntPtr&gt; IgnoreWindows { get; set; }</Member>
        <Member type="Constructor">public WindowsList()</Member>
        <Member type="Constructor">public WindowsList(IntPtr ignoreWindow)</Member>
        <Member type="Method">public List&lt;WindowInfo&gt; GetWindowsList()</Member>
        <Member type="Method">public List&lt;WindowInfo&gt; GetVisibleWindowsList()</Member>
        <Member type="Method">private Boolean IsValidWindow(WindowInfo window)</Member>
        <Member type="Method">private Boolean IsClassNameAllowed(WindowInfo window)</Member>
        <Member type="Method">private Boolean EvalWindows(IntPtr hWnd, IntPtr lParam)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WindowsRectangleList</Name>
        <Access>Public</Access>
        <Location left="1708" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private List&lt;Rectangle&gt; rectangles</Member>
        <Member type="Property">public IntPtr IgnoreHandle { get; set; }</Member>
        <Member type="Property">public Boolean IncludeChildWindows { get; set; }</Member>
        <Member type="Constructor">public WindowsRectangleList()</Member>
        <Member type="Method">public List&lt;Rectangle&gt; GetWindowsRectangleList()</Member>
        <Member type="Method">private Boolean EvalWindow(IntPtr hWnd, IntPtr lParam)</Member>
        <Member type="Method">private Boolean EvalControl(IntPtr hWnd, IntPtr lParam)</Member>
        <Member type="Method">private Boolean CheckHandle(IntPtr handle, Boolean isWindow)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>MouseState</Name>
        <Access>Public</Access>
        <Location left="2148" top="376" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public MouseButtons Buttons { get; private set; }</Member>
        <Member type="Property">public Point Position { get; private set; }</Member>
        <Member type="Property">public Point ZeroBasedPosition { get; private set; }</Member>
        <Member type="Method">public Void Update()</Member>
      </Entity>
      <Entity type="Delegate">
        <Name>ProgressEventHandler</Name>
        <Access>Public</Access>
        <Location left="2424" top="986" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <ReturnType>Void</ReturnType>
        <Param>Int32 progress</Param>
      </Entity>
      <Entity type="Enum">
        <Name>ScreenRecordOutput</Name>
        <Access>Public</Access>
        <Location left="1284" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>FFmpeg = 0</Value>
        <Value>GIF = 1</Value>
      </Entity>
      <Entity type="Enum">
        <Name>SurfaceResult</Name>
        <Access>Public</Access>
        <Location left="1072" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>Close = 1</Value>
        <Value>Region = 2</Value>
        <Value>Fullscreen = 3</Value>
      </Entity>
      <Entity type="Enum">
        <Name>NodePosition</Name>
        <Access>Internal</Access>
        <Location left="860" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>TopLeft = 0</Value>
        <Value>Top = 1</Value>
        <Value>TopRight = 2</Value>
        <Value>Right = 3</Value>
        <Value>BottomRight = 4</Value>
        <Value>Bottom = 5</Value>
        <Value>BottomLeft = 6</Value>
        <Value>Left = 7</Value>
      </Entity>
      <Entity type="Enum">
        <Name>NodeShape</Name>
        <Access>Internal</Access>
        <Location left="648" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Square = 0</Value>
        <Value>Circle = 1</Value>
        <Value>Diamond = 2</Value>
      </Entity>
      <Entity type="Enum">
        <Name>FFmpegVideoCodec</Name>
        <Access>Public</Access>
        <Location left="436" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>libx264 = 0</Value>
        <Value>libvpx = 1</Value>
        <Value>libxvid = 2</Value>
      </Entity>
      <Entity type="Enum">
        <Name>FFmpegPreset</Name>
        <Access>Public</Access>
        <Location left="224" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>ultrafast = 0</Value>
        <Value>superfast = 1</Value>
        <Value>veryfast = 2</Value>
        <Value>faster = 3</Value>
        <Value>fast = 4</Value>
        <Value>medium = 5</Value>
        <Value>slow = 6</Value>
        <Value>slower = 7</Value>
        <Value>veryslow = 8</Value>
      </Entity>
      <Entity type="Enum">
        <Name>FFmpegAudioCodec</Name>
        <Access>Public</Access>
        <Location left="12" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>libvoaacenc = 0</Value>
        <Value>libvorbis = 1</Value>
        <Value>libmp3lame = 2</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Nesting" first="26" second="33">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="14" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="15" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="16" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="17" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="18" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="19" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="20" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="22" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="27" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="6" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>Options</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="12" second="14">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>surface</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="17" second="22">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>lastNode</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="21" second="32">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>mouseState</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="21" second="32">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>oldMouseState</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="23" second="12">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>areaManager</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="23" second="22">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>nodes</StartRole>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="26" second="10">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>imgCache</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="26" second="4">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>ffmpegCli</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>